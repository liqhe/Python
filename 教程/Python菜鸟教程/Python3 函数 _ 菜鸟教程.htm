<!DOCTYPE html>
<!-- saved from url=(0051)http://www.runoob.com/python3/python3-function.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	
  <meta property="qc:admins" content="465267610762567726375">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Python3 函数 | 菜鸟教程</title>

  <link rel="dns-prefetch" href="http://s.w.org/">
<link rel="stylesheet" id="wp-block-library-css" href="./Python3 函数 _ 菜鸟教程_files/style.min.css" type="text/css" media="all">
<link rel="canonical" href="http://www.runoob.com/python3/python3-function.html">
<meta name="keywords" content="Python3 函数">
<meta name="description" content="Python3 函数 函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。但你也可以自己创建函数，这被叫做用户自定义函数。  定义一个函数  你可以定义一个由自己想要功能的函数，以下是简单的规则：  函数代码块以 def 关键词开头，后接函数标识符名称和圆括号 ()。  任何传入参数和自变量必须放在圆括号中间，圆括号之..">
		
	<link rel="shortcut icon" href="http://static.runoob.com/images/favicon.ico" mce_href="//static.runoob.com/images/favicon.ico" type="image/x-icon">
	<link rel="stylesheet" href="./Python3 函数 _ 菜鸟教程_files/style.css" type="text/css" media="all">	
	<link rel="stylesheet" href="./Python3 函数 _ 菜鸟教程_files/font-awesome.min.css" media="all">	
  <!--[if gte IE 9]><!-->
  <script type="text/javascript" async="" src="./Python3 函数 _ 菜鸟教程_files/analytics.js"></script><script src="./Python3 函数 _ 菜鸟教程_files/hm.js"></script><script src="./Python3 函数 _ 菜鸟教程_files/osd.js"></script><script src="./Python3 函数 _ 菜鸟教程_files/ca-pub-5751451760833794.js"></script><script src="./Python3 函数 _ 菜鸟教程_files/jquery.min.js"></script>
  <!--<![endif]-->
  <!--[if lt IE 9]>
     <script src="//cdn.staticfile.org/jquery/1.9.1/jquery.min.js"></script>
     <script src="//cdn.staticfile.org/html5shiv/r29/html5.min.js"></script>
  <![endif]-->
  <link rel="apple-touch-icon" href="http://static.runoob.com/images/icon/mobile-icon.png">
  <meta name="apple-mobile-web-app-title" content="菜鸟教程">
<link rel="preload" href="./Python3 函数 _ 菜鸟教程_files/f(5).txt" as="script"><script type="text/javascript" src="./Python3 函数 _ 菜鸟教程_files/f(5).txt"></script><link rel="preload" href="http://pagead2.googlesyndication.com/pagead/js/r20190227/r20190131/show_ads_impl.js" as="script"><link rel="stylesheet" type="text/css" href="./Python3 函数 _ 菜鸟教程_files/prettify.css"></head>
<body style="">

<!--  头部 -->
<div class="container logo-search">

  <div class="col search row-search-mobile">
    <form action="http://www.runoob.com/python3/index.php">
      <input class="placeholder" placeholder="搜索……" name="s" autocomplete="off">
    </form>
  </div>

  <div class="row">
    <div class="col logo">
      <h1><a href="http://www.runoob.com/">菜鸟教程 -- 学的不仅是技术，更是梦想！</a></h1>
    </div>
        <div class="col right-list"> 
    <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style=""> <i class="fa fa-navicon"></i> </button>
    </div>
        <div class="col search search-desktop last">
      <form action="http://www.runoob.com/" target="_blank">
        <input class="placeholder" id="s" name="s" placeholder="搜索……" autocomplete="off">
      </form>
    </div>
  </div>
</div>


<!-- 导航栏 -->
<!-- 导航栏 -->
<div class="container navigation">
	<div class="row">
		<div class="col nav">
			<ul class="pc-nav">
				<li><a href="http://www.runoob.com/">首页</a></li>
				<li><a href="http://www.runoob.com/html/html-tutorial.html">HTML</a></li>
				<li><a href="http://www.runoob.com/css/css-tutorial.html">CSS</a></li>
				<li><a href="http://www.runoob.com/js/js-tutorial.html">JavaScript</a></li>
				<li><a href="http://www.runoob.com/jquery/jquery-tutorial.html">jQuery</a></li>
				<li><a href="http://www.runoob.com/bootstrap/bootstrap-tutorial.html">Bootstrap</a></li>
				<li><a href="http://www.runoob.com/sql/sql-tutorial.html">SQL</a></li>
				<li><a href="http://www.runoob.com/mysql/mysql-tutorial.html">MySQL</a></li>
				<li><a href="http://www.runoob.com/php/php-tutorial.html">PHP</a></li>
				<li><a href="http://www.runoob.com/python/python-tutorial.html">Python2</a></li>
				<li><a href="http://www.runoob.com/python3/python3-tutorial.html">Python3</a></li>
				<li><a href="http://www.runoob.com/cprogramming/c-tutorial.html">C</a></li>
				<li><a href="http://www.runoob.com/cplusplus/cpp-tutorial.html">C++</a></li>
				<li><a href="http://www.runoob.com/csharp/csharp-tutorial.html">C#</a></li>
				<li><a href="http://www.runoob.com/java/java-tutorial.html">Java</a></li>
				<li><a href="http://www.runoob.com/browser-history">本地书签</a></li>
				
				<!--
				<li><a href="javascript:;" class="runoob-pop">登录</a></li>
				-->
      		</ul>
			<ul class="mobile-nav">
				<li><a href="http://www.runoob.com/">首页</a></li>
				<li><a href="http://www.runoob.com/html/html-tutorial.html">HTML</a></li>
				<li><a href="http://www.runoob.com/css/css-tutorial.html">CSS</a></li>
				<li><a href="http://www.runoob.com/js/js-tutorial.html">JS</a></li>
				<li><a href="http://www.runoob.com/browser-history">本地书签</a></li>
				<a href="javascript:void(0)" class="search-reveal">Search</a> 
			</ul>
			
		</div>
	</div>
</div><!--  内容  -->
<div class="container main">
	<!-- 中间 -->
	<div class="row">
	
<div class="col left-column">
	<div class="tab">Python 3 教程	<a data-cate="124" href="javascript:void(0);" title="夜间模式" id="moon"><i class="fa fa-moon-o" aria-hidden="true" style="font-size: 1.4em;float: right;margin: 4px 6px 0;"></i></a>
	<a data-cate="124" style="display:none;" href="javascript:void(0);" title="日间模式" id="sun"><i class="fa fa-sun-o" aria-hidden="true" style="font-size: 1.4em;float: right;margin: 4px 6px 0;"></i></a>
	</div>
	<div class="sidebar-box gallery-list">
		<div class="design" id="leftcolumn">
						<a target="_top" title="Python3 教程" href="http://www.runoob.com/python3/python3-tutorial.html">
			Python3 教程			</a>
			<a target="_top" title=" Python3 环境搭建" href="http://www.runoob.com/python3/python3-install.html"> Python3 环境搭建</a>
<a target="_top" title=" Python3 基础语法" href="http://www.runoob.com/python3/python3-basic-syntax.html"> Python3 基础语法 </a>
<a target="_top" title=" Python3 基本数据类型" href="http://www.runoob.com/python3/python3-data-type.html"> Python3 基本数据类型 </a>			<a target="_top" title="Python3 解释器" href="http://www.runoob.com/python3/python3-interpreter.html">
			Python3 解释器			</a>
						<a target="_top" title="Python3 注释" href="http://www.runoob.com/python3/python3-comment.html">
			Python3 注释			</a>
			<a target="_top" title="Python3 运算符" href="http://www.runoob.com/python3/python3-basic-operators.html"> Python3 运算符 </a>			<a target="_top" title="Python3 数字(Number)" href="http://www.runoob.com/python3/python3-number.html">
			Python3 数字(Number)			</a>
						<a target="_top" title="Python3 字符串" href="http://www.runoob.com/python3/python3-string.html">
			Python3 字符串			</a>
						<a target="_top" title="Python3 列表" href="http://www.runoob.com/python3/python3-list.html">
			Python3 列表			</a>
			<a target="_top" title="Python3 元组" href="http://www.runoob.com/python3/python3-tuple.html"> Python3 元组 </a>
<a target="_top" title="Python3 字典" href="http://www.runoob.com/python3/python3-dictionary.html"> Python3 字典</a>
<a target="_top" title="Python3 集合" href="http://www.runoob.com/python3/python3-set.html"> Python3 集合</a>			<a target="_top" title="Python3 编程第一步" href="http://www.runoob.com/python3/python3-step1.html">
			Python3 编程第一步			</a>
						<a target="_top" title="Python3 条件控制" href="http://www.runoob.com/python3/python3-conditional-statements.html">
			Python3 条件控制			</a>
						<a target="_top" title="Python3 循环语句" href="http://www.runoob.com/python3/python3-loop.html">
			Python3 循环语句			</a>
			<a target="_top" title="Python3 迭代器与生成器" href="http://www.runoob.com/python3/python3-iterator-generator.html"> Python3 迭代器与生成器</a>			<a target="_top" title="Python3 函数" href="http://www.runoob.com/python3/python3-function.html" style="background-color: rgb(150, 185, 125); font-weight: bold; color: rgb(255, 255, 255);">
			Python3 函数			</a>
						<a target="_top" title="Python3 数据结构" href="http://www.runoob.com/python3/python3-data-structure.html">
			Python3 数据结构			</a>
						<a target="_top" title="Python3 模块" href="http://www.runoob.com/python3/python3-module.html">
			Python3 模块			</a>
						<a target="_top" title="Python3 输入和输出" href="http://www.runoob.com/python3/python3-inputoutput.html">
			Python3 输入和输出			</a>
			<a target="_top" title="Python3 File" href="http://www.runoob.com/python3/python3-file-methods.html"> Python3 File </a>
<a target="_top" title="Python3 OS" href="http://www.runoob.com/python3/python3-os-file-methods.html"> Python3 OS </a>			<a target="_top" title="Python3 错误和异常" href="http://www.runoob.com/python3/python3-errors-execptions.html">
			Python3 错误和异常			</a>
						<a target="_top" title="Python3 面向对象" href="http://www.runoob.com/python3/python3-class.html">
			Python3 面向对象			</a>
						<a target="_top" title="Python3 标准库概览" href="http://www.runoob.com/python3/python3-stdlib.html">
			Python3 标准库概览			</a>
						<a target="_top" title="Python3 实例" href="http://www.runoob.com/python3/python3-examples.html">
			Python3 实例			</a>
			<a target="_blank" title="Python 测验" href="http://www.runoob.com/quiz/python-quiz.html"> Python 测验 </a>
<br><h2 class="left"><span class="left_h2">Python3</span> 高级教程</h2>			<a target="_top" title="Python3 正则表达式" href="http://www.runoob.com/python3/python3-reg-expressions.html">
			Python3 正则表达式			</a>
						<a target="_top" title="Python3 CGI编程" href="http://www.runoob.com/python3/python3-cgi-programming.html">
			Python3 CGI编程			</a>
			<a target="_top" title="Python MySQL - mysql-connector 驱动" href="http://www.runoob.com/python3/python-mysql-connector.html">Python3 MySQL(mysql-connector)</a>			<a target="_top" title="Python3 MySQL 数据库连接 – PyMySQL 驱动" href="http://www.runoob.com/python3/python3-mysql.html">
			Python3 MySQL(PyMySQL)			</a>
						<a target="_top" title="Python3 网络编程" href="http://www.runoob.com/python3/python3-socket.html">
			Python3 网络编程			</a>
						<a target="_top" title="Python3 SMTP发送邮件" href="http://www.runoob.com/python3/python3-smtp.html">
			Python3 SMTP发送邮件			</a>
						<a target="_top" title="Python3 多线程" href="http://www.runoob.com/python3/python3-multithreading.html">
			Python3 多线程			</a>
						<a target="_top" title="Python3 XML 解析" href="http://www.runoob.com/python3/python3-xml-processing.html">
			Python3 XML 解析			</a>
						<a target="_top" title="Python3 JSON 数据解析" href="http://www.runoob.com/python3/python3-json.html">
			Python3 JSON			</a>
						<a target="_top" title="Python3 日期和时间" href="http://www.runoob.com/python3/python3-date-time.html">
			Python3 日期和时间			</a>
						<a target="_top" title="Python3 内置函数" href="http://www.runoob.com/python3/python3-built-in-functions.html">
			Python3 内置函数			</a>
						<a target="_top" title="Python MongoDB" href="http://www.runoob.com/python3/python-mongodb.html">
			Python MongoDB			</a>
						<a target="_top" title="Python uWSGI  安装配置" href="http://www.runoob.com/python3/python-uwsgi.html">
			Python uWSGI  安装配置			</a>
				
		</div>
	</div>	
</div>	<div class="col middle-column">
		
	
	<div class="article">
			<div class="article-heading-ad" style="display: none;">
		
		</div>
		<div class="previous-next-links">
			<div class="previous-design-link"><a href="http://www.runoob.com/python3/python3-iterator-generator.html"><i style="font-size:16px;" class="fa fa-arrow-left" aria-hidden="true"></i></a> <a href="http://www.runoob.com/python3/python3-iterator-generator.html" rel="prev" title="Python3 迭代器与生成器">Python3 迭代器与生成器</a> </div>
			<div class="next-design-link"><a href="http://www.runoob.com/python3/python3-data-structure.html" rel="next" title="Python3 数据结构">Python3 数据结构</a> <a href="http://www.runoob.com/python3/python3-data-structure.html"><i style="font-size:16px;" class="fa fa-arrow-right" aria-hidden="true"></i></a></div>
		</div>
		<div class="article-body">
		
			<div class="article-intro" id="content">
			
			<h1>Python3 函数</h1>
<p>函数是组织好的，可重复使用的，用来实现单一，或相关联功能的代码段。</p><p>函数能提高应用的模块性，和代码的重复利用率。你已经知道Python提供了许多内建函数，比如print()。但你也可以自己创建函数，这被叫做用户自定义函数。</p>
<hr>
<h2>定义一个函数</h2>

<p>你可以定义一个由自己想要功能的函数，以下是简单的规则：</p>
<ul>
<li>函数代码块以 <b>def</b> 关键词开头，后接函数标识符名称和圆括号 <b>()</b>。</li>

<li>任何传入参数和自变量必须放在圆括号中间，圆括号之间可以用于定义参数。</li>

<li>函数的第一行语句可以选择性地使用文档字符串—用于存放函数说明。</li>

<li>函数内容以冒号起始，并且缩进。</li>

<li><strong>return [表达式]</strong> 结束函数，选择性地返回一个值给调用方。不带表达式的return相当于返回 None。</li>
</ul><hr>
<h3>语法</h3>
<p>Python 定义函数使用 def 关键字，一般格式如下：</p>
<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> </span><span class="pun">函数名（参数列表）:</span><span class="pln">
    </span><span class="pun">函数体</span></pre>

<p>默认情况下，参数值和参数名称是按函数声明中定义的顺序匹配起来的。</p>
<h3>实例</h3>
<p>让我们使用函数来输出"Hello World！"：</p>

<div class="example"> 
<div class="example_code">
<div class="hl-main"><span class="hl-code">&gt;&gt;&gt;</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">hello</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code"> :
   </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">Hello World!</span><span class="hl-quotes">"</span><span class="hl-brackets">)</span><span class="hl-code">
 
   
&gt;&gt;&gt; </span><span class="hl-identifier">hello</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">Hello</span><span class="hl-code"> </span><span class="hl-identifier">World</span><span class="hl-code">!
&gt;&gt;&gt;</span></div>
</div>
</div>
<p>
更复杂点的应用，函数中带上参数变量:</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment"># 计算面积函数</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">area</span><span class="hl-brackets">(</span><span class="hl-identifier">width</span><span class="hl-code">, </span><span class="hl-identifier">height</span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-reserved">return</span><span class="hl-code"> </span><span class="hl-identifier">width</span><span class="hl-code"> * </span><span class="hl-identifier">height</span><span class="hl-code">
 
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">print_welcome</span><span class="hl-brackets">(</span><span class="hl-identifier">name</span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">Welcome</span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">name</span><span class="hl-brackets">)</span><span class="hl-code">
 
</span><span class="hl-identifier">print_welcome</span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">Runoob</span><span class="hl-quotes">"</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">w</span><span class="hl-code"> = </span><span class="hl-number">4</span><span class="hl-code">
</span><span class="hl-identifier">h</span><span class="hl-code"> = </span><span class="hl-number">5</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">width =</span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">w</span><span class="hl-code">, </span><span class="hl-quotes">"</span><span class="hl-string"> height =</span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">h</span><span class="hl-code">, </span><span class="hl-quotes">"</span><span class="hl-string"> area =</span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">area</span><span class="hl-brackets">(</span><span class="hl-identifier">w</span><span class="hl-code">, </span><span class="hl-identifier">h</span><span class="hl-brackets">)</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="typ">Welcome</span><span class="pln"> </span><span class="typ">Runoob</span><span class="pln">
width </span><span class="pun">=</span><span class="pln"> </span><span class="lit">4</span><span class="pln">  height </span><span class="pun">=</span><span class="pln"> </span><span class="lit">5</span><span class="pln">  area </span><span class="pun">=</span><span class="pln"> </span><span class="lit">20</span></pre>
<hr>
<h2>函数调用</h2>
<p>定义一个函数：给了函数一个名称，指定了函数里包含的参数，和代码块结构。</p>

<p>这个函数的基本结构完成以后，你可以通过另一个函数调用执行，也可以直接从 Python 命令提示符执行。</p>

<p>如下实例调用了 <strong>printme()</strong> 函数：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment"># 定义函数</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printme</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">str</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-comment"># 打印任何传入的字符串</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">str</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code">
 
</span><span class="hl-comment"># 调用函数</span><span class="hl-code">
</span><span class="hl-identifier">printme</span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">我要调用用户自定义函数!</span><span class="hl-quotes">"</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">printme</span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">再次调用同一函数</span><span class="hl-quotes">"</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">我要调用用户自定义函数!</span><span class="pln">
</span><span class="pun">再次调用同一函数</span></pre>
<hr><h2>参数传递</h2>
<p>在 python 中，类型属于对象，变量是没有类型的：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">a</span><span class="pun">=[</span><span class="lit">1</span><span class="pun">,</span><span class="lit">2</span><span class="pun">,</span><span class="lit">3</span><span class="pun">]</span><span class="pln">

a</span><span class="pun">=</span><span class="str">"Runoob"</span></pre>
<p>以上代码中，<b>[1,2,3]</b> 是 List 类型，<b>"Runoob"</b> 是 String 类型，而变量 a 是没有类型，她仅仅是一个对象的引用（一个指针），可以是指向 List 类型对象，也可以是指向 String 类型对象。</p>
<h3>可更改(mutable)与不可更改(immutable)对象</h3>
<p>在 python 中，strings, tuples, 和 numbers 是不可更改的对象，而 list,dict 等则是可以修改的对象。</p>
<ul><li><p><b>
不可变类型：</b>变量赋值 <b>a=5</b> 后再赋值 <b>a=10</b>，这里实际是新生成一个 int 值对象 10，再让 a 指向它，而 5 被丢弃，不是改变a的值，相当于新生成了a。</p></li><li><p><b>
可变类型：</b>变量赋值 <b>la=[1,2,3,4]</b> 后再赋值 <b>la[2]=5</b> 则是将 list la 的第三个元素值更改，本身la没有动，只是其内部的一部分值被修改了。</p></li></ul>
<p>python 函数的参数传递：</p>
<ul><li><p><b>
不可变类型：</b>类似 c++ 的值传递，如 整数、字符串、元组。如fun（a），传递的只是a的值，没有影响a对象本身。比如在 fun（a）内部修改 a 的值，只是修改另一个复制的对象，不会影响 a 本身。</p></li><li><p><b>
可变类型：</b>类似 c++ 的引用传递，如 列表，字典。如 fun（la），则是将 la 真正的传过去，修改后fun外部的la也会受影响</p></li></ul>
<p>python 中一切都是对象，严格意义我们不能说值传递还是引用传递，我们应该说传不可变对象和传可变对象。</p>
<h3>python 传不可变对象实例</h3>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">ChangeInt</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">a</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-identifier">a</span><span class="hl-code"> = </span><span class="hl-number">10</span><span class="hl-code">
 
</span><span class="hl-identifier">b</span><span class="hl-code"> = </span><span class="hl-number">2</span><span class="hl-code">
</span><span class="hl-identifier">ChangeInt</span><span class="hl-brackets">(</span><span class="hl-identifier">b</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">b</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code"> </span><span class="hl-comment"># 结果是 2</span></div>
</div>
</div>
<p>实例中有 int 对象 2，指向它的变量是 b，在传递给 ChangeInt 函数时，按传值的方式复制了变量 b，a 和 b 都指向了同一个 Int 对象，在 a=10 时，则新生成一个 int 值对象 10，并让 a 指向它。</p>
<h3>传可变对象实例</h3>


<p>可变对象在函数里修改了参数，那么在调用这个函数的函数里，原始的参数也被改变了。例如：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment"># 可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">changeme</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">mylist</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">修改传入的列表</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">mylist</span><span class="hl-code">.</span><span class="hl-identifier">append</span><span class="hl-brackets">(</span><span class="hl-brackets">[</span><span class="hl-number">1</span><span class="hl-code">,</span><span class="hl-number">2</span><span class="hl-code">,</span><span class="hl-number">3</span><span class="hl-code">,</span><span class="hl-number">4</span><span class="hl-brackets">]</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">函数内取值: </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">mylist</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code">
 
</span><span class="hl-comment"># 调用changeme函数</span><span class="hl-code">
</span><span class="hl-identifier">mylist</span><span class="hl-code"> = </span><span class="hl-brackets">[</span><span class="hl-number">10</span><span class="hl-code">,</span><span class="hl-number">20</span><span class="hl-code">,</span><span class="hl-number">30</span><span class="hl-brackets">]</span><span class="hl-code">
</span><span class="hl-identifier">changeme</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">mylist</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">函数外取值: </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">mylist</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>传入函数的和在末尾添加新内容的对象用的是同一个引用。故输出结果如下：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">函数内取值:</span><span class="pln">  </span><span class="pun">[</span><span class="lit">10</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20</span><span class="pun">,</span><span class="pln"> </span><span class="lit">30</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">]]</span><span class="pln">
</span><span class="pun">函数外取值:</span><span class="pln">  </span><span class="pun">[</span><span class="lit">10</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20</span><span class="pun">,</span><span class="pln"> </span><span class="lit">30</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">]]</span></pre><hr>
<h2>参数</h2>
<p>以下是调用函数时可使用的正式参数类型：</p>
<ul>
<li>必需参数</li>

<li>关键字参数</li>

<li>默认参数</li>

<li>不定长参数</li>
</ul>
<h3>必需参数</h3>

<p>必需参数须以正确的顺序传入函数。调用时的数量必须和声明时的一样。</p>

<p>调用printme()函数，你必须传入一个参数，不然会出现语法错误：</p>

<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment">#可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printme</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">str</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">打印任何传入的字符串</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">str</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code">
 
</span><span class="hl-comment">#调用printme函数</span><span class="hl-code">
</span><span class="hl-identifier">printme</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="typ">Traceback</span><span class="pln"> </span><span class="pun">(</span><span class="pln">most recent call </span><span class="kwd">last</span><span class="pun">):</span><span class="pln">
  </span><span class="typ">File</span><span class="pln"> </span><span class="str">"test.py"</span><span class="pun">,</span><span class="pln"> line </span><span class="lit">10</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> </span><span class="str">&lt;module&gt;</span><span class="pln">
    printme</span><span class="pun">()</span><span class="pln">
</span><span class="typ">TypeError</span><span class="pun">:</span><span class="pln"> printme</span><span class="pun">()</span><span class="pln"> missing </span><span class="lit">1</span><span class="pln"> required positional argument</span><span class="pun">:</span><span class="pln"> </span><span class="str">'str'</span></pre>
<h3>关键字参数</h3>

<p>关键字参数和函数调用关系紧密，函数调用使用关键字参数来确定传入的参数值。</p>
<p>使用关键字参数允许函数调用时参数的顺序与声明时不一致，因为 Python 解释器能够用参数名匹配参数值。</p>
<p>以下实例在函数 printme() 调用时使用参数名：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment">#可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printme</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">str</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">打印任何传入的字符串</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">str</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code">
 
</span><span class="hl-comment">#调用printme函数</span><span class="hl-code">
</span><span class="hl-identifier">printme</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">str</span><span class="hl-code"> = </span><span class="hl-quotes">"</span><span class="hl-string">菜鸟教程</span><span class="hl-quotes">"</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">菜鸟教程</span></pre>
<p>以下实例中演示了函数参数的使用不需要使用指定顺序：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment">#可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">name</span><span class="hl-code">, </span><span class="hl-identifier">age</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">打印任何传入的字符串</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">名字: </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">name</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">年龄: </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">age</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code">
 
</span><span class="hl-comment">#调用printinfo函数</span><span class="hl-code">
</span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">age</span><span class="hl-code">=</span><span class="hl-number">50</span><span class="hl-code">, </span><span class="hl-identifier">name</span><span class="hl-code">=</span><span class="hl-quotes">"</span><span class="hl-string">runoob</span><span class="hl-quotes">"</span><span class="hl-code"> </span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">名字:</span><span class="pln">  runoob
</span><span class="pun">年龄:</span><span class="pln">  </span><span class="lit">50</span></pre>
<h3>默认参数</h3>

<p>调用函数时，如果没有传递参数，则会使用默认参数。以下实例中如果没有传入 age 参数，则使用默认值：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment">#可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">name</span><span class="hl-code">, </span><span class="hl-identifier">age</span><span class="hl-code"> = </span><span class="hl-number">35</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">打印任何传入的字符串</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">名字: </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">name</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">年龄: </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">age</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code">
 
</span><span class="hl-comment">#调用printinfo函数</span><span class="hl-code">
</span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">age</span><span class="hl-code">=</span><span class="hl-number">50</span><span class="hl-code">, </span><span class="hl-identifier">name</span><span class="hl-code">=</span><span class="hl-quotes">"</span><span class="hl-string">runoob</span><span class="hl-quotes">"</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">------------------------</span><span class="hl-quotes">"</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">name</span><span class="hl-code">=</span><span class="hl-quotes">"</span><span class="hl-string">runoob</span><span class="hl-quotes">"</span><span class="hl-code"> </span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">名字:</span><span class="pln">  runoob
</span><span class="pun">年龄:</span><span class="pln">  </span><span class="lit">50</span><span class="pln">
</span><span class="pun">------------------------</span><span class="pln">
</span><span class="pun">名字:</span><span class="pln">  runoob
</span><span class="pun">年龄:</span><span class="pln">  </span><span class="lit">35</span></pre>
<h3>不定长参数</h3>

<p>你可能需要一个函数能处理比当初声明时更多的参数。这些参数叫做不定长参数，和上述 2 种参数不同，声明时不会命名。基本语法如下：</p>
<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> functionname</span><span class="pun">([</span><span class="pln">formal_args</span><span class="pun">,]</span><span class="pln"> </span><span class="pun">*</span><span class="pln">var_args_tuple </span><span class="pun">):</span><span class="pln">
   </span><span class="str">"函数_文档字符串"</span><span class="pln">
   function_suite
   </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">[</span><span class="pln">expression</span><span class="pun">]</span></pre>
<p>加了星号 <span class="marked">*</span> 的参数会以元组(tuple)的形式导入，存放所有未命名的变量参数。</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
  
</span><span class="hl-comment"># 可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">arg1</span><span class="hl-code">, *</span><span class="hl-identifier">vartuple</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">打印任何传入的参数</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">输出: </span><span class="hl-quotes">"</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">arg1</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">vartuple</span><span class="hl-brackets">)</span><span class="hl-code">
 
</span><span class="hl-comment"># 调用printinfo 函数</span><span class="hl-code">
</span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-number">70</span><span class="hl-code">, </span><span class="hl-number">60</span><span class="hl-code">, </span><span class="hl-number">50</span><span class="hl-code"> </span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">输出:</span><span class="pln"> 
</span><span class="lit">70</span><span class="pln">
</span><span class="pun">(</span><span class="lit">60</span><span class="pun">,</span><span class="pln"> </span><span class="lit">50</span><span class="pun">)</span></pre>


<p></p>如果在函数调用时没有指定参数，它就是一个空元组。我们也可以不向函数传递未命名的变量。如下实例：<p></p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment"># 可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">arg1</span><span class="hl-code">, *</span><span class="hl-identifier">vartuple</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">打印任何传入的参数</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">输出: </span><span class="hl-quotes">"</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">arg1</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">for</span><span class="hl-code"> </span><span class="hl-identifier">var</span><span class="hl-code"> </span><span class="hl-reserved">in</span><span class="hl-code"> </span><span class="hl-identifier">vartuple</span><span class="hl-code">:
      </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">var</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code">
 
</span><span class="hl-comment"># 调用printinfo 函数</span><span class="hl-code">
</span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-number">10</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-number">70</span><span class="hl-code">, </span><span class="hl-number">60</span><span class="hl-code">, </span><span class="hl-number">50</span><span class="hl-code"> </span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">输出:</span><span class="pln">
</span><span class="lit">10</span><span class="pln">
</span><span class="pun">输出:</span><span class="pln">
</span><span class="lit">70</span><span class="pln">
</span><span class="lit">60</span><span class="pln">
</span><span class="lit">50</span></pre><p>
还有一种就是参数带两个星号 <span class="marked">**</span>基本语法如下：</p>
<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> functionname</span><span class="pun">([</span><span class="pln">formal_args</span><span class="pun">,]</span><span class="pln"> </span><span class="pun">**</span><span class="pln">var_args_dict </span><span class="pun">):</span><span class="pln">
   </span><span class="str">"函数_文档字符串"</span><span class="pln">
   function_suite
   </span><span class="kwd">return</span><span class="pln"> </span><span class="pun">[</span><span class="pln">expression</span><span class="pun">]</span></pre><p>加了两个星号 <span class="marked">**</span> 的参数会以字典的形式导入。</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
  
</span><span class="hl-comment"># 可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">arg1</span><span class="hl-code">, **</span><span class="hl-identifier">vardict</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-quotes">"</span><span class="hl-string">打印任何传入的参数</span><span class="hl-quotes">"</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">输出: </span><span class="hl-quotes">"</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">arg1</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-identifier">vardict</span><span class="hl-brackets">)</span><span class="hl-code">
 
</span><span class="hl-comment"># 调用printinfo 函数</span><span class="hl-code">
</span><span class="hl-identifier">printinfo</span><span class="hl-brackets">(</span><span class="hl-number">1</span><span class="hl-code">, </span><span class="hl-identifier">a</span><span class="hl-code">=</span><span class="hl-number">2</span><span class="hl-code">,</span><span class="hl-identifier">b</span><span class="hl-code">=</span><span class="hl-number">3</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">输出:</span><span class="pln"> 
</span><span class="lit">1</span><span class="pln">
</span><span class="pun">{</span><span class="str">'a'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="str">'b'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span><span class="pun">}</span></pre>
<p>声明函数时，参数中星号 <span class="marked">*</span> 可以单独出现，例如:</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> f</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln">b</span><span class="pun">,*,</span><span class="pln">c</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> a</span><span class="pun">+</span><span class="pln">b</span><span class="pun">+</span><span class="pln">c</span></pre>

<p>如果单独出现星号 <span class="marked">*</span> 后的参数必须用关键字传入。</p>

<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">def</span><span class="pln"> f</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln">b</span><span class="pun">,*,</span><span class="pln">c</span><span class="pun">):</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     </span><span class="kwd">return</span><span class="pln"> a</span><span class="pun">+</span><span class="pln">b</span><span class="pun">+</span><span class="pln">c
</span><span class="pun">...</span><span class="pln"> 
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="lit">2</span><span class="pun">,</span><span class="lit">3</span><span class="pun">)</span><span class="pln">   </span><span class="com"># 报错</span><span class="pln">
</span><span class="typ">Traceback</span><span class="pln"> </span><span class="pun">(</span><span class="pln">most recent call </span><span class="kwd">last</span><span class="pun">):</span><span class="pln">
  </span><span class="typ">File</span><span class="pln"> </span><span class="str">"&lt;stdin&gt;"</span><span class="pun">,</span><span class="pln"> line </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> </span><span class="str">&lt;module&gt;</span><span class="pln">
</span><span class="typ">TypeError</span><span class="pun">:</span><span class="pln"> f</span><span class="pun">()</span><span class="pln"> takes </span><span class="lit">2</span><span class="pln"> positional arguments but </span><span class="lit">3</span><span class="pln"> were given
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="lit">2</span><span class="pun">,</span><span class="pln">c</span><span class="pun">=</span><span class="lit">3</span><span class="pun">)</span><span class="pln"> </span><span class="com"># 正常</span><span class="pln">
</span><span class="lit">6</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span></pre>

<hr><h2>匿名函数</h2>

<p>python 使用 lambda 来创建匿名函数。</p>
<p>所谓匿名，意即不再使用 def 语句这样标准的形式定义一个函数。</p>
<ul>

<li>lambda 只是一个表达式，函数体比 def 简单很多。
</li><li>
lambda的主体是一个表达式，而不是一个代码块。仅仅能在lambda表达式中封装有限的逻辑进去。
</li><li>lambda 函数拥有自己的命名空间，且不能访问自己参数列表之外或全局命名空间里的参数。</li>

<li>虽然lambda函数看起来只能写一行，却不等同于C或C++的内联函数，后者的目的是调用小函数时不占用栈内存从而增加运行效率。</li>
</ul>
<h3>语法</h3>

<p>lambda 函数的语法只包含一个语句，如下：</p>
<pre class="prettyprint prettyprinted" style=""><span class="kwd">lambda</span><span class="pln"> </span><span class="pun">[</span><span class="pln">arg1 </span><span class="pun">[,</span><span class="pln">arg2</span><span class="pun">,.....</span><span class="pln">argn</span><span class="pun">]]:</span><span class="pln">expression</span></pre>
<p>如下实例：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment"># 可写函数说明</span><span class="hl-code">
</span><span class="hl-identifier">sum</span><span class="hl-code"> = </span><span class="hl-reserved">lambda</span><span class="hl-code"> </span><span class="hl-identifier">arg1</span><span class="hl-code">, </span><span class="hl-identifier">arg2</span><span class="hl-code">: </span><span class="hl-identifier">arg1</span><span class="hl-code"> + </span><span class="hl-identifier">arg2</span><span class="hl-code">
 
</span><span class="hl-comment"># 调用sum函数</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">相加后的值为 : </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-builtin">sum</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-number">10</span><span class="hl-code">, </span><span class="hl-number">20</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">相加后的值为 : </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-builtin">sum</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-number">20</span><span class="hl-code">, </span><span class="hl-number">20</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">相加后的值为</span><span class="pln"> </span><span class="pun">:</span><span class="pln">  </span><span class="lit">30</span><span class="pln">
</span><span class="pun">相加后的值为</span><span class="pln"> </span><span class="pun">:</span><span class="pln">  </span><span class="lit">40</span></pre>

<hr>
<h2>return语句</h2>

<p><b>return [表达式]</b> 语句用于退出函数，选择性地向调用方返回一个表达式。不带参数值的return语句返回None。之前的例子都没有示范如何返回数值，以下实例演示了 return 语句的用法：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-comment"># 可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-builtin">sum</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">arg1</span><span class="hl-code">, </span><span class="hl-identifier">arg2</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
   </span><span class="hl-comment"># 返回2个参数的和."</span><span class="hl-code">
   </span><span class="hl-identifier">total</span><span class="hl-code"> = </span><span class="hl-identifier">arg1</span><span class="hl-code"> + </span><span class="hl-identifier">arg2</span><span class="hl-code">
   </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">函数内 : </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">total</span><span class="hl-brackets">)</span><span class="hl-code">
   </span><span class="hl-reserved">return</span><span class="hl-code"> </span><span class="hl-identifier">total</span><span class="hl-code">
 
</span><span class="hl-comment"># 调用sum函数</span><span class="hl-code">
</span><span class="hl-identifier">total</span><span class="hl-code"> = </span><span class="hl-builtin">sum</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-number">10</span><span class="hl-code">, </span><span class="hl-number">20</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">函数外 : </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">total</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">函数内</span><span class="pln"> </span><span class="pun">:</span><span class="pln">  </span><span class="lit">30</span><span class="pln">
</span><span class="pun">函数外</span><span class="pln"> </span><span class="pun">:</span><span class="pln">  </span><span class="lit">30</span></pre><hr>
<h2>变量作用域</h2>

<p>Python 中，程序的变量并不是在哪个位置都可以访问的，访问权限决定于这个变量是在哪里赋值的。</p>

<p>变量的作用域决定了在哪一部分程序可以访问哪个特定的变量名称。Python的作用域一共有4种，分别是：</p>
<ul>
  <li>L （Local）   局部作用域</li>
  <li>E （Enclosing） 闭包函数外的函数中</li>
  <li>G （Global） 全局作用域</li>
  <li>B （Built-in） 内置作用域（内置函数所在模块的范围）</li>
  </ul>
<p>以 L –&gt; E –&gt; G –&gt;B 的规则查找，即：在局部找不到，便会去局部外的局部找（例如闭包），再找不到就会去全局找，再者去内置中找。</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">g_count </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln">  </span><span class="com"># 全局作用域</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> outer</span><span class="pun">():</span><span class="pln">
    o_count </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pln">  </span><span class="com"># 闭包函数外的函数中</span><span class="pln">
    </span><span class="kwd">def</span><span class="pln"> inner</span><span class="pun">():</span><span class="pln">
        i_count </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pln">  </span><span class="com"># 局部作用域</span></pre>

<p>内置作用域是通过一个名为 builtin 的标准模块来实现的，但是这个变量名自身并没有放入内置作用域内，所以必须导入这个文件才能够使用它。在Python3.0中，可以使用以下的代码来查看到底预定义了哪些变量:</p>

<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">import</span><span class="pln"> builtins
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> dir</span><span class="pun">(</span><span class="pln">builtins</span><span class="pun">)</span></pre>

<p>Python 中只有模块（module），类（class）以及函数（def、lambda）才会引入新的作用域，其它的代码块（如 if/elif/else/、try/except、for/while等）是不会引入新的作用域的，也就是说这些语句内定义的变量，外部也可以访问，如下代码：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> </span><span class="kwd">True</span><span class="pun">:</span><span class="pln">
</span><span class="pun">...</span><span class="pln">  msg </span><span class="pun">=</span><span class="pln"> </span><span class="str">'I am from Runoob'</span><span class="pln">
</span><span class="pun">...</span><span class="pln"> 
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> msg
</span><span class="str">'I am from Runoob'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span></pre>
<p>实例中 msg 变量定义在 if 语句块中，但外部还是可以访问的。</p>
<p>如果将 msg 定义在函数中，则它就是局部变量，外部不能访问：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">def</span><span class="pln"> test</span><span class="pun">():</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     msg_inner </span><span class="pun">=</span><span class="pln"> </span><span class="str">'I am from Runoob'</span><span class="pln">
</span><span class="pun">...</span><span class="pln"> 
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> msg_inner
</span><span class="typ">Traceback</span><span class="pln"> </span><span class="pun">(</span><span class="pln">most recent call </span><span class="kwd">last</span><span class="pun">):</span><span class="pln">
  </span><span class="typ">File</span><span class="pln"> </span><span class="str">"&lt;stdin&gt;"</span><span class="pun">,</span><span class="pln"> line </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> </span><span class="str">&lt;module&gt;</span><span class="pln">
</span><span class="typ">NameError</span><span class="pun">:</span><span class="pln"> name </span><span class="str">'msg_inner'</span><span class="pln"> </span><span class="kwd">is</span><span class="pln"> </span><span class="kwd">not</span><span class="pln"> </span><span class="kwd">defined</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span></pre>
<p>从报错的信息上看，说明了 msg_inner 未定义，无法使用，因为它是局部变量，只有在函数内可以使用。</p>
<hr>
<h3>全局变量和局部变量</h3>

<p>定义在函数内部的变量拥有一个局部作用域，定义在函数外的拥有全局作用域。</p>

<p>局部变量只能在其被声明的函数内部访问，而全局变量可以在整个程序范围内访问。调用函数时，所有在函数内声明的变量名称都将被加入到作用域中。如下实例：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-identifier">total</span><span class="hl-code"> = </span><span class="hl-number">0</span><span class="hl-code"> </span><span class="hl-comment"># 这是一个全局变量</span><span class="hl-code">
</span><span class="hl-comment"># 可写函数说明</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-builtin">sum</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-identifier">arg1</span><span class="hl-code">, </span><span class="hl-identifier">arg2</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-comment">#返回2个参数的和."</span><span class="hl-code">
    </span><span class="hl-identifier">total</span><span class="hl-code"> = </span><span class="hl-identifier">arg1</span><span class="hl-code"> + </span><span class="hl-identifier">arg2</span><span class="hl-code"> </span><span class="hl-comment"># total在这里是局部变量.</span><span class="hl-code">
    </span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">函数内是局部变量 : </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">total</span><span class="hl-brackets">)</span><span class="hl-code">
    </span><span class="hl-reserved">return</span><span class="hl-code"> </span><span class="hl-identifier">total</span><span class="hl-code">
 
</span><span class="hl-comment">#调用sum函数</span><span class="hl-code">
</span><span class="hl-builtin">sum</span><span class="hl-brackets">(</span><span class="hl-code"> </span><span class="hl-number">10</span><span class="hl-code">, </span><span class="hl-number">20</span><span class="hl-code"> </span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-code"> </span><span class="hl-brackets">(</span><span class="hl-quotes">"</span><span class="hl-string">函数外是全局变量 : </span><span class="hl-quotes">"</span><span class="hl-code">, </span><span class="hl-identifier">total</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">函数内是局部变量</span><span class="pln"> </span><span class="pun">:</span><span class="pln">  </span><span class="lit">30</span><span class="pln">
</span><span class="pun">函数外是全局变量</span><span class="pln"> </span><span class="pun">:</span><span class="pln">  </span><span class="lit">0</span></pre>
<h3>global 和 nonlocal关键字 </h3>
<p>当内部作用域想修改外部作用域的变量时，就要用到global和nonlocal关键字了。</p>
<p>以下实例修改全局变量 num：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-identifier">num</span><span class="hl-code"> = </span><span class="hl-number">1</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">fun1</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-reserved">global</span><span class="hl-code"> </span><span class="hl-identifier">num</span><span class="hl-code">  </span><span class="hl-comment"># 需要使用 global 关键字声明</span><span class="hl-code">
    </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-identifier">num</span><span class="hl-brackets">)</span><span class="hl-code"> 
    </span><span class="hl-identifier">num</span><span class="hl-code"> = </span><span class="hl-number">123</span><span class="hl-code">
    </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-identifier">num</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">fun1</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-identifier">num</span><span class="hl-brackets">)</span></div>
</div>
</div><p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="lit">1</span><span class="pln">
</span><span class="lit">123</span><span class="pln">
</span><span class="lit">123</span></pre>
<p>如果要修改嵌套作用域（enclosing 作用域，外层非全局作用域）中的变量则需要 nonlocal 关键字了，如下实例：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">outer</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-identifier">num</span><span class="hl-code"> = </span><span class="hl-number">10</span><span class="hl-code">
    </span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">inner</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">:
        </span><span class="hl-identifier">nonlocal</span><span class="hl-code"> </span><span class="hl-identifier">num</span><span class="hl-code">   </span><span class="hl-comment"># nonlocal关键字声明</span><span class="hl-code">
        </span><span class="hl-identifier">num</span><span class="hl-code"> = </span><span class="hl-number">100</span><span class="hl-code">
        </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-identifier">num</span><span class="hl-brackets">)</span><span class="hl-code">
    </span><span class="hl-identifier">inner</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">
    </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-identifier">num</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">outer</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span></div>
</div>
</div>
<p>以上实例输出结果：</p>
<pre class="prettyprint prettyprinted" style=""><span class="lit">100</span><span class="pln">
</span><span class="lit">100</span></pre>
<p>另外有一种特殊情况，假设下面这段代码被运行：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-identifier">a</span><span class="hl-code"> = </span><span class="hl-number">10</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">test</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-identifier">a</span><span class="hl-code"> = </span><span class="hl-identifier">a</span><span class="hl-code"> + </span><span class="hl-number">1</span><span class="hl-code">
    </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-identifier">a</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">test</span><span class="hl-brackets">(</span><span class="hl-brackets">)</span></div>
</div>
</div>

<p>
以上程序执行，报错信息如下：</p>
<pre class="prettyprint prettyprinted" style=""><span class="typ">Traceback</span><span class="pln"> </span><span class="pun">(</span><span class="pln">most recent call </span><span class="kwd">last</span><span class="pun">):</span><span class="pln">
  </span><span class="typ">File</span><span class="pln"> </span><span class="str">"test.py"</span><span class="pun">,</span><span class="pln"> line </span><span class="lit">7</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> </span><span class="str">&lt;module&gt;</span><span class="pln">
    test</span><span class="pun">()</span><span class="pln">
  </span><span class="typ">File</span><span class="pln"> </span><span class="str">"test.py"</span><span class="pun">,</span><span class="pln"> line </span><span class="lit">5</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> test
    a </span><span class="pun">=</span><span class="pln"> a </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
</span><span class="typ">UnboundLocalError</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">local</span><span class="pln"> variable </span><span class="str">'a'</span><span class="pln"> referenced before assignment</span></pre>
<p>错误信息为局部作用域引用错误，因为 test 函数中的 a 使用的是局部，未定义，无法修改。</p>
<p>修改 a 为全局变量，通过函数参数传递，可以正常执行输出结果为：</p>
<div class="example"> 
<h2 class="example">实例(Python 3.0+)</h2> 
<div class="example_code">
<div class="hl-main"><span class="hl-comment">#!/usr/bin/python3</span><span class="hl-code">
 
</span><span class="hl-identifier">a</span><span class="hl-code"> = </span><span class="hl-number">10</span><span class="hl-code">
</span><span class="hl-reserved">def</span><span class="hl-code"> </span><span class="hl-identifier">test</span><span class="hl-brackets">(</span><span class="hl-identifier">a</span><span class="hl-brackets">)</span><span class="hl-code">:
    </span><span class="hl-identifier">a</span><span class="hl-code"> = </span><span class="hl-identifier">a</span><span class="hl-code"> + </span><span class="hl-number">1</span><span class="hl-code">
    </span><span class="hl-identifier">print</span><span class="hl-brackets">(</span><span class="hl-identifier">a</span><span class="hl-brackets">)</span><span class="hl-code">
</span><span class="hl-identifier">test</span><span class="hl-brackets">(</span><span class="hl-identifier">a</span><span class="hl-brackets">)</span></div>
</div>
<p>执行输出结果为：</p>
<div class="example_code">
11
</div>
</div>			<!-- 其他扩展 -->
			<hr>
<pre id="py-qa-1" style="display:none;" class="prettyprint prettyprinted"><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">True</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> printLine</span><span class="pun">(</span><span class="pln">text</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">text</span><span class="pun">,</span><span class="pln"> </span><span class="str">' Runoob'</span><span class="pun">)</span><span class="pln">
printLine</span><span class="pun">(</span><span class="str">'Python'</span><span class="pun">)</span></pre>
<pre id="py-qa-2" style="display:none;" class="prettyprint prettyprinted"><span class="kwd">def</span><span class="pln"> greetPerson</span><span class="pun">(*</span><span class="pln">name</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'Hello'</span><span class="pun">,</span><span class="pln"> name</span><span class="pun">)</span><span class="pln">
  
greetPerson</span><span class="pun">(</span><span class="str">'Runoob'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Google'</span><span class="pun">)</span></pre>
<pre id="py-qa-3" style="display:none;" class="prettyprint prettyprinted"><span class="pln">result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">lambda</span><span class="pln"> x</span><span class="pun">:</span><span class="pln"> x </span><span class="pun">*</span><span class="pln"> x
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">result</span><span class="pun">(</span><span class="lit">5</span><span class="pun">))</span></pre>
<pre id="py-qa-4" style="display:none;" class="prettyprint prettyprinted"><span class="kwd">def</span><span class="pln"> </span><span class="typ">Foo</span><span class="pun">(</span><span class="pln">x</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x</span><span class="pun">==</span><span class="lit">1</span><span class="pun">):</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
    </span><span class="kwd">else</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> x</span><span class="pun">+</span><span class="typ">Foo</span><span class="pun">(</span><span class="pln">x</span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln">

</span><span class="kwd">print</span><span class="pun">(</span><span class="typ">Foo</span><span class="pun">(</span><span class="lit">4</span><span class="pun">))</span></pre>
<pre id="py-qa-5" style="display:none;" class="prettyprint prettyprinted"><span class="pln">numbers </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">6</span><span class="pun">]</span><span class="pln">
newNumbers </span><span class="pun">=</span><span class="pln"> tuple</span><span class="pun">(</span><span class="pln">map</span><span class="pun">(</span><span class="kwd">lambda</span><span class="pln"> x</span><span class="pun">:</span><span class="pln"> x </span><span class="pun">,</span><span class="pln"> numbers</span><span class="pun">))</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">newNumbers</span><span class="pun">)</span></pre>
<div id="quiz" class="quiz-container quiz-start-state">
  <div id="quiz-start-screen">
    <p><a href="http://www.runoob.com/python3/python3-function.html#" id="quiz-start-btn" class="quiz-button">课后练习</a></p>
  </div>
<div id="quiz-counter" style="display: none;"></div><div id="questions"><div class="question-container" style="display: none;"><p class="question"></p><p>以下内容关于函数描述正确的是？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">函数用于创建对象</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">函数可以让重新执行的更快</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">函数是一段代码用于执行特定的任务</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">以上说法都是正确的</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><pre class="prettyprint prettyprinted" style=""><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">True</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> printLine</span><span class="pun">(</span><span class="pln">text</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">text</span><span class="pun">,</span><span class="pln"> </span><span class="str">' Runoob'</span><span class="pun">)</span><span class="pln">
printLine</span><span class="pun">(</span><span class="str">'Python'</span><span class="pun">)</span></pre><p>以上代码输出结果为？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">Python</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">Python Runoob</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">text Runoob</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">Runoob</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><p>如果函数没有使用 return 语句，则函数返回的是？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">0</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">None 对象</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">任意的整数</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">错误! 函数必须要有返回值。</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> greetPerson</span><span class="pun">(*</span><span class="pln">name</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'Hello'</span><span class="pun">,</span><span class="pln"> name</span><span class="pun">)</span><span class="pln">
  
greetPerson</span><span class="pun">(</span><span class="str">'Runoob'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Google'</span><span class="pun">)</span></pre><p>以上代码输出结果为？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">Hello Runoob<br>Hello Google</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">Hello ('Runoob', 'Google')</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">Hello Runoob</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">错误！函数只能接收一个参数。</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><p>关于递归函数描述正确的是？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">递归函数可以调用程序的使用函数。</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">递归函数用于调用函数的本身。</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">递归函数除了函数本身，可以调用程序的其他所有函数。</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">Python 中没有递归函数。</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><pre class="prettyprint prettyprinted" style=""><span class="pln">result </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">lambda</span><span class="pln"> x</span><span class="pun">:</span><span class="pln"> x </span><span class="pun">*</span><span class="pln"> x
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">result</span><span class="pun">(</span><span class="lit">5</span><span class="pun">))</span></pre><p>以上代码输出结果为？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">lambda x: x*x</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">10</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">25</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">5*5</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> </span><span class="typ">Foo</span><span class="pun">(</span><span class="pln">x</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> </span><span class="pun">(</span><span class="pln">x</span><span class="pun">==</span><span class="lit">1</span><span class="pun">):</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
    </span><span class="kwd">else</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">return</span><span class="pln"> x</span><span class="pun">+</span><span class="typ">Foo</span><span class="pun">(</span><span class="pln">x</span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln">

</span><span class="kwd">print</span><span class="pun">(</span><span class="typ">Foo</span><span class="pun">(</span><span class="lit">4</span><span class="pun">))</span></pre><p>以上代码输出结果为？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">10</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">24</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">7</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">1</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><p>如果我们需要从 math 模块中输出 pi 常量，以下代码正确的是？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">print(math.pi)</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">print(pi)</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">from math import pi<br>print(pi)</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">from math import pi<br>print(math.pi)</a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><p>以下哪个符号用于从包中导入模块？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0"><strong>.</strong></a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1"><strong>*</strong></a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2"><strong>-&gt;</strong></a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3"><strong>,</strong></a></li></ul></div><div class="question-container" style="display: none;"><p class="question"></p><pre class="prettyprint prettyprinted" style=""><span class="pln">numbers </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">6</span><span class="pun">]</span><span class="pln">
newNumbers </span><span class="pun">=</span><span class="pln"> tuple</span><span class="pun">(</span><span class="pln">map</span><span class="pun">(</span><span class="kwd">lambda</span><span class="pln"> x</span><span class="pun">:</span><span class="pln"> x </span><span class="pun">,</span><span class="pln"> numbers</span><span class="pun">))</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">newNumbers</span><span class="pun">)</span></pre><p>以上代码输出结果为？</p><p></p><ul class="answers"><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="0">[1, 3, 6]</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="1">(1, 3, 6)</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="2">[2, 6, 12]</a></li><li><a href="http://www.runoob.com/python3/python3-function.html#" data-index="3">(2, 6, 12)</a></li></ul></div></div><div id="quiz-results-screen" style="display: none;"><p id="quiz-results"></p></div><div id="quiz-controls" style="display: none;"><p id="quiz-response"></p><div id="quiz-buttons"><a href="http://www.runoob.com/python3/python3-function.html#" id="quiz-next-btn">下一题</a><a href="http://www.runoob.com/python3/python3-function.html#" id="quiz-finish-btn">完成</a><a href="http://www.runoob.com/python3/python3-function.html#" id="quiz-restart-btn">重新测验</a></div></div></div>
<script>
$(function() {
code1= '<pre>' + $("#py-qa-1").html() + '</pre>';
code2= '<pre>' + $("#py-qa-2").html() + '</pre>';
code3= '<pre>' + $("#py-qa-3").html() + '</pre>';
code4= '<pre>' + $("#py-qa-4").html() + '</pre>';
code5= '<pre>' + $("#py-qa-5").html() + '</pre>';
  $('#quiz').quiz({
    counterFormat: '第 %current 题，共 %total 题',
    resultsFormat: '回答正确 %score 题，总共 %total 题！',
    nextButtonText: '下一题',
    finishButtonText: '完成',
    restartButtonText: '重新测验',
    questions: [
      {
        'q':  '<p>以下内容关于函数描述正确的是？</p>',
        'options': [
          '函数用于创建对象',
          '函数可以让重新执行的更快',
          '函数是一段代码用于执行特定的任务',
          '以上说法都是正确的'
        ],
        'correctIndex': 2,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，函数是一段代码用于执行特定的任务。'
      },
      {
        'q': code1 + '<p>以上代码输出结果为？</p>',
        'options': [
          'Python',
          'Python Runoob',
          'text Runoob',
          'Runoob'
        ],
        'correctIndex': 1,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，正确的是 Python Runoob。'
      },
      {
        'q':  '<p>如果函数没有使用 return 语句，则函数返回的是？</p>',
        'options': [
          '0',
          'None 对象',
          '任意的整数',
          '错误! 函数必须要有返回值。'
        ],
        'correctIndex': 1,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，正确的是 None 对象。'
      },
      {
        'q': code2 + '<p>以上代码输出结果为？</p>',
        'options': [
          'Hello Runoob<br>Hello Google',
          'Hello (\'Runoob\', \'Google\')',
          'Hello Runoob',
          '错误！函数只能接收一个参数。'
        ],
        'correctIndex': 1,
        'correctResponse': '回答正确，加了星号 * 的参数会以元组(tuple)的形式导入，存放所有未命名的变量参数。',
        'incorrectResponse': '回答错误，正确的为第二个选项，加了星号 * 的参数会以元组(tuple)的形式导入，存放所有未命名的变量参数。'
      },
      {
        'q':  '<p>关于递归函数描述正确的是？</p>',
        'options': [
          '递归函数可以调用程序的使用函数。',
          '递归函数用于调用函数的本身。',
          '递归函数除了函数本身，可以调用程序的其他所有函数。',
          'Python 中没有递归函数。'
        ],
        'correctIndex': 1,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，递归函数用于调用函数的本身。'
      },
      {
        'q': code3 + '<p>以上代码输出结果为？</p>',
        'options': [
          'lambda x: x*x',
          '10',
          '25',
          '5*5'
        ],
        'correctIndex': 2,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，正确为 25。'
      },
      {
        'q': code4 + '<p>以上代码输出结果为？</p>',
        'options': [
          '10',
          '24',
          '7',
          '1'
        ],
        'correctIndex': 0,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，正确为 10。'
      },
      {
        'q':  '<p>如果我们需要从 math 模块中输出 pi 常量，以下代码正确的是？</p>',
        'options': [
          'print(math.pi)',
          'print(pi)',
          'from math import pi<br>print(pi)',
          'from math import pi<br>print(math.pi)'
        ],
        'correctIndex': 2,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，正确为第三个选项。'
      },
      {
        'q':  '<p>以下哪个符号用于从包中导入模块？</p>',
        'options': [
          '<strong>.</strong>',
          '<strong>*</strong>',
          '<strong>-&gt;</strong>',
          '<strong>,</strong>'
        ],
        'correctIndex': 0,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，正确为点号 .'
      },
      {
        'q': code5 + '<p>以上代码输出结果为？</p>',
        'options': [
          '[1, 3, 6]',
          '(1, 3, 6)',
          '[2, 6, 12]',
          '(2, 6, 12)'
        ],
        'correctIndex': 1,
        'correctResponse': '回答正确。',
        'incorrectResponse': '回答错误，正确为 (1, 3, 6)。'
      },
    ]
  });
})
</script>			
			</div>
			
		</div>
		
		<div class="previous-next-links">
			<div class="previous-design-link"><a href="http://www.runoob.com/python3/python3-iterator-generator.html"><i style="font-size:16px;" class="fa fa-arrow-left" aria-hidden="true"></i></a> <a href="http://www.runoob.com/python3/python3-iterator-generator.html" rel="prev" title="Python3 迭代器与生成器">Python3 迭代器与生成器</a> </div>
			<div class="next-design-link"><a href="http://www.runoob.com/python3/python3-data-structure.html" rel="next" title="Python3 数据结构">Python3 数据结构</a> <a href="http://www.runoob.com/python3/python3-data-structure.html"><i style="font-size:16px;" class="fa fa-arrow-right" aria-hidden="true"></i></a></div>
		</div>
		<!-- 笔记列表 -->
		<style>
.wrapper {
  /*text-transform: uppercase; */
  background: #ececec;
  color: #555;
  cursor: help;
  font-family: "Gill Sans", Impact, sans-serif;
  font-size: 20px;
  position: relative;
  text-align: center;
  width: 200px;
  -webkit-transform: translateZ(0); /* webkit flicker fix */
  -webkit-font-smoothing: antialiased; /* webkit text rendering fix */
}

.wrapper .tooltip {
  white-space: nowrap;
  font-size: 14px;
  text-align: left;
  background: #96b97d;
  bottom: 100%;
  color: #fff;
  display: block;
  left: -25px;
  margin-bottom: 15px;
  opacity: 0;
  padding: 14px;
  pointer-events: none;
  position: absolute;
  
  -webkit-transform: translateY(10px);
     -moz-transform: translateY(10px);
      -ms-transform: translateY(10px);
       -o-transform: translateY(10px);
          transform: translateY(10px);
  -webkit-transition: all .25s ease-out;
     -moz-transition: all .25s ease-out;
      -ms-transition: all .25s ease-out;
       -o-transition: all .25s ease-out;
          transition: all .25s ease-out;
  -webkit-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
     -moz-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
      -ms-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
       -o-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
          box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
}
.tooltip a {
	color:#fff;
}
/* This bridges the gap so you can mouse into the tooltip without it disappearing */
.wrapper .tooltip:before {
  bottom: -20px;
  content: " ";
  display: block;
  height: 20px;
  left: 0;
  position: absolute;
  width: 100%;
}  

/* CSS Triangles - see Trevor's post */
.wrapper .tooltip:after {
  border-left: solid transparent 10px;
  border-right: solid transparent 10px;
  border-top: solid #96b97d 10px;
  bottom: -10px;
  content: " ";
  height: 0;
  left: 20%;
  margin-left: -13px;
  position: absolute;
  width: 0;
}
.wrapper .tooltip1 {
	margin-left: 50px;
	padding-top: 0px;
}
.wrapper:hover .tooltip {
  opacity: 1;
  pointer-events: auto;
  -webkit-transform: translateY(0px);
     -moz-transform: translateY(0px);
      -ms-transform: translateY(0px);
       -o-transform: translateY(0px);
          transform: translateY(0px);
}

/* IE can just show/hide with no transition */
.lte8 .wrapper .tooltip {
  display: none;
}

.lte8 .wrapper:hover .tooltip {
  display: block;
}

</style>

<div class="title" id="comments">
	<h2 class="">
    <div class="altblock">
				<i style="font-size:28px;margin-top: 8px;" class="fa fa-plus-square" aria-hidden="true"></i>
		    </div>
    <span class="mw-headline" id="qa_headline">13  篇笔记</span>
	<span class="mw-headline" id="user_add_note" style="float:right;line-height: 62px;padding-right: 14px;"><i class="fa fa-pencil-square-o" aria-hidden="true"></i>  写笔记</span>
    </h2>
</div>
<div id="postcomments" style="display:none;">
	<ol class="commentlist">
		<li class="comment even thread-even depth-1" id="comment-15519"><span class="comt-f">#13</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;不跟随</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;368***608@qq.com</p></div></div><div class="comt-main" id="div-comment-15519"><p>默认参数必须放在最后面，否则会报：</p>
<pre class="prettyprint prettyprinted" style=""><span class="typ">SyntaxError</span><span class="pun">:</span><span class="pln"> non</span><span class="pun">-</span><span class="kwd">default</span><span class="pln"> argument follows </span><span class="kwd">default</span><span class="pln"> argument</span></pre><pre class="prettyprint prettyprinted" style=""><span class="com"># 可写函数说明</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> printinfo</span><span class="pun">(</span><span class="pln"> age</span><span class="pun">=</span><span class="lit">35</span><span class="pun">,</span><span class="pln">name</span><span class="pun">):</span><span class="pln">   </span><span class="com"># 默认参数不在最后，会报错</span><span class="pln">
    </span><span class="str">"打印任何传入的字符串"</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">"名字: "</span><span class="pun">,</span><span class="pln"> name</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">"年龄: "</span><span class="pun">,</span><span class="pln"> age</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">return</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">不跟随</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;不跟随</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;368***608@qq.com</p></div></span>2年前 (2017-07-28)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-15532"><span class="comt-f">#12</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;夏老爷</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;112***6553@qq.com</p><p><i class="fa fa-external-link" aria-hidden="true"></i> <a rel="nofollow" target="_blank" href="http://www.cnblogs.com/dukeidea/p/6396980.html">&nbsp;&nbsp;参考地址</a></p></div></div><div class="comt-main" id="div-comment-15532"><p><strong>def(**kwargs)</strong> 把N个关键字参数转化为字典:</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">def</span><span class="pln"> func</span><span class="pun">(</span><span class="pln">country</span><span class="pun">,</span><span class="pln">province</span><span class="pun">,**</span><span class="pln">kwargs</span><span class="pun">):</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">country</span><span class="pun">,</span><span class="pln">province</span><span class="pun">,</span><span class="pln">kwargs</span><span class="pun">)</span><span class="pln">
</span><span class="pun">...</span><span class="pln"> 
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> func</span><span class="pun">(</span><span class="str">"China"</span><span class="pun">,</span><span class="str">"Sichuan"</span><span class="pun">,</span><span class="pln">city </span><span class="pun">=</span><span class="pln"> </span><span class="str">"Chengdu"</span><span class="pun">,</span><span class="pln"> section </span><span class="pun">=</span><span class="pln"> </span><span class="str">"JingJiang"</span><span class="pun">)</span><span class="pln">
</span><span class="typ">China</span><span class="pln"> </span><span class="typ">Sichuan</span><span class="pln"> </span><span class="pun">{</span><span class="str">'city'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'Chengdu'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'section'</span><span class="pun">:</span><span class="pln"> </span><span class="str">'JingJiang'</span><span class="pun">}</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">夏老爷</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;夏老爷</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;112***6553@qq.com</p><p><i class="fa fa-external-link" aria-hidden="true"></i> <a rel="nofollow" target="_blank" href="http://www.cnblogs.com/dukeidea/p/6396980.html">&nbsp;&nbsp;参考地址</a></p></div></span>2年前 (2017-07-28)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-16344"><span class="comt-f">#11</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;dessertfox</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;che***anren@tju.edu.cn</p></div></div><div class="comt-main" id="div-comment-16344"><p>lambda 匿名函数也是可以使用"<strong>关键字参数</strong>"进行参数传递</p>

<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> g</span><span class="pun">=</span><span class="pln"> </span><span class="kwd">lambda</span><span class="pln"> x</span><span class="pun">,</span><span class="pln">y </span><span class="pun">:</span><span class="pln"> x</span><span class="pun">**</span><span class="lit">2</span><span class="pun">+</span><span class="pln">y</span><span class="pun">**</span><span class="lit">2</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> g</span><span class="pun">(</span><span class="lit">2</span><span class="pun">,</span><span class="lit">3</span><span class="pun">)</span><span class="pln">
</span><span class="lit">13</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> g</span><span class="pun">(</span><span class="pln">y</span><span class="pun">=</span><span class="lit">3</span><span class="pun">,</span><span class="pln">x</span><span class="pun">=</span><span class="lit">2</span><span class="pun">)</span><span class="pln">
</span><span class="lit">13</span></pre>
<p>同样地，lambda 匿名函数也可以设定默认值</p>

<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> g</span><span class="pun">=</span><span class="pln"> </span><span class="kwd">lambda</span><span class="pln"> x</span><span class="pun">=</span><span class="lit">0</span><span class="pun">,</span><span class="pln">y</span><span class="pun">=</span><span class="lit">0</span><span class="pln"> </span><span class="pun">:</span><span class="pln"> x</span><span class="pun">**</span><span class="lit">2</span><span class="pun">+</span><span class="pln">y</span><span class="pun">**</span><span class="lit">2</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> g</span><span class="pun">(</span><span class="lit">2</span><span class="pun">,</span><span class="lit">3</span><span class="pun">)</span><span class="pln">
</span><span class="lit">13</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> g</span><span class="pun">(</span><span class="lit">2</span><span class="pun">)</span><span class="pln">
</span><span class="lit">4</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> g</span><span class="pun">(</span><span class="pln">y</span><span class="pun">=</span><span class="lit">3</span><span class="pun">)</span><span class="pln">
</span><span class="lit">9</span></pre>
<p><strong>注意：</strong>如果只打算给其中一部分参数设定默认值，那么应当将其放在靠后的位置（和定义函数时一样，避免歧义），否则会报错。</p><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">dessertfox</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;dessertfox</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;che***anren@tju.edu.cn</p></div></span>2年前 (2017-08-14)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-20599"><span class="comt-f">#10</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Mr.Wang</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;992***591@qq.com</p></div></div><div class="comt-main" id="div-comment-20599"><p>关于可更改与不可更改类型， 以及其它语言的值类型与引用类型的介绍，一直一来感觉都不太严谨， 说法是否正确有待验证。</p>

<p>简单的说就是，不可更改类型传到函数里重新赋值后，两次输出值不一样，而可更改类型传到函数里对对象的"属性" 重新赋值后输出值一样。</p>

<p>这里照搬一下例子：</p>

<pre class="prettyprint prettyprinted" style=""><span class="com"># 可写函数说明</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> changeme</span><span class="pun">(</span><span class="pln"> mylist </span><span class="pun">):</span><span class="pln">
   </span><span class="str">"修改传入的列表"</span><span class="pln">
   mylist</span><span class="pun">.</span><span class="pln">append</span><span class="pun">([</span><span class="lit">1</span><span class="pun">,</span><span class="lit">2</span><span class="pun">,</span><span class="lit">3</span><span class="pun">,</span><span class="lit">4</span><span class="pun">])</span><span class="pln">
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">"函数内取值: "</span><span class="pun">,</span><span class="pln"> mylist</span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">return</span><span class="pln">
 
</span><span class="com"># 调用changeme函数</span><span class="pln">
mylist </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="lit">10</span><span class="pun">,</span><span class="lit">20</span><span class="pun">,</span><span class="lit">30</span><span class="pun">]</span><span class="pln">
changeme</span><span class="pun">(</span><span class="pln"> mylist </span><span class="pun">)</span><span class="pln">
</span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">"函数外取值: "</span><span class="pun">,</span><span class="pln"> mylist</span><span class="pun">)</span></pre>
<p>请注意：上面特意用了引号标准的部分，对可变类型或者引用的操作修改的是传过来的对象的属性。</p>

<p>可以这么理解(例子有点随意)：我在画画，小明来了说他也要画，我让他和我一起画，他如果和我在同一个画板上画，那么我们两的画就会同时改变。 而如果他说不，我要另外用一块画板，然后重新拿了块画板画起来了，那么我们两的画自然就不一样了。</p>

<p>同理可更改类型 的属性进行操作，这只是对引用的内存块里面的值进行操作，引用并没变，自然所有引用它的对象的值都变了。而对不可更改的对象进行操作，因为它引用的内存块只是对应一个固定的值，不能进行修改，要重新复制实际上就是更新引用。</p>

<p>如果我们运行下面的例子，对可更改类型的引用进行修改，结果就不一样了。</p>


<pre class="prettyprint prettyprinted" style=""><span class="com"># 可写函数说明</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> changeme</span><span class="pun">(</span><span class="pln"> mylist </span><span class="pun">):</span><span class="pln">
   </span><span class="str">"修改传入的列表"</span><span class="pln">
   mylist </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="lit">2</span><span class="pun">,</span><span class="lit">3</span><span class="pun">,</span><span class="lit">4</span><span class="pun">]</span><span class="pln">
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">"函数内取值: "</span><span class="pun">,</span><span class="pln"> mylist</span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">return</span><span class="pln">
 
</span><span class="com"># 调用changeme函数</span><span class="pln">
mylist </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="lit">10</span><span class="pun">,</span><span class="lit">20</span><span class="pun">,</span><span class="lit">30</span><span class="pun">]</span><span class="pln">
changeme</span><span class="pun">(</span><span class="pln"> mylist </span><span class="pun">)</span><span class="pln">
</span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">"函数外取值: "</span><span class="pun">,</span><span class="pln"> mylist</span><span class="pun">)</span></pre>
<p>结果</p>

<pre class="prettyprint prettyprinted" style=""><span class="pun">函数内取值:</span><span class="pln">  </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">]</span><span class="pln">
</span><span class="pun">函数外取值:</span><span class="pln">  </span><span class="pun">[</span><span class="lit">10</span><span class="pun">,</span><span class="pln"> </span><span class="lit">20</span><span class="pun">,</span><span class="pln"> </span><span class="lit">30</span><span class="pun">]</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">Mr.Wang</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Mr.Wang</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;992***591@qq.com</p></div></span>1年前 (2017-11-21)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-21605"><span class="comt-f">#9</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Rosevil1874</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;157***11424@163.com</p></div></div><div class="comt-main" id="div-comment-21605"><p>对于变量作用域，变量的访问以 <strong>L（Local） –&gt; E（Enclosing） –&gt; G（Global） –&gt;B（Built-in）</strong> 的规则查找，即：在局部找不到，便会去局部外的局部找（例如闭包），再找不到就会去全局找，再者去内建中找。</p>

<p>观察以下几个例子，均从内部函数输出变量 x：</p>

<p><strong>1. 局部作用域</strong></p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">(</span><span class="lit">3.3</span><span class="pun">)</span><span class="pln">

x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> outer</span><span class="pun">():</span><span class="pln">
    x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
    </span><span class="kwd">def</span><span class="pln"> inner</span><span class="pun">():</span><span class="pln">
        x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">x</span><span class="pun">)</span><span class="pln">
    inner</span><span class="pun">()</span><span class="pln">

outer</span><span class="pun">()</span></pre>
<p>执行结果为 2，因为此时直接在函数 inner 内部找到了变量 x。</p>

<p><strong>2.闭包函数外的函数中</strong></p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">(</span><span class="lit">3.3</span><span class="pun">)</span><span class="pln">

x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> outer</span><span class="pun">():</span><span class="pln">
    x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
    </span><span class="kwd">def</span><span class="pln"> inner</span><span class="pun">():</span><span class="pln">
        i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">x</span><span class="pun">)</span><span class="pln">
    inner</span><span class="pun">()</span><span class="pln">

outer</span><span class="pun">()</span></pre>
<p>执行结果为 1，因为在内部函数 inner 中找不到变量 x，继续去局部外的局部——函数 outer 中找，这时找到了，输出 1。</p>

<p><strong>3.全局作用域</strong></p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">(</span><span class="lit">3.3</span><span class="pun">)</span><span class="pln">
x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> outer</span><span class="pun">():</span><span class="pln">
    o </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
    </span><span class="kwd">def</span><span class="pln"> inner</span><span class="pun">():</span><span class="pln">
        i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">x</span><span class="pun">)</span><span class="pln">
    inner</span><span class="pun">()</span><span class="pln">

outer</span><span class="pun">()</span></pre>
<p>执行结果为 0，在局部（inner函数）、局部的局部（outer函数）都没找到变量 x，于是访问全局变量，此时找到了并输出。</p>

<p><strong>4. 内建作用域</strong></p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">int</span><span class="pun">(</span><span class="lit">3.3</span><span class="pun">)</span><span class="pln">
g </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> outer</span><span class="pun">():</span><span class="pln">
    o </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pln">
    </span><span class="kwd">def</span><span class="pln"> inner</span><span class="pun">():</span><span class="pln">
        i </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">x</span><span class="pun">)</span><span class="pln">
    inner</span><span class="pun">()</span><span class="pln">

outer</span><span class="pun">()</span></pre>
<p>执行结果为 3，在局部（inner函数）、局部的局部（outer函数）以及全局变量中都没有找到变量x，于是访问内建变量，此时找到了并输出。</p><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">Rosevil1874</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Rosevil1874</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;157***11424@163.com</p></div></span>1年前 (2017-12-13)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-22272"><span class="comt-f">#8</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;ls</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;moo***huan@foxmail.com</p></div></div><div class="comt-main" id="div-comment-22272"><p><strong>函数内可以访问全局变量，但不能更新(修改)其值！</strong></p>

<p>例 :</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> sum </span><span class="pun">(</span><span class="pln"> n </span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln">
   n </span><span class="pun">+=</span><span class="pln"> a
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">'a = '</span><span class="pun">,</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">end</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">' , '</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">'n = '</span><span class="pun">,</span><span class="pln"> n </span><span class="pun">)</span><span class="pln">
  
sum</span><span class="pun">(</span><span class="lit">3</span><span class="pun">)</span></pre>
<p>输出 :</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">a </span><span class="pun">=</span><span class="pln">  </span><span class="lit">10</span><span class="pln"> </span><span class="pun">,</span><span class="pln"> n </span><span class="pun">=</span><span class="pln">  </span><span class="lit">13</span></pre>
<p>如果引用了还没更新的值则会报错 :</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> sum </span><span class="pun">(</span><span class="pln"> n </span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln">
   n </span><span class="pun">+=</span><span class="pln"> a
   a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">11</span><span class="pln">
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">'a = '</span><span class="pun">,</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">end</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">' , '</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">'n = '</span><span class="pun">,</span><span class="pln"> n </span><span class="pun">)</span><span class="pln">
  
sum</span><span class="pun">(</span><span class="lit">3</span><span class="pun">)</span></pre>
<p>输出 :</p>

...
<pre class="prettyprint prettyprinted" style=""><span class="typ">UnboundLocalError</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">local</span><span class="pln"> variable </span><span class="str">'a'</span><span class="pln"> referenced before assignment</span></pre>
<p>可以加上 global 引用以更新变量值 :</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> sum </span><span class="pun">(</span><span class="pln"> n </span><span class="pun">)</span><span class="pln"> </span><span class="pun">:</span><span class="pln">
   </span><span class="kwd">global</span><span class="pln"> a
   n </span><span class="pun">+=</span><span class="pln"> a
   a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">11</span><span class="pln">
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">'a = '</span><span class="pun">,</span><span class="pln"> a</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">end</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="str">' , '</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
   </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">'n = '</span><span class="pun">,</span><span class="pln"> n </span><span class="pun">)</span><span class="pln">

sum </span><span class="pun">(</span><span class="pln"> </span><span class="lit">3</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
</span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln"> </span><span class="str">'外 a = '</span><span class="pun">,</span><span class="pln"> a </span><span class="pun">)</span></pre>
<p>输出:</p>

<p>a =  11 , n =  13
外 a = 11</p>
<div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">ls</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;ls</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;moo***huan@foxmail.com</p></div></span>1年前 (2017-12-28)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-24169"><span class="comt-f">#7</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;FVortex</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;hty***80402@qq.com</p></div></div><div class="comt-main" id="div-comment-24169"><p>函数也可以以一个函数为其参数:</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> hello </span><span class="pun">()</span><span class="pln"> </span><span class="pun">:</span><span class="pln">
  </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">"Hello, world!"</span><span class="pun">)</span><span class="pln">

</span><span class="kwd">def</span><span class="pln"> execute</span><span class="pun">(</span><span class="pln">f</span><span class="pun">):</span><span class="pln">
  </span><span class="str">"执行一个没有参数的函数"</span><span class="pln">
  f</span><span class="pun">()</span><span class="pln">

execute</span><span class="pun">(</span><span class="pln">hello</span><span class="pun">)</span></pre>

<p>输出：</p>

<pre class="prettyprint prettyprinted" style=""><span class="typ">Hello</span><span class="pun">,</span><span class="pln"> world</span><span class="pun">!</span></pre>
<div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">FVortex</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;FVortex</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;hty***80402@qq.com</p></div></span>1年前 (2018-02-16)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-29888"><span class="comt-f">#6</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Mr.Wu</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;928***263@qq.com</p></div></div><div class="comt-main" id="div-comment-29888"><p>可以通过  <span class="marked">函数名.__doc__</span> 的方式来显示函数的说明文档，感觉这个如果在阅读比较大的程序时应该会有用，同时也在提示自己在写函数时注意添加文档说明。</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> add</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln">b</span><span class="pun">):</span><span class="pln">
    </span><span class="str">"这是 add 函数文档"</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> a</span><span class="pun">+</span><span class="pln">b

</span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln">add</span><span class="pun">.</span><span class="pln">__doc__</span><span class="pun">)</span></pre>

<p>输出结果为：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">这是</span><span class="pln"> add </span><span class="pun">函数文档</span></pre>



<blockquote><p>更多内容可参考：<a href="http://www.runoob.com/w3cnote/python-docstrings.html" target="_blank" rel="noopener nofollow">Python 文档字符串(DocStrings)</a></p></blockquote>

<div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">Mr.Wu</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Mr.Wu</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;928***263@qq.com</p></div></span>8个月前 (07-20)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-29889"><span class="comt-f">#5</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Mr.Wu</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;928***263@qq.com</p></div></div><div class="comt-main" id="div-comment-29889"><p data-title="Python 函数返回多个值">函数返回值的注意事项: 不同于 C 语言，Python 函数可以返回多个值，多个值以元组的方式返回:</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> fun</span><span class="pun">(</span><span class="pln">a</span><span class="pun">,</span><span class="pln">b</span><span class="pun">):</span><span class="pln">    
    </span><span class="str">"返回多个值，结果以元组形式表示"</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> a</span><span class="pun">,</span><span class="pln">b</span><span class="pun">,</span><span class="pln">a</span><span class="pun">+</span><span class="pln">b
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">fun</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="lit">2</span><span class="pun">))</span></pre>
<p>输出结果为：</p>

<pre class="prettyprint prettyprinted" style=""><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">)</span></pre>
<div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="http://www.runoob.com/note/29889">Mr.Wu</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Mr.Wu</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;928***263@qq.com</p></div></span>8个月前 (07-20)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-30597"><span class="comt-f">#4</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;sprinkle</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;117***1554@qq.com</p></div></div><div class="comt-main" id="div-comment-30597"><p><strong>函数的装饰器</strong></p>

<p>在不改变当前函数的情况下, 给其增加新的功能:</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">def</span><span class="pln"> log</span><span class="pun">(</span><span class="pln">pr</span><span class="pun">):#将被装饰函数传入</span><span class="pln">
&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kwd">def</span><span class="pln"> wrapper</span><span class="pun">():</span><span class="pln">
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kwd">print</span><span class="pun">(</span><span class="str">"**********"</span><span class="pun">)</span><span class="pln">      
&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kwd">return</span><span class="pln"> pr</span><span class="pun">()#执行被装饰的函数</span><span class="pln">
&nbsp;&nbsp;&nbsp;&nbsp;</span><span class="kwd">return</span><span class="pln"> wrapper</span><span class="com">#将装饰完之后的函数返回（返回的是函数名）</span><span class="pln">
</span><span class="lit">@log</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> pr</span><span class="pun">():</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">"我是小小洋"</span><span class="pun">)</span><span class="pln">

pr</span><span class="pun">()</span></pre>
<p>回调函数和返回函数的实例就是装饰器。</p>


<blockquote><p>更多内容可参考：<a href="http://www.runoob.com/w3cnote/python-func-decorators.html" target="_blank" rel="noopener nofollow">Python 函数装饰器</a></p></blockquote>

<div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">sprinkle</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;sprinkle</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;117***1554@qq.com</p></div></span>7个月前 (07-28)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-34820"><span class="comt-f">#3</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Null</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;wuh***ing2012@163.com</p><p><i class="fa fa-external-link" aria-hidden="true"></i> <a rel="nofollow" target="_blank" href="https://www.runoob.com/w3cnote/python-unboundlocalerror.html">&nbsp;&nbsp;参考地址</a></p></div></div><div class="comt-main" id="div-comment-34820"><p data-title="Python 内部函数">1.内部函数，不修改全局变量可以访问全局变量</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> test</span><span class="pun">():</span><span class="pln">
    b </span><span class="pun">=</span><span class="pln"> a </span><span class="pun">+</span><span class="pln"> </span><span class="lit">2</span><span class="pln"> </span><span class="com">#仅仅访问全局变量 a</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">b</span><span class="pun">)</span><span class="pln">
test</span><span class="pun">()</span></pre>
<p>输出结果为：</p>

<pre class="prettyprint prettyprinted" style=""><span class="lit">12</span></pre>
<p>2.内部函数，修改同名全局变量，则python会认为它是一个局部变量（同教程最后一个例子）</p>

<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">
 
a </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> test</span><span class="pun">():</span><span class="pln">
    a </span><span class="pun">=</span><span class="pln"> a </span><span class="pun">+</span><span class="pln"> </span><span class="lit">1</span><span class="pln"> </span><span class="com">#修改同名的全局变量，则认为是一个局部变量</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">a</span><span class="pun">)</span><span class="pln">
test</span><span class="pun">()</span></pre>
<p>3.在内部函数修改同名全局变量之前调用变量名称（如print sum），则引发Unbound-LocalError</p>

<div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="http://www.runoob.com/note/34820">Null</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;Null</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;wuh***ing2012@163.com</p><p><i class="fa fa-external-link" aria-hidden="true"></i> <a rel="nofollow" target="_blank" href="https://www.runoob.com/w3cnote/python-unboundlocalerror.html">&nbsp;&nbsp;参考地址</a></p></div></span>6个月前 (09-06)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-37802"><span class="comt-f">#2</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;richael</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;ric***l0302@163.com</p></div></div><div class="comt-main" id="div-comment-37802"><p>在这里补充一点关于 global 和 nonlocal 的知识：</p>

<p>nonlocal 只能修改外层函数的变量而不能修改外层函数所引用的全局变量，给一个例子如下：</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">0</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> outer</span><span class="pun">():</span><span class="pln">
    </span><span class="kwd">global</span><span class="pln"> x
    x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">1</span><span class="pln">    
    </span><span class="kwd">def</span><span class="pln"> inner</span><span class="pun">():</span><span class="pln">
        </span><span class="kwd">nonlocal</span><span class="pln"> x
        x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">2</span><span class="pln">        
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">x</span><span class="pun">)</span><span class="pln">
    inner</span><span class="pun">()</span><span class="pln">

outer</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">x</span><span class="pun">)</span></pre>
<p>结果会报错：</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">line </span><span class="lit">6</span><span class="pln">
    </span><span class="kwd">nonlocal</span><span class="pln"> x
    </span><span class="pun">^</span><span class="pln">
</span><span class="typ">SyntaxError</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">no</span><span class="pln"> binding </span><span class="kwd">for</span><span class="pln"> </span><span class="kwd">nonlocal</span><span class="pln"> </span><span class="str">'x'</span><span class="pln"> found</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">richael</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;richael</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;ric***l0302@163.com</p></div></span>3个月前 (12-06)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-39046"><span class="comt-f">#1</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;爱睡觉的猫</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;199***09662@163.com</p></div></div><div class="comt-main" id="div-comment-39046"><p><strong>global</strong> 关键字会跳过中间层直接将嵌套作用域内的局部变量变为全局变量:</p>

<p>测试代码如下:</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">num </span><span class="pun">=</span><span class="pln"> </span><span class="lit">20</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> outer</span><span class="pun">():</span><span class="pln">
    num </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pln">
    </span><span class="kwd">def</span><span class="pln"> inner</span><span class="pun">():</span><span class="pln">
        </span><span class="kwd">global</span><span class="pln"> num
        </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln">num</span><span class="pun">)</span><span class="pln">
        num </span><span class="pun">=</span><span class="pln"> </span><span class="lit">100</span><span class="pln">
        </span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln">num</span><span class="pun">)</span><span class="pln">
    inner</span><span class="pun">()</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">num</span><span class="pun">)</span><span class="pln">
outer</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="pln">num</span><span class="pun">)</span></pre>
    
结果如下：

<pre class="prettyprint prettyprinted" style=""><span class="lit">20</span><span class="pln">
</span><span class="lit">100</span><span class="pln">
</span><span class="lit">10</span><span class="pln">
</span><span class="lit">100</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">爱睡觉的猫</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;爱睡觉的猫</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;199***09662@163.com</p></div></span>2个月前 (01-16)</div></div></li><!-- #comment-## -->
	</ol>
	<div class="pagenav">
			</div>
</div>

<div id="respond" class="no_webshot"> 
		<div class="comment-signarea" style="display:none; padding: 20px 20px;"> 
	<h3 class="text-muted" id="share_code" style="color: #799961;"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> 点我分享笔记</h3>
	<!--
	<p style="font-size:14px;">笔记需要是本篇文章的内容扩展！</p><br>
	<p style="font-size:12px;"><a href="//www.runoob.com/tougao" target="_blank">文章投稿，可点击这里</a></p>
	<p style="font-size:14px;"><a href="/w3cnote/runoob-user-test-intro.html#invite" target="_blank">注册邀请码获取方式</a></p>
		<h3 class="text-muted"><i class="fa fa-info-circle" aria-hidden="true"></i> 分享笔记前必须<a href="javascript:;" class="runoob-pop">登录</a>！</h3>
		<p><a href="/w3cnote/runoob-user-test-intro.html#invite" target="_blank">注册邀请码获取方式</a></p>-->
	</div>
		
	<form action="http://www.runoob.com/wp-content/themes/runoob/option/addnote.php" method="post" id="commentform" style="display:none;"><div id="comment-status" style="display:none;"></div>
		<div class="comt">
			<div class="comt-title">
				<i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i>				<p><a id="cancel-comment-reply-link" href="javascript:;">取消</a></p>
			</div>
			<div class="comt-box">
			<div class="simditor simditor-mac">
  <div class="simditor-wrapper"><div class="simditor-toolbar" style="top: 0px;"><ul><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-bold" href="javascript:;" title="加粗文字 ( Cmd + b )"><span class="simditor-icon simditor-icon-bold"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-code" href="javascript:;" title="插入代码"><span class="simditor-icon simditor-icon-code"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-ul" href="javascript:;" title="无序列表 ( Cmd + . )"><span class="simditor-icon simditor-icon-list-ul"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-ol" href="javascript:;" title="有序列表 ( Cmd + / )"><span class="simditor-icon simditor-icon-list-ol"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-image" href="javascript:;" title="插入图片"><span class="simditor-icon simditor-icon-picture-o"></span></a></li></ul></div>
    <div class="simditor-placeholder" style="display: block;">写笔记...</div>
    <div class="simditor-body" contenteditable="true"><p><br></p></div>
  <div id="mded"></div></div>
<div class="simditor-popover code-popover"><div class="code-settings">
  <div class="settings-field">
    <select class="select-lang">
      <option value="-1">选择程序语言</option>
    <option value="bash">Bash</option><option value="c++">C++</option><option value="cs">C#</option><option value="css">CSS</option><option value="erlang">Erlang</option><option value="less">Less</option><option value="sass">Sass</option><option value="diff">Diff</option><option value="coffeescript">CoffeeScript</option><option value="html">HTML,XML</option><option value="json">JSON</option><option value="java">Java</option><option value="js">JavaScript</option><option value="markdown">Markdown</option><option value="oc">Objective C</option><option value="php">PHP</option><option value="parl">Perl</option><option value="python">Python</option><option value="ruby">Ruby</option><option value="sql">SQL</option></select>
  </div>
</div></div><div class="simditor-popover image-popover"><div class="link-settings">
  <div class="settings-field">
    <label>图片地址</label>
    <input class="image-src" type="text" tabindex="1">
    
  </div>
  <div class="settings-field">
    <label>图片描述</label>
    <input class="image-alt" id="image-alt" type="text" tabindex="1">
  </div>
  <div class="settings-field">
    <label>图片尺寸</label>
    <input class="image-size" id="image-width" type="text" tabindex="2">
    <span class="times">×</span>
    <input class="image-size" id="image-height" type="text" tabindex="3">
    <a class="btn-restore" href="javascript:;" title="还原图片尺寸" tabindex="-1">
      <span class="simditor-icon simditor-icon-undo"></span>
    </a>
  </div>
</div></div></div>
			
				<div class="comt-ctrl">
					<div class="comt-tips"><input type="hidden" name="comment_post_ID" value="7303" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
</div>
					<button type="submit" name="submit" id="submit" tabindex="5"><i class="fa fa-pencil" aria-hidden="true"></i> 分享笔记</button>
				</div>
			</div>
		
				
					<div class="comt-comterinfo"> 
						<ul id="comment-author-info">
							<li class="form-inline"><label class="hide" for="author">昵称</label><input class="ipt" type="text" name="author" id="author" value="" tabindex="2" placeholder="昵称"><span class="text-muted">昵称 (必填)</span></li>
							<li class="form-inline"><label class="hide" for="email">邮箱</label><input class="ipt" type="text" name="email" id="email" value="" tabindex="3" placeholder="邮箱"><span class="text-muted">邮箱 (必填)</span></li>
							<li class="form-inline"><label class="hide" for="url">引用地址</label><input class="ipt" type="text" name="url" id="url" value="" tabindex="4" placeholder="引用地址"><span class="text-muted">引用地址</span></li>
						</ul>
					</div>
				
			
		</div>

	</form>
	</div>
<script type="text/javascript">
$(function() {
	//初始化编辑器
	
	var editor = new Simditor({
	  textarea: $('#mded'),
	  placeholder: '写笔记...',
	  upload:false,
	 // upload: {url:'/api/comment_upload_file.php',params: null,fileKey: 'upload_file',connectionCount: 1,leaveConfirm: '文件正在上传，您确定离开?'},
	  defaultImage: 'http://www.runoob.com/images/logo.png',
	  codeLanguages: '',
	  toolbar: [  'bold','code','ul','ol','image' ]
	});
	editor.on('selectionchanged', function() {
		$(".code-popover").hide();
	});

	// 提交数据
	$("#share_code").click(function() {
		$(".comment-signarea").hide();
		$("#commentform").show();
		
	});
	$("#user_add_note").click(function() {
		$(".comment-signarea").hide();
		$("#commentform").show();
		$('html, body').animate({
       	    scrollTop: $("#respond").offset().top
    	}, 200);
	});

	// 提交笔记
	var commentform=$('#commentform');
	commentform.prepend('<div id="comment-status" style="display:none;" ></div>');
	var statusdiv=$('#comment-status');
	
	commentform.submit(function(e){
		e.preventDefault();
		var noteContent = editor.getValue();
		// console.log(noteContent);
		noteContent = noteContent.replace(/<pre><code>/g,"<pre>");
		noteContent = noteContent.replace(/<\/code><\/pre>/g,"</pre>");
		
		// 系列化表单数据
		var comment_parent = 0;
		var is_user_logged_in = $("#is_user_logged_in").val();
		var comment_post_ID =  7303;
		var _wp_unfiltered_html_comment = $("#_wp_unfiltered_html_comment").val();
		var comment = noteContent;
		var author = $("#author").val();
		var url = $("#url").val();
		var email = $("#email").val();
		if(isBlank(author) && is_user_logged_in==0) {
			statusdiv.html('<p  class="ajax-error">请输入昵称！</p>').show();
		} else if(isBlank(email)  && is_user_logged_in==0) {
			statusdiv.html('<p  class="ajax-error">请输入邮箱！</p>').show();
		} else {
			// var formdata=commentform.serialize() + "&comment=" + noteContent ;
			// 添加状态信息
			statusdiv.html('<p>Processing...</p>').show();
			// 获取表单提交地址
			var formurl=commentform.attr('action');
			
			// 异步提交
			$.ajax({
					type: 'post',
					url: formurl,
					dataType:'json',
					data: {"comment_parent":comment_parent,"comment_post_ID":comment_post_ID, "_wp_unfiltered_html_comment":_wp_unfiltered_html_comment,"comment":comment,"url":url, "email":email,"author":author},
					error: function(XMLHttpRequest, textStatus, errorThrown){
					statusdiv.html('<p class="ajax-error" >数据不完整或表单提交太快了！</p>').show();
				},
				success: function(data, textStatus){
					if(data.errorno=="0") {
						$("#submit").prop('disabled', true);
						statusdiv.html('<p class="ajax-success" >笔记已提交审核，感谢分享笔记！</p>').show();
						alert('笔记已提交审核，感谢分享笔记！');
					}else{
						statusdiv.html('<p class="ajax-error" >'+data.msg+'</p>').show();
					}
					commentform.find('textarea[name=comment]').val('');
				}
			});
			setTimeout(function(){
		        $("#submit").prop('disabled', false);
		    }, 10*1000);
		}
		return false;

	});
	
});
function isBlank(str) {
    return (!str || /^\s*$/.test(str));
}
</script>

<link rel="stylesheet" href="./Python3 函数 _ 菜鸟教程_files/qa.css">
<link rel="stylesheet" type="text/css" href="./Python3 函数 _ 菜鸟教程_files/simditor.min.css">
<script type="text/javascript" src="./Python3 函数 _ 菜鸟教程_files/module.js"></script>
<script type="text/javascript" src="./Python3 函数 _ 菜鸟教程_files/hotkeys.js"></script>
<script type="text/javascript" src="./Python3 函数 _ 菜鸟教程_files/uploader.js"></script>
<script type="text/javascript" src="./Python3 函数 _ 菜鸟教程_files/simditor.min.js"></script>		<div class="sidebar-box ad-box ad-box-large">
				<div id="ad-336280">
		<script async="" src="./Python3 函数 _ 菜鸟教程_files/f(6).txt"></script>
		<!-- 移动版 自动调整 -->
		<ins class="adsbygoogle" style="display: block; height: 100px;" data-ad-client="ca-pub-5751451760833794" data-ad-slot="1691338467" data-ad-format="auto" data-adsbygoogle-status="done"><ins id="aswift_0_expand" style="display: inline-table; border: none; height: 100px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 812px; background-color: transparent;"><ins id="aswift_0_anchor" style="display: block; border: none; height: 100px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 812px; background-color: transparent; overflow: hidden;"><iframe width="812" height="100" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left: 0px; position: absolute; top: 0px; border: 0px; width: 812px; height: 100px;" src="./Python3 函数 _ 菜鸟教程_files/saved_resource(1).html"></iframe></ins></ins></ins>
		<script>
		(adsbygoogle = window.adsbygoogle || []).push({});
		</script>
		</div>
				</div>
		
	</div>
</div>
	

<!-- 右边栏 -->
<div class="fivecol last right-column">
<!--
	<div class="tab tab-light-blue" style="text-align: center;">关注微信</div>
	<div class="sidebar-box">
		<a href="http://m.runoob.com/" target="_blank"> <img src="http://www.runoob.com/wp-content/themes/w3cschool.cc/assets/img/qrcode.jpg" alt="移动版"> </a>
		<div class="qqinfo">
		 <a target="_blank" href="http://jq.qq.com/?_wv=1027&k=dOwwKN" id="qqhref">
		<img border="0" src="http://pub.idqqimg.com/wpa/images/group.png" alt="菜鸟家族" title="菜鸟家族"></a>
		<span>(群号：<span id="qqid">365967760</span>)</span>
		</div>
		
	</div>
	-->
<style>
.sidebar-tree .double-li {
	width:300px;
}
.sidebar-tree .double-li li {
    width: 44%;
    line-height: 1.5em;
    border-bottom: 1px solid #ccc;
    float: left;
    display: inline;
}
</style>

	
		<div class="sidebar-box ad-box ad-box-large">
		<div class="sidebar-box advertise-here" style="margin: 0 auto;">
			<a href="javascript:void(0);" style="font-size: 16px; color:#64854c;font-weight:bold;"> <i class="fa fa-list" aria-hidden="true"></i> 分类导航</a>
		</div>
	<div class="sidebar-box sidebar-cate">
		
		<div class="sidebar-tree">
			<ul><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> HTML / CSS</a><ul class="double-li"><li><a title="HTML 教程" href="http://www.runoob.com/html/html-tutorial.html">HTML 教程</a></li><li><a title="HTML5 教程" href="http://www.runoob.com/html/html5-intro.html">HTML5 教程</a></li><li><a title="CSS 教程" href="http://www.runoob.com/css/css-tutorial.html">CSS 教程</a></li><li><a title="CSS3 教程" href="http://www.runoob.com/css3/css3-tutorial.html">CSS3 教程</a></li><li><a title="Bootstrap3 教程" href="http://www.runoob.com/bootstrap/bootstrap-tutorial.html">Bootstrap3 教程</a></li><li><a title="Bootstrap4 教程" href="http://www.runoob.com/bootstrap4/bootstrap4-tutorial.html">Bootstrap4 教程</a></li><li><a title="Font Awesome 教程" href="http://www.runoob.com/font-awesome/fontawesome-tutorial.html">Font Awesome 教程</a></li><li><a title="Foundation 教程" href="http://www.runoob.com/foundation/foundation-tutorial.html">Foundation 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> JavaScript</a><ul class="double-li"><li><a title="JavaScript 教程" href="http://www.runoob.com/js/js-tutorial.html">JavaScript 教程</a></li><li><a title="HTML DOM 教程" href="http://www.runoob.com/htmldom/htmldom-tutorial.html">HTML DOM 教程</a></li><li><a title="jQuery 教程" href="http://www.runoob.com/jquery/jquery-tutorial.html">jQuery 教程</a></li><li><a title="AngularJS 教程" href="http://www.runoob.com/angularjs/angularjs-tutorial.html">AngularJS 教程</a></li><li><a title="AngularJS2 教程" href="http://www.runoob.com/angularjs2/angularjs2-tutorial.html">AngularJS2 教程</a></li><li><a title="Vue.js 教程" href="http://www.runoob.com/vue2/vue-tutorial.html">Vue.js 教程</a></li><li><a title="React 教程" href="http://www.runoob.com/react/react-tutorial.html">React 教程</a></li><li><a title="TypeScript 教程" href="http://www.runoob.com/typescript/ts-tutorial.html">TypeScript 教程</a></li><li><a title="jQuery UI 教程" href="http://www.runoob.com/jqueryui/jqueryui-tutorial.html">jQuery UI 教程</a></li><li><a title="jQuery EasyUI 教程" href="http://www.runoob.com/jeasyui/jqueryeasyui-tutorial.html">jQuery EasyUI 教程</a></li><li><a title="Node.js 教程" href="http://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js 教程</a></li><li><a title="AJAX 教程" href="http://www.runoob.com/ajax/ajax-tutorial.html">AJAX 教程</a></li><li><a title="JSON 教程" href="http://www.runoob.com/json/json-tutorial.html">JSON 教程</a></li><li><a title="Highcharts 教程" href="http://www.runoob.com/highcharts/highcharts-tutorial.html">Highcharts 教程</a></li><li><a title="Google 地图 教程" href="http://www.runoob.com/googleapi/google-maps-basic.html">Google 地图 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 服务端</a><ul class="double-li"><li><a title="PHP 教程" href="http://www.runoob.com/php/php-tutorial.html">PHP 教程</a></li><li><a title="Python 教程" href="http://www.runoob.com/python/python-tutorial.html">Python 教程</a></li><li><a title="Python3 教程" href="http://www.runoob.com/python3/python3-tutorial.html">Python3 教程</a></li><li><a title="Django 教程" href="http://www.runoob.com/django/django-tutorial.html">Django 教程</a></li><li><a title="Linux 教程" href="http://www.runoob.com/linux/linux-tutorial.html">Linux 教程</a></li><li><a title="Docker 教程" href="http://www.runoob.com/docker/docker-tutorial.html">Docker 教程</a></li><li><a title="Ruby 教程" href="http://www.runoob.com/ruby/ruby-tutorial.html">Ruby 教程</a></li><li><a title="Java 教程" href="http://www.runoob.com/java/java-tutorial.html">Java 教程</a></li><li><a title="C 教程" href="http://www.runoob.com/c/c-tutorial.html">C 教程</a></li><li><a title="C++ 教程" href="http://www.runoob.com/cplusplus/cpp-tutorial.html">C++ 教程</a></li><li><a title="Perl 教程" href="http://www.runoob.com/perl/perl-tutorial.html">Perl 教程</a></li><li><a title="Servlet 教程" href="http://www.runoob.com/servlet/servlet-tutorial.html">Servlet 教程</a></li><li><a title="JSP 教程" href="http://www.runoob.com/jsp/jsp-tutorial.html">JSP 教程</a></li><li><a title="Lua 教程" href="http://www.runoob.com/lua/lua-tutorial.html">Lua 教程</a></li><li><a title="Scala 教程" href="http://www.runoob.com/scala/scala-tutorial.html">Scala 教程</a></li><li><a title="Go 教程" href="http://www.runoob.com/go/go-tutorial.html">Go 教程</a></li><li><a title="设计模式" href="http://www.runoob.com/design-pattern/design-pattern-tutorial.html">设计模式</a></li><li><a title="正则表达式" href="http://www.runoob.com/regexp/regexp-tutorial.html">正则表达式</a></li><li><a title="Maven 教程" href="http://www.runoob.com/maven/maven-tutorial.html">Maven 教程</a></li><li><a title="NumPy 教程" href="http://www.runoob.com/numpy/numpy-tutorial.html">NumPy 教程</a></li><li><a title="ASP 教程" href="http://www.runoob.com/asp/asp-tutorial.html">ASP 教程</a></li><li><a title="AppML 教程" href="http://www.runoob.com/appml/appml-tutorial.html">AppML 教程</a></li><li><a title="VBScript 教程" href="http://www.runoob.com/vbscript/vbscript-tutorial.html">VBScript 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 数据库</a><ul class="double-li"><li><a title="SQL 教程" href="http://www.runoob.com/sql/sql-tutorial.html">SQL 教程</a></li><li><a title="Mysql 教程" href="http://www.runoob.com/mysql/mysql-tutorial.html">Mysql 教程</a></li><li><a title="SQLite 教程" href="http://www.runoob.com/sqlite/sqlite-tutorial.html">SQLite 教程</a></li><li><a title="MongoDB 教程" href="http://www.runoob.com/mongodb/mongodb-tutorial.html">MongoDB 教程</a></li><li><a title="Redis 教程" href="http://www.runoob.com/redis/redis-tutorial.html">Redis 教程</a></li><li><a title="Memcached 教程" href="http://www.runoob.com/Memcached/Memcached-tutorial.html">Memcached 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 移动端</a><ul class="double-li"><li><a title="Android 教程" href="http://www.runoob.com/w3cnote/android-tutorial-intro.html">Android 教程</a></li><li><a title="Swift 教程" href="http://www.runoob.com/swift/swift-tutorial.html">Swift 教程</a></li><li><a title="jQuery Mobile 教程" href="http://www.runoob.com/jquerymobile/jquerymobile-tutorial.html">jQuery Mobile 教程</a></li><li><a title="ionic 教程" href="http://www.runoob.com/ionic/ionic-tutorial.html">ionic 教程</a></li><li><a title="Kotlin 教程" href="http://www.runoob.com/kotlin/kotlin-tutorial.html">Kotlin 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> XML 教程</a><ul class="double-li"><li><a title="XML 教程" href="http://www.runoob.com/xml/xml-tutorial.html">XML 教程</a></li><li><a title="DTD 教程" href="http://www.runoob.com/dtd/dtd-tutorial.html">DTD 教程</a></li><li><a title="XML DOM 教程" href="http://www.runoob.com/dom/dom-tutorial.html">XML DOM 教程</a></li><li><a title="XSLT 教程" href="http://www.runoob.com/xsl/xsl-tutorial.html">XSLT 教程</a></li><li><a title="XPath 教程" href="http://www.runoob.com/xpath/xpath-tutorial.html">XPath 教程</a></li><li><a title="XQuery 教程" href="http://www.runoob.com/xquery/xquery-tutorial.html">XQuery 教程</a></li><li><a title="XLink 教程" href="http://www.runoob.com/xlink/xlink-tutorial.html">XLink 教程</a></li><li><a title="XPointer 教程" href="http://www.runoob.com/xlink/xlink-tutorial.html">XPointer 教程</a></li><li><a title="XML Schema 教程" href="http://www.runoob.com/schema/schema-tutorial.html">XML Schema 教程</a></li><li><a title="XSL-FO 教程" href="http://www.runoob.com/xslfo/xslfo-tutorial.html">XSL-FO 教程</a></li><li><a title="SVG 教程" href="http://www.runoob.com/svg/svg-tutorial.html">SVG 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> ASP.NET</a><ul class="double-li"><li><a title="ASP.NET 教程" href="http://www.runoob.com/aspnet/aspnet-tutorial.html">ASP.NET 教程</a></li><li><a title="C# 教程" href="http://www.runoob.com/csharp/csharp-tutorial.html">C# 教程</a></li><li><a title="Web Pages 教程" href="http://www.runoob.com/aspnet/webpages-intro.html">Web Pages 教程</a></li><li><a title="Razor 教程" href="http://www.runoob.com/aspnet/razor-intro.html">Razor 教程</a></li><li><a title="MVC 教程" href="http://www.runoob.com/aspnet/mvc-intro.html">MVC 教程</a></li><li><a title="Web Forms 教程" href="http://www.runoob.com/aspnet/aspnet-intro.html">Web Forms 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> Web Service</a><ul class="double-li"><li><a title="Web Service 教程" href="http://www.runoob.com/webservices/webservices-tutorial.html">Web Service 教程</a></li><li><a title="WSDL 教程" href="http://www.runoob.com/wsdl/wsdl-tutorial.html">WSDL 教程</a></li><li><a title="SOAP 教程" href="http://www.runoob.com/soap/soap-tutorial.html">SOAP 教程</a></li><li><a title="RSS 教程" href="http://www.runoob.com/rss/rss-tutorial.html">RSS 教程</a></li><li><a title="RDF 教程" href="http://www.runoob.com/rdf/rdf-tutorial.html">RDF 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 开发工具</a><ul class="double-li"><li><a title="Eclipse 教程" href="http://www.runoob.com/eclipse/eclipse-tutorial.html">Eclipse 教程</a></li><li><a title="Git 教程" href="http://www.runoob.com/git/git-tutorial.html">Git 教程</a></li><li><a title="Svn 教程" href="http://www.runoob.com/svn/svn-tutorial.html">Svn 教程</a></li><li><a title="Firebug 教程" href="http://www.runoob.com/firebug/firebug-tutorial.html">Firebug 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 网站建设</a><ul class="double-li"><li><a title="HTTP 教程" href="http://www.runoob.com/http/http-tutorial.html">HTTP 教程</a></li><li><a title="网站建设指南" href="http://www.runoob.com/web/web-buildingprimer.html">网站建设指南</a></li><li><a title="浏览器信息" href="http://www.runoob.com/browsers/browser-information.html">浏览器信息</a></li><li><a title="网站主机教程" href="http://www.runoob.com/hosting/hosting-tutorial.html">网站主机教程</a></li><li><a title="TCP/IP 教程" href="http://www.runoob.com/tcpip/tcpip-tutorial.html">TCP/IP 教程</a></li><li><a title="W3C 教程" href="http://www.runoob.com/w3c/w3c-tutorial.html">W3C 教程</a></li><li><a title="网站品质" href="http://www.runoob.com/quality/quality-tutorial.html">网站品质</a></li></ul></li></ul>			</div>
	
	</div>
	</div>
	<br>
	
	<div class="sidebar-box ad-box ad-box-large">
		<div class="sidebar-box advertise-here">
			<a href="javascript:void(0);">Advertisement</a>
		</div>
		<div class="ad-600160" id="sidebar-right-ads">
				<script async="" src="./Python3 函数 _ 菜鸟教程_files/f(6).txt"></script>
		<!-- 侧栏1 -->
		<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-5751451760833794" data-ad-slot="4106274865" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><iframe width="160" height="600" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0px;width:160px;height:600px;" src="./Python3 函数 _ 菜鸟教程_files/saved_resource(2).html"></iframe></ins></ins></ins>
		<script>
		(adsbygoogle = window.adsbygoogle || []).push({});
		</script>
				</div>
	</div>
</div></div>

</div>

<script>
var aid = 7303;
function coll() {
	$.post( '/wp-content/themes/runoob/option/user/userinfo.php', {aid:aid, action:"collarticle", opt:'add'},function( data ) {
		if(data.error==0) {
			$("#content").find("h1:first").find("a").attr("href","javascript:void(0);");
			$("#content").find("h1:first").find("img").attr("src","http://www.runoob.com/wp-content/themes/runoob/assets/img/coll2.png").css({width:32+"px",height:32+"px"});
		}
		alert(data.msg);
	},'json');
}
</script>


<!-- 反馈对话框开始 -->
<script src="./Python3 函数 _ 菜鸟教程_files/feedback.js"></script>
<link rel="stylesheet" href="./Python3 函数 _ 菜鸟教程_files/feedback.css">
<script type="text/javascript">
$.feedback({
    ajaxURL: '/feedback/runoob_feedback.php',
    html2canvasURL: '/wp-content/themes/runoob/assets/feedback/stable/2.0/html2canvas.js'
});
</script><button class="feedback-btn feedback-btn-gray" style="display: inline-block;">反馈/建议</button>
<!-- 反馈对话框结束 -->
<button class="feedback-btn feedback-btn-gray" style="display: inline-block;">反馈/建议</button>
<!-- 底部 -->


<div id="footer" class="mar-t50">
   <div class="runoob-block">
    <div class="runoob cf">
     <dl>
      <dt>
       在线实例
      </dt>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/html/html-examples.html">HTML 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/css/css-examples.html">CSS 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/js/js-examples.html">JavaScript 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/ajx/ajax-examples.html">Ajax 实例</a>
      </dd>
       <dd>
       ·<a target="_blank" href="http://www.runoob.com/jquery/jquery-examples.html">jQuery 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/xml/xml-examples.html">XML 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/java/java-examples.html">Java 实例</a>
      </dd>
     
     </dl>
     <dl>
      <dt>
      字符集&amp;工具
      </dt>
      <dd>
       · <a target="_blank" href="http://www.runoob.com/charsets/html-charsets.html">HTML 字符集设置</a>
      </dd>
      <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/html-ascii.html">HTML ASCII 字符集</a>
      </dd>
     <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/ref-entities.html">HTML ISO-8859-1</a>
      </dd> 
      <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/html-symbols.html">HTML 实体符号</a>
      </dd>
      <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/html-colorpicker.html">HTML 拾色器</a>
      </dd>
      <dd>
       · <a target="_blank" href="http://c.runoob.com/front-end/53">JSON 格式化工具</a>
      </dd>
     </dl>
     <dl>
      <dt>
       最新更新
      </dt>
                   <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/w3c-webauthn.html" title="W3C 宣布：WebAuthn 成为正式 Web 标准">W3C 宣布：WebAu...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/knowledge-start.html" title="建个圈子，分享资源">建个圈子，分享资源</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/linux-command-full-fight.html" title="Linux 常用命令全拼">Linux 常用命令全拼</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/octotree-github-repo.html" title="octotree — 树形展示 Github 项目代码">octotree —...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/php/func-string-mb_substr.html" title="PHP mb_substr() 函数">PHP mb_substr()...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/factory-pattern.html" title="设计模式 – 工厂模式">设计模式 –...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/perl-output-chinese.html" title="解决 Perl 输出中文乱码问题">解决 Perl 输出...</a>
      </dd>
             </dl>
     <dl>
      <dt>
       站点信息
      </dt>
      <dd>
       ·
       <a target="_blank" href="http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=ssbDyoOAgfLU3crf09venNHd3w" rel="external nofollow">意见反馈</a>
      <!--<a class="wxpopup" onclick="popFunction()">合作联系
       <span class="popuptext" id="myPopup">微信(注明来意)：<strong>centos5</strong></span>
      </a>-->
      </dd>
      
     
      <dd>
       ·
      
      <a class="wxpopup" onclick="popFunction()">合作联系
       <span class="popuptext" id="myPopup">微信(注明来意)：<strong>centos5</strong></span>
      </a>
      </dd>
     
      <dd>
       ·
      <a target="_blank" href="http://www.runoob.com/disclaimer">免责声明</a>
       </dd>
          <!--
       <dd style="display: block;">
       &middot;
      <a href="javascript:void(0)" onclick="dashangToggle()" style="font-weight:bold;color:#f00;" title="打赏，支持一下">打赏一下</a>
       </dd>
     -->
      <dd>
       ·
       <a target="_blank" href="http://www.runoob.com/aboutus">关于我们</a>
       </dd>
      <dd>
       ·
      <a target="_blank" href="http://www.runoob.com/archives">文章归档</a>
      </dd>
    
     </dl>
    
     <div class="search-share">
      <div class="app-download">
        <div>
         <strong>关注微信</strong>
        </div>
      </div>
      <div class="share">
            <img width="128" height="128" src="./Python3 函数 _ 菜鸟教程_files/qrcode.png">
       </div>
     </div>
     
    </div>
   </div>
   <div class="w-1000 copyright">
     Copyright © 2013-2019    <strong><a href="http://www.runoob.com/" target="_blank">菜鸟教程</a></strong>&nbsp;
    <strong><a href="http://www.runoob.com/" target="_blank">runoob.com</a></strong> All Rights Reserved. 备案号：闽ICP备15012807号-1
   </div>
  </div>
  <div class="fixed-btn">
    <a class="go-top" href="javascript:void(0)" title="返回顶部" style="opacity: 0.875056;"> <i class="fa fa-angle-up"></i></a>
    <a class="qrcode" href="javascript:void(0)" title="关注我们"><i class="fa fa-qrcode"></i></a>
    <a class="writer" style="" href="javascript:void(0)" title="标记/收藏"><i class="fa fa-star" aria-hidden="true"></i></a>
    <!-- qrcode modal -->
    <div id="bottom-qrcode" class="modal panel-modal hide fade in">
      <h4>微信关注</h4>
      <div class="panel-body"><img alt="微信关注" width="128" height="128" src="./Python3 函数 _ 菜鸟教程_files/qrcode.png"></div> 
    </div>
  </div>

  <div class="hide_box"></div>
    <div class="shang_box">
      <a class="shang_close" href="javascript:void(0)" onclick="dashangToggle()" title="关闭"><img src="./Python3 函数 _ 菜鸟教程_files/close.jpg" alt="取消"></a>
       
      <div class="shang_tit">
        <p>感谢您的支持，我会继续努力的!</p>
      </div>
      <div class="shang_payimg">
        <img src="./Python3 函数 _ 菜鸟教程_files/weipayimg.png" alt="扫码支持" title="扫一扫">
      </div>
        <div class="pay_explain">扫码打赏，你说多少就多少</div>
      <div class="shang_payselect">
        <div class="pay_item  checked" data-id="weipay">
          <span class="radiobox"></span>
          <span class="pay_logo"><img src="./Python3 函数 _ 菜鸟教程_files/wechat.jpg" alt="微信"></span>
        </div>
        <div class="pay_item" data-id="alipay">
          <span class="radiobox"></span>
          <span class="pay_logo"><img src="./Python3 函数 _ 菜鸟教程_files/alipay.jpg" alt="支付宝"></span>
        </div>
        
      </div>
      <div class="shang_info">
        <p>打开<span id="shang_pay_txt">支付宝</span>扫一扫，即可进行扫码打赏哦</p>
        <p><a href="http://c.runoob.com/codedemo/5348" target="_blank"><span style=" font-size: 14px;color: #000;font-weight: bold;">点我查看本站打赏源码！</span></a></p>
      </div>
    </div>
  <div id="testClick"></div>
 <div style="display:none;">
 
 <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?3eec0b7da6548cf07db3bc477ea905ee";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async="" src="./Python3 函数 _ 菜鸟教程_files/js"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-84264393-2');
</script>
</div>
<script>
window.jsui={
    www: '//wwww.runoob.com',
    uri: '//www.runoob.com/wp-content/themes/runoob'
};
</script>
<style>
ol,ul{list-style:none}.cd-switcher a{text-decoration:none;outline:0}.cd-switcher a:hover{text-decoration:underline}a:focus{outline:0;-moz-outline:0}.main_nav{width:300px;height:60px;margin:60px auto 10px auto}.main_nav li{float:left;width:60px;margin-right:10px;font-size:16px;padding:.6em 1em;border-radius:3em;background:#2f889a;text-align:center}.main_nav li a{color:#fff}.errtip{background-color:#fceaea;color:#db5353;padding:8px 15px;font-size:14px;border:1px solid #fc9797;border-radius:5px}.cd-user-modal{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(52,54,66,0.9);z-index:3;overflow-y:auto;cursor:pointer;visibility:hidden;opacity:0;-webkit-transition:opacity .3s 0,visibility 0 .3s;-moz-transition:opacity .3s 0,visibility 0 .3s;transition:opacity .3s 0,visibility 0 .3s}.cd-user-modal.is-visible{visibility:visible;opacity:1;-webkit-transition:opacity .3s 0,visibility 0 0;-moz-transition:opacity .3s 0,visibility 0 0;transition:opacity .3s 0,visibility 0 0}.cd-user-modal.is-visible .cd-user-modal-container{-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}.cd-user-modal-container{position:relative;width:90%;max-width:500px;background:#FFF;margin:3em auto 4em;cursor:auto;border-radius:.25em;-webkit-transform:translateY(-30px);-moz-transform:translateY(-30px);-ms-transform:translateY(-30px);-o-transform:translateY(-30px);transform:translateY(-30px);-webkit-transition-property:-webkit-transform;-moz-transition-property:-moz-transform;transition-property:transform;-webkit-transition-duration:.3s;-moz-transition-duration:.3s;transition-duration:.3s}.cd-user-modal-container .cd-switcher:after{content:"";display:table;clear:both}.cd-user-modal-container .cd-switcher li{width:50%;float:left;text-align:center}.cd-user-modal-container .cd-switcher li:first-child a{border-radius:.25em 0 0 0}.cd-user-modal-container .cd-switcher li:last-child a{border-radius:0 .25em 0 0}.cd-user-modal-container .cd-switcher a{font-size:1.2em;font-weight:bold;display:block;width:100%;height:50px;line-height:50px;background:#e8f1e2;color:#96b880}.cd-user-modal-container .cd-switcher a.selected{background:#FFF;color:#505260}@media only screen and (min-width:600px){.cd-user-modal-container{margin:4em auto}.cd-user-modal-container .cd-switcher a{height:70px;line-height:70px}}.cd-form{padding:1.4em}.cd-form .fieldset{position:relative;margin:1.4em 0}.cd-form .fieldset:first-child{margin-top:0}.cd-form .fieldset:last-child{margin-bottom:0}.cd-form label{font-size:16px;font-size:.875rem}.cd-form label.image-replace{display:inline-block;position:absolute;left:15px;top:50%;bottom:auto;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%);height:20px;width:20px;overflow:hidden;text-indent:100%;white-space:nowrap;color:transparent;text-shadow:none;background-repeat:no-repeat;background-position:50% 0}.cd-form label.cd-username{background-image:url("/wp-content/themes/runoob/assets/img/cd-icon-username.svg")}.cd-form label.cd-email{background-image:url("/wp-content/themes/runoob/assets/img/cd-icon-email.svg")}.cd-form label.cd-password{background-image:url("/wp-content/themes/runoob/assets/img/cd-icon-password.svg")}.cd-form input{margin:0;padding:0;border-radius:.25em}.cd-form input.full-width{width:80%}.cd-form input.full-width2{width:94%}.cd-form input.has-padding{padding:12px 20px 12px 50px}.cd-form input.has-border{border:1px solid #d2d8d8;-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;-o-appearance:none;appearance:none}.cd-form input.has-border:focus{border-color:#98b880;box-shadow:0 0 5px rgba(52,54,66,0.1);outline:0}.cd-form input.has-error{border:1px solid #d76666}.cd-form input[type=password]{padding-right:65px}.cd-form input[type=submit]{padding:16px 0;cursor:pointer;background:#96b97d;color:#FFF;font-weight:bold;border:0;-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;-o-appearance:none;appearance:none;font-size:1.2em;font-weight:bold}.no-touch .cd-form input[type=submit]:hover,.no-touch .cd-form input[type=submit]:focus{background:#3599ae;outline:0}@media only screen and (min-width:600px){.cd-form{padding:2em}.cd-form .fieldset{margin:2em 0}.cd-form .fieldset:first-child{margin-top:0}.cd-form .fieldset:last-child{margin-bottom:0}.cd-form input.has-padding{padding:16px 20px 16px 50px}.cd-form input[type=submit]{padding:16px 0}}.cd-close-form{display:block;position:absolute;width:40px;height:40px;right:0;top:-40px;background:url("/wp-content/themes/runoob/assets/img/cd-icon-close.svg") no-repeat center center;text-indent:100%;white-space:nowrap;overflow:hidden}@media only screen and (min-width:1170px){}#cd-login,#cd-signup,#cd-reset-password{display:none}#cd-login.is-selected,#cd-signup.is-selected,#cd-reset-password.is-selected{display:block}
</style>
<div class="cd-user-modal"> 
	<div class="cd-user-modal-container">
		<ul class="cd-switcher">
			<li><a href="javascript:;">用户登录</a></li>
			<li><a href="javascript:;">注册新用户</a></li>
		</ul>

		<div id="cd-login"> <!-- 登录表单 -->
			<div class="cd-form">
				<p class="fieldset">
					<label class="image-replace cd-username" for="signin-username">用户名</label>
					<input class="full-width has-padding has-border" id="signin-username" name="username" type="text" placeholder="输入用户名">
				</p>

				<p class="fieldset">
					<label class="image-replace cd-password" for="signin-password">密码</label>
					<input class="full-width has-padding has-border" id="signin-password" name="password" type="password" placeholder="输入密码">
				</p>
				
				<p class="fieldset">
					<input type="checkbox" id="remember-me" checked="">
					<label for="remember-me">记住登录状态</label>
          <a href="http://www.runoob.com/reset-password" style="float: right;padding-right: 20px;" target="_blank">忘记密码？</a>
				</p>
 				<input type="hidden" name="action" value="signin">
				<p class="fieldset">
					<input class="full-width2" type="submit" value="登 录">
				</p>
        <div class="err-msg"></div>
			</div>
		</div>

		<div id="cd-signup"> <!-- 注册表单 -->
			<div class="cd-form">
				<p class="fieldset">
					<label class="image-replace cd-password" for="verifycode">邀请码</label>
					<input class="full-width has-padding has-border" id="signup-verifycode" name="verifycode" type="text" placeholder="输入邀请码">
				</p>
				<p class="fieldset">
					<label class="image-replace cd-username" for="signup-username">用户名</label>
					<input class="full-width has-padding has-border" id="signup-username" name="name" type="text" placeholder="输入用户名">
				</p>

				<p class="fieldset">
					<label class="image-replace cd-email" for="signup-email">邮箱</label>
					<input class="full-width has-padding has-border" name="email" id="signup-email" type="email" placeholder="输入mail">
				</p>

				<p class="fieldset">
					<label class="image-replace cd-password" for="signup-password">密码</label>
					<input class="full-width has-padding has-border" id="signup-password" name="password" type="password" placeholder="输入密码">
				</p>
				<p class="fieldset">
					<label class="image-replace cd-password" for="signup-password2">重复输入密码</label>
					<input class="full-width has-padding has-border" id="signup-password2" name="password2" type="password" placeholder="重复输入密码">
				</p>
				
				<!-- 
				<p class="fieldset">
					<input type="checkbox" id="accept-terms">
					<label for="accept-terms">我已阅读并同意 <a href="javascript:;">用户协议</a></label>
				</p>
				 -->
				 
				 <input type="hidden" name="action" value="signup">
				<p class="fieldset">
					<input class="full-width2" type="submit" value="注册新用户">
				</p>
				<p class="fieldset">
				  <a href="http://www.runoob.com/w3cnote/runoob-user-test-intro.html#invite" target="_blank">如何获取邀请码？</a>
				  </p>
				<div class="err-msg"></div>
			</div>

		</div>

		<a href="javascript:;" class="cd-close-form">关闭</a>
	</div>
</div> 
<script src="./Python3 函数 _ 菜鸟教程_files/main.min.js"></script>


<iframe id="google_osd_static_frame_499027904533" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px;" src="./Python3 函数 _ 菜鸟教程_files/saved_resource(3).html"></iframe></body><iframe id="google_shimpl" style="display: none;" src="./Python3 函数 _ 菜鸟教程_files/saved_resource(4).html"></iframe><iframe id="google_esf" name="google_esf" src="./Python3 函数 _ 菜鸟教程_files/zrt_lookup.html" data-ad-client="ca-pub-5751451760833794" style="display: none;"></iframe></html>