<!DOCTYPE html>
<!-- saved from url=(0054)http://www.runoob.com/python3/python3-inputoutput.html -->
<html><head><meta http-equiv="Content-Type" content="text/html; charset=UTF-8">
	
  <meta property="qc:admins" content="465267610762567726375">
	<meta name="viewport" content="width=device-width, initial-scale=1.0">
	<title>Python3 输入和输出 | 菜鸟教程</title>

  <link rel="dns-prefetch" href="http://s.w.org/">
<link rel="stylesheet" id="wp-block-library-css" href="./Python3 输入和输出 _ 菜鸟教程_files/style.min.css" type="text/css" media="all">
<link rel="canonical" href="http://www.runoob.com/python3/python3-inputoutput.html">
<meta name="keywords" content="Python3 输入和输出">
<meta name="description" content="Python3 输入和输出  在前面几个章节中，我们其实已经接触了 Python 的输入输出的功能。本章节我们将具体介绍 Python 的输入输出。    输出格式美化  Python两种输出值的方式: 表达式语句和 print() 函数。 第三种方式是使用文件对象的 write() 方法，标准输出文件可以用 sys.stdout 引用。  如果你希望输出的形式更加多样，可以使用 str.format() 函数来格式化输出值。 如果你希..">
		
	<link rel="shortcut icon" href="http://static.runoob.com/images/favicon.ico" mce_href="//static.runoob.com/images/favicon.ico" type="image/x-icon">
	<link rel="stylesheet" href="./Python3 输入和输出 _ 菜鸟教程_files/style.css" type="text/css" media="all">	
	<link rel="stylesheet" href="./Python3 输入和输出 _ 菜鸟教程_files/font-awesome.min.css" media="all">	
  <!--[if gte IE 9]><!-->
  <script type="text/javascript" async="" src="./Python3 输入和输出 _ 菜鸟教程_files/analytics.js"></script><script src="./Python3 输入和输出 _ 菜鸟教程_files/hm.js"></script><script src="./Python3 输入和输出 _ 菜鸟教程_files/osd.js"></script><script src="./Python3 输入和输出 _ 菜鸟教程_files/ca-pub-5751451760833794.js"></script><script src="./Python3 输入和输出 _ 菜鸟教程_files/jquery.min.js"></script>
  <!--<![endif]-->
  <!--[if lt IE 9]>
     <script src="//cdn.staticfile.org/jquery/1.9.1/jquery.min.js"></script>
     <script src="//cdn.staticfile.org/html5shiv/r29/html5.min.js"></script>
  <![endif]-->
  <link rel="apple-touch-icon" href="http://static.runoob.com/images/icon/mobile-icon.png">
  <meta name="apple-mobile-web-app-title" content="菜鸟教程">
<link rel="preload" href="./Python3 输入和输出 _ 菜鸟教程_files/f(6).txt" as="script"><script type="text/javascript" src="./Python3 输入和输出 _ 菜鸟教程_files/f(6).txt"></script><link rel="preload" href="http://pagead2.googlesyndication.com/pagead/js/r20190227/r20190131/show_ads_impl.js" as="script"><link rel="stylesheet" type="text/css" href="./Python3 输入和输出 _ 菜鸟教程_files/prettify.css"></head>
<body style="">

<!--  头部 -->
<div class="container logo-search">

  <div class="col search row-search-mobile">
    <form action="http://www.runoob.com/python3/index.php">
      <input class="placeholder" placeholder="搜索……" name="s" autocomplete="off">
    </form>
  </div>

  <div class="row">
    <div class="col logo">
      <h1><a href="http://www.runoob.com/">菜鸟教程 -- 学的不仅是技术，更是梦想！</a></h1>
    </div>
        <div class="col right-list"> 
    <button class="btn btn-responsive-nav btn-inverse" data-toggle="collapse" data-target=".nav-main-collapse" id="pull" style=""> <i class="fa fa-navicon"></i> </button>
    </div>
        <div class="col search search-desktop last">
      <form action="http://www.runoob.com/" target="_blank">
        <input class="placeholder" id="s" name="s" placeholder="搜索……" autocomplete="off">
      </form>
    </div>
  </div>
</div>


<!-- 导航栏 -->
<!-- 导航栏 -->
<div class="container navigation">
	<div class="row">
		<div class="col nav">
			<ul class="pc-nav">
				<li><a href="http://www.runoob.com/">首页</a></li>
				<li><a href="http://www.runoob.com/html/html-tutorial.html">HTML</a></li>
				<li><a href="http://www.runoob.com/css/css-tutorial.html">CSS</a></li>
				<li><a href="http://www.runoob.com/js/js-tutorial.html">JavaScript</a></li>
				<li><a href="http://www.runoob.com/jquery/jquery-tutorial.html">jQuery</a></li>
				<li><a href="http://www.runoob.com/bootstrap/bootstrap-tutorial.html">Bootstrap</a></li>
				<li><a href="http://www.runoob.com/sql/sql-tutorial.html">SQL</a></li>
				<li><a href="http://www.runoob.com/mysql/mysql-tutorial.html">MySQL</a></li>
				<li><a href="http://www.runoob.com/php/php-tutorial.html">PHP</a></li>
				<li><a href="http://www.runoob.com/python/python-tutorial.html">Python2</a></li>
				<li><a href="http://www.runoob.com/python3/python3-tutorial.html">Python3</a></li>
				<li><a href="http://www.runoob.com/cprogramming/c-tutorial.html">C</a></li>
				<li><a href="http://www.runoob.com/cplusplus/cpp-tutorial.html">C++</a></li>
				<li><a href="http://www.runoob.com/csharp/csharp-tutorial.html">C#</a></li>
				<li><a href="http://www.runoob.com/java/java-tutorial.html">Java</a></li>
				<li><a href="http://www.runoob.com/browser-history">本地书签</a></li>
				
				<!--
				<li><a href="javascript:;" class="runoob-pop">登录</a></li>
				-->
      		</ul>
			<ul class="mobile-nav">
				<li><a href="http://www.runoob.com/">首页</a></li>
				<li><a href="http://www.runoob.com/html/html-tutorial.html">HTML</a></li>
				<li><a href="http://www.runoob.com/css/css-tutorial.html">CSS</a></li>
				<li><a href="http://www.runoob.com/js/js-tutorial.html">JS</a></li>
				<li><a href="http://www.runoob.com/browser-history">本地书签</a></li>
				<a href="javascript:void(0)" class="search-reveal">Search</a> 
			</ul>
			
		</div>
	</div>
</div><!--  内容  -->
<div class="container main">
	<!-- 中间 -->
	<div class="row">
	
<div class="col left-column">
	<div class="tab">Python 3 教程	<a data-cate="124" href="javascript:void(0);" title="夜间模式" id="moon"><i class="fa fa-moon-o" aria-hidden="true" style="font-size: 1.4em;float: right;margin: 4px 6px 0;"></i></a>
	<a data-cate="124" style="display:none;" href="javascript:void(0);" title="日间模式" id="sun"><i class="fa fa-sun-o" aria-hidden="true" style="font-size: 1.4em;float: right;margin: 4px 6px 0;"></i></a>
	</div>
	<div class="sidebar-box gallery-list">
		<div class="design" id="leftcolumn">
						<a target="_top" title="Python3 教程" href="http://www.runoob.com/python3/python3-tutorial.html">
			Python3 教程			</a>
			<a target="_top" title=" Python3 环境搭建" href="http://www.runoob.com/python3/python3-install.html"> Python3 环境搭建</a>
<a target="_top" title=" Python3 基础语法" href="http://www.runoob.com/python3/python3-basic-syntax.html"> Python3 基础语法 </a>
<a target="_top" title=" Python3 基本数据类型" href="http://www.runoob.com/python3/python3-data-type.html"> Python3 基本数据类型 </a>			<a target="_top" title="Python3 解释器" href="http://www.runoob.com/python3/python3-interpreter.html">
			Python3 解释器			</a>
						<a target="_top" title="Python3 注释" href="http://www.runoob.com/python3/python3-comment.html">
			Python3 注释			</a>
			<a target="_top" title="Python3 运算符" href="http://www.runoob.com/python3/python3-basic-operators.html"> Python3 运算符 </a>			<a target="_top" title="Python3 数字(Number)" href="http://www.runoob.com/python3/python3-number.html">
			Python3 数字(Number)			</a>
						<a target="_top" title="Python3 字符串" href="http://www.runoob.com/python3/python3-string.html">
			Python3 字符串			</a>
						<a target="_top" title="Python3 列表" href="http://www.runoob.com/python3/python3-list.html">
			Python3 列表			</a>
			<a target="_top" title="Python3 元组" href="http://www.runoob.com/python3/python3-tuple.html"> Python3 元组 </a>
<a target="_top" title="Python3 字典" href="http://www.runoob.com/python3/python3-dictionary.html"> Python3 字典</a>
<a target="_top" title="Python3 集合" href="http://www.runoob.com/python3/python3-set.html"> Python3 集合</a>			<a target="_top" title="Python3 编程第一步" href="http://www.runoob.com/python3/python3-step1.html">
			Python3 编程第一步			</a>
						<a target="_top" title="Python3 条件控制" href="http://www.runoob.com/python3/python3-conditional-statements.html">
			Python3 条件控制			</a>
						<a target="_top" title="Python3 循环语句" href="http://www.runoob.com/python3/python3-loop.html">
			Python3 循环语句			</a>
			<a target="_top" title="Python3 迭代器与生成器" href="http://www.runoob.com/python3/python3-iterator-generator.html"> Python3 迭代器与生成器</a>			<a target="_top" title="Python3 函数" href="http://www.runoob.com/python3/python3-function.html">
			Python3 函数			</a>
						<a target="_top" title="Python3 数据结构" href="http://www.runoob.com/python3/python3-data-structure.html">
			Python3 数据结构			</a>
						<a target="_top" title="Python3 模块" href="http://www.runoob.com/python3/python3-module.html">
			Python3 模块			</a>
						<a target="_top" title="Python3 输入和输出" href="http://www.runoob.com/python3/python3-inputoutput.html" style="background-color: rgb(150, 185, 125); font-weight: bold; color: rgb(255, 255, 255);">
			Python3 输入和输出			</a>
			<a target="_top" title="Python3 File" href="http://www.runoob.com/python3/python3-file-methods.html"> Python3 File </a>
<a target="_top" title="Python3 OS" href="http://www.runoob.com/python3/python3-os-file-methods.html"> Python3 OS </a>			<a target="_top" title="Python3 错误和异常" href="http://www.runoob.com/python3/python3-errors-execptions.html">
			Python3 错误和异常			</a>
						<a target="_top" title="Python3 面向对象" href="http://www.runoob.com/python3/python3-class.html">
			Python3 面向对象			</a>
						<a target="_top" title="Python3 标准库概览" href="http://www.runoob.com/python3/python3-stdlib.html">
			Python3 标准库概览			</a>
						<a target="_top" title="Python3 实例" href="http://www.runoob.com/python3/python3-examples.html">
			Python3 实例			</a>
			<a target="_blank" title="Python 测验" href="http://www.runoob.com/quiz/python-quiz.html"> Python 测验 </a>
<br><h2 class="left"><span class="left_h2">Python3</span> 高级教程</h2>			<a target="_top" title="Python3 正则表达式" href="http://www.runoob.com/python3/python3-reg-expressions.html">
			Python3 正则表达式			</a>
						<a target="_top" title="Python3 CGI编程" href="http://www.runoob.com/python3/python3-cgi-programming.html">
			Python3 CGI编程			</a>
			<a target="_top" title="Python MySQL - mysql-connector 驱动" href="http://www.runoob.com/python3/python-mysql-connector.html">Python3 MySQL(mysql-connector)</a>			<a target="_top" title="Python3 MySQL 数据库连接 – PyMySQL 驱动" href="http://www.runoob.com/python3/python3-mysql.html">
			Python3 MySQL(PyMySQL)			</a>
						<a target="_top" title="Python3 网络编程" href="http://www.runoob.com/python3/python3-socket.html">
			Python3 网络编程			</a>
						<a target="_top" title="Python3 SMTP发送邮件" href="http://www.runoob.com/python3/python3-smtp.html">
			Python3 SMTP发送邮件			</a>
						<a target="_top" title="Python3 多线程" href="http://www.runoob.com/python3/python3-multithreading.html">
			Python3 多线程			</a>
						<a target="_top" title="Python3 XML 解析" href="http://www.runoob.com/python3/python3-xml-processing.html">
			Python3 XML 解析			</a>
						<a target="_top" title="Python3 JSON 数据解析" href="http://www.runoob.com/python3/python3-json.html">
			Python3 JSON			</a>
						<a target="_top" title="Python3 日期和时间" href="http://www.runoob.com/python3/python3-date-time.html">
			Python3 日期和时间			</a>
						<a target="_top" title="Python3 内置函数" href="http://www.runoob.com/python3/python3-built-in-functions.html">
			Python3 内置函数			</a>
						<a target="_top" title="Python MongoDB" href="http://www.runoob.com/python3/python-mongodb.html">
			Python MongoDB			</a>
						<a target="_top" title="Python uWSGI  安装配置" href="http://www.runoob.com/python3/python-uwsgi.html">
			Python uWSGI  安装配置			</a>
				
		</div>
	</div>	
</div>	<div class="col middle-column">
		
	
	<div class="article">
			<div class="article-heading-ad" style="display: none;">
		
		</div>
		<div class="previous-next-links">
			<div class="previous-design-link"><a href="http://www.runoob.com/python3/python3-module.html"><i style="font-size:16px;" class="fa fa-arrow-left" aria-hidden="true"></i></a> <a href="http://www.runoob.com/python3/python3-module.html" rel="prev" title="Python3 模块">Python3 模块</a> </div>
			<div class="next-design-link"><a href="http://www.runoob.com/python3/python3-file-methods.html" rel="next" title="Python3 File">Python3 File</a> <a href="http://www.runoob.com/python3/python3-file-methods.html"><i style="font-size:16px;" class="fa fa-arrow-right" aria-hidden="true"></i></a></div>
		</div>
		<div class="article-body">
		
			<div class="article-intro" id="content">
			
			<h1>Python3 输入和输出</h1>

<p>在前面几个章节中，我们其实已经接触了 Python 的输入输出的功能。本章节我们将具体介绍 Python 的输入输出。</p>
<h2>

<hr>
</h2><h2>输出格式美化</h2>
<p>
Python两种输出值的方式: 表达式语句和 print() 函数。
</p><p>第三种方式是使用文件对象的 write() 方法，标准输出文件可以用 sys.stdout 引用。</p>
<p></p>
<p>如果你希望输出的形式更加多样，可以使用 str.format() 函数来格式化输出值。</p>
<p>如果你希望将输出的值转成字符串，可以使用 repr() 或 str() 函数来实现。</p>
<ul><li>
<b>str()：</b> 函数返回一个用户易读的表达形式。 </li><li>
<b>repr()：</b> 产生一个解释器易读的表达形式。</li></ul>
<h3>
例如
</h3>

<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> s </span><span class="pun">=</span><span class="pln"> </span><span class="str">'Hello, Runoob'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> str</span><span class="pun">(</span><span class="pln">s</span><span class="pun">)</span><span class="pln">
</span><span class="str">'Hello, Runoob'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> repr</span><span class="pun">(</span><span class="pln">s</span><span class="pun">)</span><span class="pln">
</span><span class="str">"'Hello, Runoob'"</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> str</span><span class="pun">(</span><span class="lit">1</span><span class="pun">/</span><span class="lit">7</span><span class="pun">)</span><span class="pln">
</span><span class="str">'0.14285714285714285'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> x </span><span class="pun">=</span><span class="pln"> </span><span class="lit">10</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="lit">3.25</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> y </span><span class="pun">=</span><span class="pln"> </span><span class="lit">200</span><span class="pln"> </span><span class="pun">*</span><span class="pln"> </span><span class="lit">200</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> s </span><span class="pun">=</span><span class="pln"> </span><span class="str">'x 的值为： '</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> repr</span><span class="pun">(</span><span class="pln">x</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">',  y 的值为：'</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> repr</span><span class="pun">(</span><span class="pln">y</span><span class="pun">)</span><span class="pln"> </span><span class="pun">+</span><span class="pln"> </span><span class="str">'...'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">s</span><span class="pun">)</span><span class="pln">
x </span><span class="pun">的值为：</span><span class="pln"> </span><span class="lit">32.5</span><span class="pun">,</span><span class="pln">  y </span><span class="pun">的值为：</span><span class="lit">40000.</span><span class="pun">..</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="com">#  repr() 函数可以转义字符串中的特殊字符</span><span class="pln">
</span><span class="pun">...</span><span class="pln"> hello </span><span class="pun">=</span><span class="pln"> </span><span class="str">'hello, runoob\n'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> hellos </span><span class="pun">=</span><span class="pln"> repr</span><span class="pun">(</span><span class="pln">hello</span><span class="pun">)</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">hellos</span><span class="pun">)</span><span class="pln">
</span><span class="str">'hello, runoob\n'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="com"># repr() 的参数可以是 Python 的任何对象</span><span class="pln">
</span><span class="pun">...</span><span class="pln"> repr</span><span class="pun">((</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> y</span><span class="pun">,</span><span class="pln"> </span><span class="pun">(</span><span class="str">'Google'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Runoob'</span><span class="pun">)))</span><span class="pln">
</span><span class="str">"(32.5, 40000, ('Google', 'Runoob'))"</span></pre>
<p>
这里有两种方式输出一个平方与立方的表:
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">for</span><span class="pln"> x </span><span class="kwd">in</span><span class="pln"> range</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">11</span><span class="pun">):</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">repr</span><span class="pun">(</span><span class="pln">x</span><span class="pun">).</span><span class="pln">rjust</span><span class="pun">(</span><span class="lit">2</span><span class="pun">),</span><span class="pln"> repr</span><span class="pun">(</span><span class="pln">x</span><span class="pun">*</span><span class="pln">x</span><span class="pun">).</span><span class="pln">rjust</span><span class="pun">(</span><span class="lit">3</span><span class="pun">),</span><span class="pln"> </span><span class="kwd">end</span><span class="pun">=</span><span class="str">' '</span><span class="pun">)</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     </span><span class="com"># 注意前一行 'end' 的使用</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">repr</span><span class="pun">(</span><span class="pln">x</span><span class="pun">*</span><span class="pln">x</span><span class="pun">*</span><span class="pln">x</span><span class="pun">).</span><span class="pln">rjust</span><span class="pun">(</span><span class="lit">4</span><span class="pun">))</span><span class="pln">
</span><span class="pun">...</span><span class="pln">
 </span><span class="lit">1</span><span class="pln">   </span><span class="lit">1</span><span class="pln">    </span><span class="lit">1</span><span class="pln">
 </span><span class="lit">2</span><span class="pln">   </span><span class="lit">4</span><span class="pln">    </span><span class="lit">8</span><span class="pln">
 </span><span class="lit">3</span><span class="pln">   </span><span class="lit">9</span><span class="pln">   </span><span class="lit">27</span><span class="pln">
 </span><span class="lit">4</span><span class="pln">  </span><span class="lit">16</span><span class="pln">   </span><span class="lit">64</span><span class="pln">
 </span><span class="lit">5</span><span class="pln">  </span><span class="lit">25</span><span class="pln">  </span><span class="lit">125</span><span class="pln">
 </span><span class="lit">6</span><span class="pln">  </span><span class="lit">36</span><span class="pln">  </span><span class="lit">216</span><span class="pln">
 </span><span class="lit">7</span><span class="pln">  </span><span class="lit">49</span><span class="pln">  </span><span class="lit">343</span><span class="pln">
 </span><span class="lit">8</span><span class="pln">  </span><span class="lit">64</span><span class="pln">  </span><span class="lit">512</span><span class="pln">
 </span><span class="lit">9</span><span class="pln">  </span><span class="lit">81</span><span class="pln">  </span><span class="lit">729</span><span class="pln">
</span><span class="lit">10</span><span class="pln"> </span><span class="lit">100</span><span class="pln"> </span><span class="lit">1000</span><span class="pln">

</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">for</span><span class="pln"> x </span><span class="kwd">in</span><span class="pln"> range</span><span class="pun">(</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">11</span><span class="pun">):</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'{0:2d} {1:3d} {2:4d}'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> x</span><span class="pun">*</span><span class="pln">x</span><span class="pun">,</span><span class="pln"> x</span><span class="pun">*</span><span class="pln">x</span><span class="pun">*</span><span class="pln">x</span><span class="pun">))</span><span class="pln">
</span><span class="pun">...</span><span class="pln">
 </span><span class="lit">1</span><span class="pln">   </span><span class="lit">1</span><span class="pln">    </span><span class="lit">1</span><span class="pln">
 </span><span class="lit">2</span><span class="pln">   </span><span class="lit">4</span><span class="pln">    </span><span class="lit">8</span><span class="pln">
 </span><span class="lit">3</span><span class="pln">   </span><span class="lit">9</span><span class="pln">   </span><span class="lit">27</span><span class="pln">
 </span><span class="lit">4</span><span class="pln">  </span><span class="lit">16</span><span class="pln">   </span><span class="lit">64</span><span class="pln">
 </span><span class="lit">5</span><span class="pln">  </span><span class="lit">25</span><span class="pln">  </span><span class="lit">125</span><span class="pln">
 </span><span class="lit">6</span><span class="pln">  </span><span class="lit">36</span><span class="pln">  </span><span class="lit">216</span><span class="pln">
 </span><span class="lit">7</span><span class="pln">  </span><span class="lit">49</span><span class="pln">  </span><span class="lit">343</span><span class="pln">
 </span><span class="lit">8</span><span class="pln">  </span><span class="lit">64</span><span class="pln">  </span><span class="lit">512</span><span class="pln">
 </span><span class="lit">9</span><span class="pln">  </span><span class="lit">81</span><span class="pln">  </span><span class="lit">729</span><span class="pln">
</span><span class="lit">10</span><span class="pln"> </span><span class="lit">100</span><span class="pln"> </span><span class="lit">1000</span></pre>
<p><b>注意：</b>在第一个例子中, 每列间的空格由 print() 添加。</p>
<p>
这个例子展示了字符串对象的 rjust() 方法, 它可以将字符串靠右, 并在左边填充空格。</p><p>
还有类似的方法, 如 ljust() 和 center()。 这些方法并不会写任何东西, 它们仅仅返回新的字符串。</p>
<p>
另一个方法 zfill(), 它会在数字的左边填充 0，如下所示：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="str">'12'</span><span class="pun">.</span><span class="pln">zfill</span><span class="pun">(</span><span class="lit">5</span><span class="pun">)</span><span class="pln">
</span><span class="str">'00012'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="str">'-3.14'</span><span class="pun">.</span><span class="pln">zfill</span><span class="pun">(</span><span class="lit">7</span><span class="pun">)</span><span class="pln">
</span><span class="str">'-003.14'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="str">'3.14159265359'</span><span class="pun">.</span><span class="pln">zfill</span><span class="pun">(</span><span class="lit">5</span><span class="pun">)</span><span class="pln">
</span><span class="str">'3.14159265359'</span></pre>
<p>str.format() 的基本使用如下:</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'{}网址： "{}!"'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="str">'菜鸟教程'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'www.runoob.com'</span><span class="pun">))</span><span class="pln">
</span><span class="pun">菜鸟教程网址：</span><span class="pln"> </span><span class="str">"www.runoob.com!"</span></pre>
<p>括号及其里面的字符 (称作格式化字段) 将会被 format() 中的参数替换。 </p>
<p>在括号中的数字用于指向传入对象在 format() 中的位置，如下所示：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'{0} 和 {1}'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="str">'Google'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Runoob'</span><span class="pun">))</span><span class="pln">
</span><span class="typ">Google</span><span class="pln"> </span><span class="pun">和</span><span class="pln"> </span><span class="typ">Runoob</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'{1} 和 {0}'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="str">'Google'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Runoob'</span><span class="pun">))</span><span class="pln">
</span><span class="typ">Runoob</span><span class="pln"> </span><span class="pun">和</span><span class="pln"> </span><span class="typ">Google</span></pre>
<p>
如果在 format() 中使用了关键字参数, 那么它们的值会指向使用该名字的参数。</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'{name}网址： {site}'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">name</span><span class="pun">=</span><span class="str">'菜鸟教程'</span><span class="pun">,</span><span class="pln"> site</span><span class="pun">=</span><span class="str">'www.runoob.com'</span><span class="pun">))</span><span class="pln">
</span><span class="pun">菜鸟教程网址：</span><span class="pln"> www</span><span class="pun">.</span><span class="pln">runoob</span><span class="pun">.</span><span class="pln">com</span></pre>
<p>
位置及关键字参数可以任意的结合:
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'站点列表 {0}, {1}, 和 {other}。'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="str">'Google'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Runoob'</span><span class="pun">,</span><span class="pln">
                                                       other</span><span class="pun">=</span><span class="str">'Taobao'</span><span class="pun">))</span><span class="pln">
</span><span class="pun">站点列表</span><span class="pln"> </span><span class="typ">Google</span><span class="pun">,</span><span class="pln"> </span><span class="typ">Runoob</span><span class="pun">,</span><span class="pln"> </span><span class="pun">和</span><span class="pln"> </span><span class="typ">Taobao</span><span class="pun">。</span></pre>
<p>'!a' (使用 ascii()), '!s' (使用 str()) 和 '!r' (使用 repr()) 可以用于在格式化某个值之前对其进行转化:</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">import</span><span class="pln"> math
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'常量 PI 的值近似为： {}。'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">math</span><span class="pun">.</span><span class="pln">pi</span><span class="pun">))</span><span class="pln">
</span><span class="pun">常量</span><span class="pln"> PI </span><span class="pun">的值近似为：</span><span class="pln"> </span><span class="lit">3.141592653589793</span><span class="pun">。</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'常量 PI 的值近似为： {!r}。'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">math</span><span class="pun">.</span><span class="pln">pi</span><span class="pun">))</span><span class="pln">
</span><span class="pun">常量</span><span class="pln"> PI </span><span class="pun">的值近似为：</span><span class="pln"> </span><span class="lit">3.141592653589793</span><span class="pun">。</span></pre>
<p>可选项 ':' 和格式标识符可以跟着字段名。 这就允许对值进行更好的格式化。 下面的例子将 Pi 保留到小数点后三位：
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">import</span><span class="pln"> math
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'常量 PI 的值近似为 {0:.3f}。'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">math</span><span class="pun">.</span><span class="pln">pi</span><span class="pun">))</span><span class="pln">
</span><span class="pun">常量</span><span class="pln"> PI </span><span class="pun">的值近似为</span><span class="pln"> </span><span class="lit">3.142</span><span class="pun">。</span></pre>
<p>
在 ':' 后传入一个整数, 可以保证该域至少有这么多的宽度。 用于美化表格时很有用。
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> table </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="str">'Google'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Runoob'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Taobao'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span><span class="pun">}</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">for</span><span class="pln"> name</span><span class="pun">,</span><span class="pln"> number </span><span class="kwd">in</span><span class="pln"> table</span><span class="pun">.</span><span class="pln">items</span><span class="pun">():</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'{0:10} ==&gt; {1:10d}'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln"> number</span><span class="pun">))</span><span class="pln">
</span><span class="pun">...</span><span class="pln">
</span><span class="typ">Runoob</span><span class="pln">     </span><span class="pun">==&gt;</span><span class="pln">          </span><span class="lit">2</span><span class="pln">
</span><span class="typ">Taobao</span><span class="pln">     </span><span class="pun">==&gt;</span><span class="pln">          </span><span class="lit">3</span><span class="pln">
</span><span class="typ">Google</span><span class="pln">     </span><span class="pun">==&gt;</span><span class="pln">          </span><span class="lit">1</span></pre>
<p>
如果你有一个很长的格式化字符串, 而你不想将它们分开, 那么在格式化时通过变量名而非位置会是很好的事情。
</p>
 <p>最简单的就是传入一个字典, 然后使用方括号 '[]' 来访问键值 :</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> table </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="str">'Google'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Runoob'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Taobao'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span><span class="pun">}</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'Runoob: {0[Runoob]:d}; Google: {0[Google]:d}; Taobao: {0[Taobao]:d}'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(</span><span class="pln">table</span><span class="pun">))</span><span class="pln">
</span><span class="typ">Runoob</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span><span class="pln"> </span><span class="typ">Google</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln"> </span><span class="typ">Taobao</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span></pre>
<p>
也可以通过在 table 变量前使用 '**' 来实现相同的功能：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> table </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="str">'Google'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Runoob'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="str">'Taobao'</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span><span class="pun">}</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'Runoob: {Runoob:d}; Google: {Google:d}; Taobao: {Taobao:d}'</span><span class="pun">.</span><span class="pln">format</span><span class="pun">(**</span><span class="pln">table</span><span class="pun">))</span><span class="pln">
</span><span class="typ">Runoob</span><span class="pun">:</span><span class="pln"> </span><span class="lit">2</span><span class="pun">;</span><span class="pln"> </span><span class="typ">Google</span><span class="pun">:</span><span class="pln"> </span><span class="lit">1</span><span class="pun">;</span><span class="pln"> </span><span class="typ">Taobao</span><span class="pun">:</span><span class="pln"> </span><span class="lit">3</span></pre>


<hr>
<h2>旧式字符串格式化</h2>
<p>
% 操作符也可以实现字符串格式化。 它将左边的参数作为类似 sprintf() 式的格式化字符串, 而将右边的代入, 然后返回格式化后的字符串. 例如:
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">import</span><span class="pln"> math
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'常量 PI 的值近似为：%5.3f。'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> math</span><span class="pun">.</span><span class="pln">pi</span><span class="pun">)</span><span class="pln">
</span><span class="pun">常量</span><span class="pln"> PI </span><span class="pun">的值近似为：</span><span class="lit">3.142</span><span class="pun">。</span></pre>
<p>
因为 str.format() 比较新的函数， 大多数的 Python 代码仍然使用 % 操作符。但是因为这种旧式的格式化最终会从该语言中移除, 应该更多的使用 str.format().
</p>
<hr>
<h2>读取键盘输入</h2>
<p>
Python提供了 input() 内置函数从标准输入读入一行文本，默认的标准输入是键盘。</p>

<p>input 可以接收一个Python表达式作为输入，并将运算结果返回。
</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

str </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">"请输入："</span><span class="pun">);</span><span class="pln">
</span><span class="kwd">print</span><span class="pln"> </span><span class="pun">(</span><span class="str">"你输入的内容是: "</span><span class="pun">,</span><span class="pln"> str</span><span class="pun">)</span></pre>
<p>
这会产生如下的对应着输入的结果：
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">请输入：菜鸟教程</span><span class="pln">
</span><span class="pun">你输入的内容是:</span><span class="pln">  </span><span class="pun">菜鸟教程</span></pre>


<hr>
<h2>读和写文件
</h2>
<p>
open() 将会返回一个 file 对象，基本语法格式如下: 
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">open</span><span class="pun">(</span><span class="pln">filename</span><span class="pun">,</span><span class="pln"> mode</span><span class="pun">)</span></pre>
<ul> <li>filename：包含了你要访问的文件名称的字符串值。</li> 
<li>mode：决定了打开文件的模式：只读，写入，追加等。所有可取值见如下的完全列表。这个参数是非强制的，默认文件访问模式为只读(r)。</li> </ul>
<p>不同模式打开文件的完全列表：</p>
<table class="reference"> <tbody><tr><th style="width:10%">模式</th><th>描述</th></tr> <tr><td>r</td><td>以只读方式打开文件。文件的指针将会放在文件的开头。这是默认模式。</td></tr> <tr><td>rb</td><td>以二进制格式打开一个文件用于只读。文件指针将会放在文件的开头。</td></tr> <tr><td>r+</td><td>打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr> <tr><td>rb+</td><td>以二进制格式打开一个文件用于读写。文件指针将会放在文件的开头。</td></tr> <tr><td>w</td><td>打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr> <tr><td>wb</td><td>以二进制格式打开一个文件只用于写入。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr> <tr><td>w+</td><td>打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr> <tr><td>wb+</td><td>以二进制格式打开一个文件用于读写。如果该文件已存在则打开文件，并从开头开始编辑，即原有内容会被删除。如果该文件不存在，创建新文件。</td></tr> <tr><td>a</td><td>打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr> <tr><td>ab</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。也就是说，新的内容将会被写入到已有内容之后。如果该文件不存在，创建新文件进行写入。</td></tr> <tr><td>a+</td><td>打开一个文件用于读写。如果该文件已存在，文件指针将会放在文件的结尾。文件打开时会是追加模式。如果该文件不存在，创建新文件用于读写。</td></tr> <tr><td>ab+</td><td>以二进制格式打开一个文件用于追加。如果该文件已存在，文件指针将会放在文件的结尾。如果该文件不存在，创建新文件用于读写。</td></tr> </tbody></table>
<p>下图很好的总结了这几种模式：</p>
<p><img src="./Python3 输入和输出 _ 菜鸟教程_files/2112205-861c05b2bdbc9c28.png"></p>
<table class="reference">
<thead>
<tr>
<th style="text-align:center">模式</th>
<th style="text-align:center">r</th>
<th style="text-align:center">r+</th>
<th style="text-align:center">w</th>
<th style="text-align:center">w+</th>
<th style="text-align:center">a</th>
<th style="text-align:center">a+</th>
</tr>
</thead>
<tbody>
<tr>
<td style="text-align:center">读</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center"></td>
<td style="text-align:center">+</td>
<td style="text-align:center"></td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">写</td>
<td style="text-align:center"></td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">创建</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
</tr>
<tr>
<td style="text-align:center">覆盖</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">指针在开始</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
</tr>
<tr>
<td style="text-align:center">指针在结尾</td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center"></td>
<td style="text-align:center">+</td>
<td style="text-align:center">+</td>
</tr>
</tbody>
</table>
<p>以下实例将字符串写入到文件 foo.txt 中：</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

</span><span class="com"># 打开一个文件</span><span class="pln">
f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"/tmp/foo.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"w"</span><span class="pun">)</span><span class="pln">

f</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Python 是一个非常好的语言。\n是的，的确非常好!!\n"</span><span class="pln"> </span><span class="pun">)</span><span class="pln">

</span><span class="com"># 关闭打开的文件</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>

<ul>
<li>
第一个参数为要打开的文件名。 
</li>
<li>第二个参数描述文件如何使用的字符。 mode 可以是 'r' 如果文件只读, 'w' 只用于写 (如果存在同名文件则将被删除), 和 'a' 用于追加文件内容; 所写的任何数据都会被自动增加到末尾. 'r+' 同时用于读写。 mode 参数是可选的; 'r' 将是默认值。
</li>
</ul><p>
此时打开文件 foo.txt,显示如下：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">$ cat </span><span class="pun">/</span><span class="pln">tmp</span><span class="pun">/</span><span class="pln">foo</span><span class="pun">.</span><span class="pln">txt 
</span><span class="typ">Python</span><span class="pln"> </span><span class="pun">是一个非常好的语言。</span><span class="pln">
</span><span class="pun">是的，的确非常好!!</span></pre>
<hr>
<h2>文件对象的方法</h2>
<p>
本节中剩下的例子假设已经创建了一个称为 f 的文件对象。
</p>
<h3>f.read()</h3>
<p>
为了读取一个文件的内容，调用 f.read(size), 这将读取一定数目的数据, 然后作为字符串或字节对象返回。</p>
<p>size 是一个可选的数字类型的参数。 当 size 被忽略了或者为负, 那么该文件的所有内容都将被读取并且返回。</p>
<p>以下实例假定文件 foo.txt 已存在（上面实例中已创建）：</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

</span><span class="com"># 打开一个文件</span><span class="pln">
f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"/tmp/foo.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"r"</span><span class="pun">)</span><span class="pln">

str </span><span class="pun">=</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">read</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">str</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 关闭打开的文件</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>
<p>执行以上程序，输出结果为：</p>
<pre class="prettyprint prettyprinted" style=""><span class="typ">Python</span><span class="pln"> </span><span class="pun">是一个非常好的语言。</span><span class="pln">
</span><span class="pun">是的，的确非常好!!</span></pre>
<h3>f.readline()</h3>
<p>
f.readline() 会从文件中读取单独的一行。换行符为 '\n'。f.readline() 如果返回一个空字符串, 说明已经已经读取到最后一行。</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

</span><span class="com"># 打开一个文件</span><span class="pln">
f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"/tmp/foo.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"r"</span><span class="pun">)</span><span class="pln">

str </span><span class="pun">=</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">readline</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">str</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 关闭打开的文件</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>
<p>执行以上程序，输出结果为：</p>
<pre class="prettyprint prettyprinted" style=""><span class="typ">Python</span><span class="pln"> </span><span class="pun">是一个非常好的语言。</span></pre>
<h3>f.readlines()</h3>
<p>
f.readlines() 将返回该文件中包含的所有行。
</p>
<p> 如果设置可选参数 sizehint, 则读取指定长度的字节, 并且将这些字节按行分割。
</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

</span><span class="com"># 打开一个文件</span><span class="pln">
f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"/tmp/foo.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"r"</span><span class="pun">)</span><span class="pln">

str </span><span class="pun">=</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">readlines</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">str</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 关闭打开的文件</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>
<p>执行以上程序，输出结果为：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">[</span><span class="str">'Python 是一个非常好的语言。\n'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'是的，的确非常好!!\n'</span><span class="pun">]</span></pre>
<p>
另一种方式是迭代一个文件对象然后读取每行:
</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

</span><span class="com"># 打开一个文件</span><span class="pln">
f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"/tmp/foo.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"r"</span><span class="pun">)</span><span class="pln">

</span><span class="kwd">for</span><span class="pln"> line </span><span class="kwd">in</span><span class="pln"> f</span><span class="pun">:</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">line</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">end</span><span class="pun">=</span><span class="str">''</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 关闭打开的文件</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>
<p>执行以上程序，输出结果为：</p>
<pre class="prettyprint prettyprinted" style=""><span class="typ">Python</span><span class="pln"> </span><span class="pun">是一个非常好的语言。</span><span class="pln">
</span><span class="pun">是的，的确非常好!!</span></pre>
<p>
这个方法很简单, 但是并没有提供一个很好的控制。 因为两者的处理机制不同, 最好不要混用。
</p>
<h3>f.write()</h3>
<p>
f.write(string) 将 string 写入到文件中, 然后返回写入的字符数。
</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

</span><span class="com"># 打开一个文件</span><span class="pln">
f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"/tmp/foo.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"w"</span><span class="pun">)</span><span class="pln">

num </span><span class="pun">=</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln"> </span><span class="str">"Python 是一个非常好的语言。\n是的，的确非常好!!\n"</span><span class="pln"> </span><span class="pun">)</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">num</span><span class="pun">)</span><span class="pln">
</span><span class="com"># 关闭打开的文件</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>
<p>执行以上程序，输出结果为：</p>
<pre class="prettyprint prettyprinted" style=""><span class="lit">29</span></pre>
<p>
如果要写入一些不是字符串的东西, 那么将需要先进行转换:
</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">

</span><span class="com"># 打开一个文件</span><span class="pln">
f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"/tmp/foo1.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"w"</span><span class="pun">)</span><span class="pln">

value </span><span class="pun">=</span><span class="pln"> </span><span class="pun">(</span><span class="str">'www.runoob.com'</span><span class="pun">,</span><span class="pln"> </span><span class="lit">14</span><span class="pun">)</span><span class="pln">
s </span><span class="pun">=</span><span class="pln"> str</span><span class="pun">(</span><span class="pln">value</span><span class="pun">)</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">s</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 关闭打开的文件</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>
<p>执行以上程序，打开 foo1.txt 文件：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">$ cat </span><span class="pun">/</span><span class="pln">tmp</span><span class="pun">/</span><span class="pln">foo1</span><span class="pun">.</span><span class="pln">txt 
</span><span class="pun">(</span><span class="str">'www.runoob.com'</span><span class="pun">,</span><span class="pln"> </span><span class="lit">14</span><span class="pun">)</span></pre>
<h3>f.tell()</h3>
<p>
f.tell() 返回文件对象当前所处的位置, 它是从文件开头开始算起的字节数。
</p>
<h3>f.seek()</h3>
<p>如果要改变文件当前的位置, 可以使用 f.seek(offset, from_what) 函数。</p>
<p>
from_what 的值, 如果是 0 表示开头, 如果是 1 表示当前位置, 2 表示文件的结尾，例如：</p>
<p></p>
<ul>
<li>
seek(x,0) ： 从起始位置即文件首行首字符开始移动 x 个字符</li><li>
seek(x,1) ： 表示从当前位置往后移动x个字符</li><li>
seek(-x,2)：表示从文件的结尾往前移动x个字符
</li></ul>
<p>
from_what 值为默认为0，即文件开头。下面给出一个完整的例子：</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">'/tmp/foo.txt'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'rb+'</span><span class="pun">)</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">b</span><span class="str">'0123456789abcdef'</span><span class="pun">)</span><span class="pln">
</span><span class="lit">16</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">seek</span><span class="pun">(</span><span class="lit">5</span><span class="pun">)</span><span class="pln">     </span><span class="com"># 移动到文件的第六个字节</span><span class="pln">
</span><span class="lit">5</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">read</span><span class="pun">(</span><span class="lit">1</span><span class="pun">)</span><span class="pln">
b</span><span class="str">'5'</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">seek</span><span class="pun">(-</span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">)</span><span class="pln"> </span><span class="com"># 移动到文件的倒数第三字节</span><span class="pln">
</span><span class="lit">13</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">read</span><span class="pun">(</span><span class="lit">1</span><span class="pun">)</span><span class="pln">
b</span><span class="str">'d'</span></pre>
<p>
</p><h3>f.close()</h3><p>
在文本文件中 (那些打开文件的模式下没有 b 的), 只会相对于文件起始位置进行定位。</p>
<p>
当你处理完一个文件后, 调用 f.close() 来关闭文件并释放系统的资源，如果尝试再调用该文件，则会抛出异常。</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">read</span><span class="pun">()</span><span class="pln">
</span><span class="typ">Traceback</span><span class="pln"> </span><span class="pun">(</span><span class="pln">most recent call </span><span class="kwd">last</span><span class="pun">):</span><span class="pln">
  </span><span class="typ">File</span><span class="pln"> </span><span class="str">"&lt;stdin&gt;"</span><span class="pun">,</span><span class="pln"> line </span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="kwd">in</span><span class="pln"> </span><span class="pun">?</span><span class="pln">
</span><span class="typ">ValueError</span><span class="pun">:</span><span class="pln"> I</span><span class="pun">/</span><span class="pln">O operation on closed file</span></pre>
<p>
当处理一个文件对象时, 使用 with 关键字是非常好的方式。在结束后, 它会帮你正确的关闭文件。 而且写起来也比 try - finally 语句块要简短:</p>
<pre class="prettyprint prettyprinted" style=""><span class="pun">&gt;&gt;&gt;</span><span class="pln"> </span><span class="kwd">with</span><span class="pln"> open</span><span class="pun">(</span><span class="str">'/tmp/foo.txt'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'r'</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">as</span><span class="pln"> f</span><span class="pun">:</span><span class="pln">
</span><span class="pun">...</span><span class="pln">     read_data </span><span class="pun">=</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">read</span><span class="pun">()</span><span class="pln">
</span><span class="pun">&gt;&gt;&gt;</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">closed
</span><span class="kwd">True</span></pre><p>
文件对象还有其他方法, 如 isatty() 和 trucate(), 但这些通常比较少用。</p>

<hr><h2>pickle 模块
</h2>
<p>
python的pickle模块实现了基本的数据序列和反序列化。</p>
<p>通过pickle模块的序列化操作我们能够将程序中运行的对象信息保存到文件中去，永久存储。</p>
<p>通过pickle模块的反序列化操作，我们能够从文件中创建上一次程序保存的对象。
</p>
<p>基本接口：
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">pickle</span><span class="pun">.</span><span class="kwd">dump</span><span class="pun">(</span><span class="pln">obj</span><span class="pun">,</span><span class="pln"> file</span><span class="pun">,</span><span class="pln"> </span><span class="pun">[,</span><span class="pln">protocol</span><span class="pun">])</span></pre>
<p>
有了 pickle 这个对象, 就能对 file 以读取的形式打开:
</p>
<pre class="prettyprint prettyprinted" style=""><span class="pln">x </span><span class="pun">=</span><span class="pln"> pickle</span><span class="pun">.</span><span class="pln">load</span><span class="pun">(</span><span class="pln">file</span><span class="pun">)</span></pre>
<p><b>注解：</b>从 file 中读取一个字符串，并将它重构为原来的python对象。</p>
<p><b>file:</b> 类文件对象，有read()和readline()接口。</p>
<p>实例1：</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> pickle

</span><span class="com"># 使用pickle模块将数据对象保存到文件</span><span class="pln">
data1 </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{</span><span class="str">'a'</span><span class="pun">:</span><span class="pln"> </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2.0</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">,</span><span class="pln"> </span><span class="lit">4</span><span class="pun">+</span><span class="lit">6j</span><span class="pun">],</span><span class="pln">
         </span><span class="str">'b'</span><span class="pun">:</span><span class="pln"> </span><span class="pun">(</span><span class="str">'string'</span><span class="pun">,</span><span class="pln"> u</span><span class="str">'Unicode string'</span><span class="pun">),</span><span class="pln">
         </span><span class="str">'c'</span><span class="pun">:</span><span class="pln"> </span><span class="kwd">None</span><span class="pun">}</span><span class="pln">

selfref_list </span><span class="pun">=</span><span class="pln"> </span><span class="pun">[</span><span class="lit">1</span><span class="pun">,</span><span class="pln"> </span><span class="lit">2</span><span class="pun">,</span><span class="pln"> </span><span class="lit">3</span><span class="pun">]</span><span class="pln">
selfref_list</span><span class="pun">.</span><span class="pln">append</span><span class="pun">(</span><span class="pln">selfref_list</span><span class="pun">)</span><span class="pln">

output </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">'data.pkl'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'wb'</span><span class="pun">)</span><span class="pln">

</span><span class="com"># Pickle dictionary using protocol 0.</span><span class="pln">
pickle</span><span class="pun">.</span><span class="kwd">dump</span><span class="pun">(</span><span class="pln">data1</span><span class="pun">,</span><span class="pln"> output</span><span class="pun">)</span><span class="pln">

</span><span class="com"># Pickle the list using the highest protocol available.</span><span class="pln">
pickle</span><span class="pun">.</span><span class="kwd">dump</span><span class="pun">(</span><span class="pln">selfref_list</span><span class="pun">,</span><span class="pln"> output</span><span class="pun">,</span><span class="pln"> </span><span class="pun">-</span><span class="lit">1</span><span class="pun">)</span><span class="pln">

output</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>
<p>实例2：</p>
<pre class="prettyprint prettyprinted" style=""><span class="com">#!/usr/bin/python3</span><span class="pln">
</span><span class="kwd">import</span><span class="pln"> pprint</span><span class="pun">,</span><span class="pln"> pickle

</span><span class="com">#使用pickle模块从文件中重构python对象</span><span class="pln">
pkl_file </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">'data.pkl'</span><span class="pun">,</span><span class="pln"> </span><span class="str">'rb'</span><span class="pun">)</span><span class="pln">

data1 </span><span class="pun">=</span><span class="pln"> pickle</span><span class="pun">.</span><span class="pln">load</span><span class="pun">(</span><span class="pln">pkl_file</span><span class="pun">)</span><span class="pln">
pprint</span><span class="pun">.</span><span class="pln">pprint</span><span class="pun">(</span><span class="pln">data1</span><span class="pun">)</span><span class="pln">

data2 </span><span class="pun">=</span><span class="pln"> pickle</span><span class="pun">.</span><span class="pln">load</span><span class="pun">(</span><span class="pln">pkl_file</span><span class="pun">)</span><span class="pln">
pprint</span><span class="pun">.</span><span class="pln">pprint</span><span class="pun">(</span><span class="pln">data2</span><span class="pun">)</span><span class="pln">

pkl_file</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span></pre>			<!-- 其他扩展 -->
						
			</div>
			
		</div>
		
		<div class="previous-next-links">
			<div class="previous-design-link"><a href="http://www.runoob.com/python3/python3-module.html"><i style="font-size:16px;" class="fa fa-arrow-left" aria-hidden="true"></i></a> <a href="http://www.runoob.com/python3/python3-module.html" rel="prev" title="Python3 模块">Python3 模块</a> </div>
			<div class="next-design-link"><a href="http://www.runoob.com/python3/python3-file-methods.html" rel="next" title="Python3 File">Python3 File</a> <a href="http://www.runoob.com/python3/python3-file-methods.html"><i style="font-size:16px;" class="fa fa-arrow-right" aria-hidden="true"></i></a></div>
		</div>
		<!-- 笔记列表 -->
		<style>
.wrapper {
  /*text-transform: uppercase; */
  background: #ececec;
  color: #555;
  cursor: help;
  font-family: "Gill Sans", Impact, sans-serif;
  font-size: 20px;
  position: relative;
  text-align: center;
  width: 200px;
  -webkit-transform: translateZ(0); /* webkit flicker fix */
  -webkit-font-smoothing: antialiased; /* webkit text rendering fix */
}

.wrapper .tooltip {
  white-space: nowrap;
  font-size: 14px;
  text-align: left;
  background: #96b97d;
  bottom: 100%;
  color: #fff;
  display: block;
  left: -25px;
  margin-bottom: 15px;
  opacity: 0;
  padding: 14px;
  pointer-events: none;
  position: absolute;
  
  -webkit-transform: translateY(10px);
     -moz-transform: translateY(10px);
      -ms-transform: translateY(10px);
       -o-transform: translateY(10px);
          transform: translateY(10px);
  -webkit-transition: all .25s ease-out;
     -moz-transition: all .25s ease-out;
      -ms-transition: all .25s ease-out;
       -o-transition: all .25s ease-out;
          transition: all .25s ease-out;
  -webkit-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
     -moz-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
      -ms-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
       -o-box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
          box-shadow: 2px 2px 6px rgba(0, 0, 0, 0.28);
}
.tooltip a {
	color:#fff;
}
/* This bridges the gap so you can mouse into the tooltip without it disappearing */
.wrapper .tooltip:before {
  bottom: -20px;
  content: " ";
  display: block;
  height: 20px;
  left: 0;
  position: absolute;
  width: 100%;
}  

/* CSS Triangles - see Trevor's post */
.wrapper .tooltip:after {
  border-left: solid transparent 10px;
  border-right: solid transparent 10px;
  border-top: solid #96b97d 10px;
  bottom: -10px;
  content: " ";
  height: 0;
  left: 20%;
  margin-left: -13px;
  position: absolute;
  width: 0;
}
.wrapper .tooltip1 {
	margin-left: 50px;
	padding-top: 0px;
}
.wrapper:hover .tooltip {
  opacity: 1;
  pointer-events: auto;
  -webkit-transform: translateY(0px);
     -moz-transform: translateY(0px);
      -ms-transform: translateY(0px);
       -o-transform: translateY(0px);
          transform: translateY(0px);
}

/* IE can just show/hide with no transition */
.lte8 .wrapper .tooltip {
  display: none;
}

.lte8 .wrapper:hover .tooltip {
  display: block;
}

</style>

<div class="title" id="comments">
	<h2 class="">
    <div class="altblock">
				<i style="font-size:28px;margin-top: 8px;" class="fa fa-plus-square" aria-hidden="true"></i>
		    </div>
    <span class="mw-headline" id="qa_headline">5  篇笔记</span>
	<span class="mw-headline" id="user_add_note" style="float:right;line-height: 62px;padding-right: 14px;"><i class="fa fa-pencil-square-o" aria-hidden="true"></i>  写笔记</span>
    </h2>
</div>
<div id="postcomments" style="display:none;">
	<ol class="commentlist">
		<li class="comment even thread-even depth-1" id="comment-12969"><span class="comt-f">#5</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;夏木研</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;104***4137@qq.com</p></div></div><div class="comt-main" id="div-comment-12969"><p>python文件写入也可以进行网站爬虫,我的python版本是3.6，以下代码是打开project.txt文件，并向里面写入http://www.baidu.com网站代码。
</p><pre class="prettyprint prettyprinted" style=""><span class="kwd">from</span><span class="pln"> urllib </span><span class="kwd">import</span><span class="pln"> request

response </span><span class="pun">=</span><span class="pln"> request</span><span class="pun">.</span><span class="pln">urlopen</span><span class="pun">(</span><span class="str">"http://www.baidu.com/"</span><span class="pun">)</span><span class="pln">  </span><span class="com"># 打开网站</span><span class="pln">
</span><span class="kwd">fi</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"project.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">'w'</span><span class="pun">)</span><span class="pln">                        </span><span class="com"># open一个txt文件</span><span class="pln">
page </span><span class="pun">=</span><span class="pln"> </span><span class="kwd">fi</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="pln">str</span><span class="pun">(</span><span class="pln">response</span><span class="pun">.</span><span class="pln">read</span><span class="pun">()))</span><span class="pln">                </span><span class="com"># 网站代码写入</span><span class="pln">
</span><span class="kwd">fi</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span><span class="pln">                                           </span><span class="com"># 关闭txt文件</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">夏木研</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;夏木研</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;104***4137@qq.com</p></div></span>2年前 (2017-06-14)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-16103"><span class="comt-f">#4</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;伦仔</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;all***yl@126.com</p></div></div><div class="comt-main" id="div-comment-16103"><p>input() 默认输入的为 str 格式，若用数学计算，则需要转换格式，例：</p>



<pre class="prettyprint prettyprinted" style=""><span class="pln">a</span><span class="pun">=</span><span class="pln">input</span><span class="pun">(</span><span class="str">'请输入数字:'</span><span class="pun">)</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">a</span><span class="pun">*</span><span class="lit">2</span><span class="pun">)</span></pre>
<p>假设输入数值为3，则上例中得出结果为：</p>

<pre class="prettyprint prettyprinted" style=""><span class="lit">33</span></pre>
<p>若将代码修改为：</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">a</span><span class="pun">=</span><span class="kwd">int</span><span class="pun">(</span><span class="pln">input</span><span class="pun">(</span><span class="str">'请输入数字:'</span><span class="pun">))</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">a</span><span class="pun">*</span><span class="lit">2</span><span class="pun">)</span></pre>
<p>则结果为：</p>

<pre class="prettyprint prettyprinted" style=""><span class="lit">6</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">伦仔</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;伦仔</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;all***yl@126.com</p></div></span>2年前 (2017-08-10)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-24838"><span class="comt-f">#3</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;tonysoul</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;ton***ul@foxmail.com</p></div></div><div class="comt-main" id="div-comment-24838"><p>通过 pickle 序列化实现一个简单联系人信息管理：</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">import</span><span class="pln"> pickle
</span><span class="kwd">import</span><span class="pln"> os

datafile </span><span class="pun">=</span><span class="pln"> </span><span class="str">'person.data'</span><span class="pln">
line </span><span class="pun">=</span><span class="pln"> </span><span class="str">'======================================='</span><span class="pln">
message </span><span class="pun">=</span><span class="pln"> </span><span class="str">'''
=======================================
Welcome bookmark:
    press 1 to show list
    press 2 to add pepole
    press 3 to edit pepole
    press 4 to delete pepole
    press 5 to search pepole
    press 6 to show menu
    press 0 to quit
=======================================
'''</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">message</span><span class="pun">)</span><span class="pln">

</span><span class="kwd">class</span><span class="pln"> </span><span class="typ">Person</span><span class="pun">(</span><span class="kwd">object</span><span class="pun">):</span><span class="pln">
    </span><span class="str">"""通讯录联系人"""</span><span class="pln">
    </span><span class="kwd">def</span><span class="pln"> __init__</span><span class="pun">(</span><span class="kwd">self</span><span class="pun">,</span><span class="pln"> name</span><span class="pun">,</span><span class="pln"> number</span><span class="pun">):</span><span class="pln">
        </span><span class="kwd">self</span><span class="pun">.</span><span class="pln">name </span><span class="pun">=</span><span class="pln"> name
        </span><span class="kwd">self</span><span class="pun">.</span><span class="pln">number </span><span class="pun">=</span><span class="pln"> number

</span><span class="com"># 获取数据</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> get_data</span><span class="pun">(</span><span class="pln">filename</span><span class="pun">=</span><span class="pln">datafile</span><span class="pun">):</span><span class="pln">
    </span><span class="com"># 文件存在且不为空</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> os</span><span class="pun">.</span><span class="pln">path</span><span class="pun">.</span><span class="pln">exists</span><span class="pun">(</span><span class="pln">filename</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">and</span><span class="pln"> os</span><span class="pun">.</span><span class="pln">path</span><span class="pun">.</span><span class="pln">getsize</span><span class="pun">(</span><span class="pln">filename</span><span class="pun">):</span><span class="pln">
        </span><span class="kwd">with</span><span class="pln"> open</span><span class="pun">(</span><span class="pln">filename</span><span class="pun">,</span><span class="str">'rb'</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">as</span><span class="pln"> f</span><span class="pun">:</span><span class="pln">
            </span><span class="kwd">return</span><span class="pln"> pickle</span><span class="pun">.</span><span class="pln">load</span><span class="pun">(</span><span class="pln">f</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">return</span><span class="pln"> </span><span class="kwd">None</span><span class="pln">
        
</span><span class="com"># 写入数据</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> set_data</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln"> number</span><span class="pun">,</span><span class="pln"> filename</span><span class="pun">=</span><span class="pln">datafile</span><span class="pun">):</span><span class="pln">

    personList </span><span class="pun">=</span><span class="pln"> </span><span class="pun">{}</span><span class="pln"> </span><span class="kwd">if</span><span class="pln"> get_data</span><span class="pun">()</span><span class="pln"> </span><span class="pun">==</span><span class="pln"> </span><span class="kwd">None</span><span class="pln"> </span><span class="kwd">else</span><span class="pln"> get_data</span><span class="pun">()</span><span class="pln">

    </span><span class="kwd">with</span><span class="pln"> open</span><span class="pun">(</span><span class="pln">filename</span><span class="pun">,</span><span class="str">'wb'</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">as</span><span class="pln"> f</span><span class="pun">:</span><span class="pln">
        personList</span><span class="pun">[</span><span class="pln">name</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln">number</span><span class="pun">)</span><span class="pln">
        pickle</span><span class="pun">.</span><span class="kwd">dump</span><span class="pun">(</span><span class="pln">personList</span><span class="pun">,</span><span class="pln">f</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 保存字典格式的数据到文件</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> save_data</span><span class="pun">(</span><span class="pln">dictPerson</span><span class="pun">,</span><span class="pln"> filename</span><span class="pun">=</span><span class="pln">datafile</span><span class="pun">):</span><span class="pln">
    </span><span class="kwd">with</span><span class="pln"> open</span><span class="pun">(</span><span class="pln">filename</span><span class="pun">,</span><span class="str">'wb'</span><span class="pun">)</span><span class="pln"> </span><span class="kwd">as</span><span class="pln"> f</span><span class="pun">:</span><span class="pln">
        pickle</span><span class="pun">.</span><span class="kwd">dump</span><span class="pun">(</span><span class="pln">dictPerson</span><span class="pun">,</span><span class="pln">f</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 显示所有联系人</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> show_all</span><span class="pun">():</span><span class="pln">
    personList </span><span class="pun">=</span><span class="pln"> get_data</span><span class="pun">()</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> personList</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">for</span><span class="pln"> v </span><span class="kwd">in</span><span class="pln"> personList</span><span class="pun">.</span><span class="pln">values</span><span class="pun">():</span><span class="pln">
            </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">v</span><span class="pun">.</span><span class="pln">name</span><span class="pun">,</span><span class="pln">v</span><span class="pun">.</span><span class="pln">number</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">line</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">else</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'not yet person,please add person'</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">line</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 添加联系人</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> add_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln">number</span><span class="pun">):</span><span class="pln">
    set_data</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln">number</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'success add person'</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">line</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 编辑联系人</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> edit_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln">number</span><span class="pun">):</span><span class="pln">
    personList </span><span class="pun">=</span><span class="pln"> get_data</span><span class="pun">()</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> personList</span><span class="pun">:</span><span class="pln">
        personList</span><span class="pun">[</span><span class="pln">name</span><span class="pun">]</span><span class="pln"> </span><span class="pun">=</span><span class="pln"> </span><span class="typ">Person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln">number</span><span class="pun">)</span><span class="pln">
        save_data</span><span class="pun">(</span><span class="pln">personList</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'success edit person'</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">line</span><span class="pun">)</span><span class="pln">

</span><span class="com"># 删除联系人</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> delete_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">):</span><span class="pln">
    personList </span><span class="pun">=</span><span class="pln"> get_data</span><span class="pun">()</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> personList</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> name </span><span class="kwd">in</span><span class="pln"> personList</span><span class="pun">:</span><span class="pln">
            </span><span class="kwd">del</span><span class="pln"> personList</span><span class="pun">[</span><span class="pln">name</span><span class="pun">]</span><span class="pln">
            save_data</span><span class="pun">(</span><span class="pln">personList</span><span class="pun">)</span><span class="pln">
            </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'success delete person'</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">else</span><span class="pun">:</span><span class="pln">
            </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="str">' is not exists in dict'</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">line</span><span class="pun">)</span><span class="pln">


</span><span class="com"># 搜索联系人</span><span class="pln">
</span><span class="kwd">def</span><span class="pln"> search_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">):</span><span class="pln">
    personList </span><span class="pun">=</span><span class="pln"> get_data</span><span class="pun">()</span><span class="pln">
    </span><span class="kwd">if</span><span class="pln"> personList</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">if</span><span class="pln"> name </span><span class="kwd">in</span><span class="pln"> personList</span><span class="pun">.</span><span class="pln">keys</span><span class="pun">():</span><span class="pln">
            </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">personList</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln">name</span><span class="pun">).</span><span class="pln">name</span><span class="pun">,</span><span class="pln"> personList</span><span class="pun">.</span><span class="kwd">get</span><span class="pun">(</span><span class="pln">name</span><span class="pun">).</span><span class="pln">number</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">else</span><span class="pun">:</span><span class="pln">
            </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'No this person of '</span><span class="pun">,</span><span class="pln">name</span><span class="pun">)</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">line</span><span class="pun">)</span><span class="pln">
        

</span><span class="kwd">while</span><span class="pln"> </span><span class="kwd">True</span><span class="pun">:</span><span class="pln">
    num </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">'&gt;&gt;'</span><span class="pun">)</span><span class="pln">

    </span><span class="kwd">if</span><span class="pln"> num </span><span class="pun">==</span><span class="pln"> </span><span class="str">'1'</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'show all personList:'</span><span class="pun">)</span><span class="pln">
        show_all</span><span class="pun">()</span><span class="pln">
    </span><span class="kwd">elif</span><span class="pln"> num </span><span class="pun">==</span><span class="pln"> </span><span class="str">'2'</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'add person:'</span><span class="pun">)</span><span class="pln">    
        name </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">'input name&gt;&gt;'</span><span class="pun">)</span><span class="pln">
        number </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">'input number&gt;&gt;'</span><span class="pun">)</span><span class="pln">
        add_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln">number</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">elif</span><span class="pln"> num </span><span class="pun">==</span><span class="pln"> </span><span class="str">'3'</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'edit person:'</span><span class="pun">)</span><span class="pln">
        name </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">'input name&gt;&gt;'</span><span class="pun">)</span><span class="pln">
        number </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">'input number&gt;&gt;'</span><span class="pun">)</span><span class="pln">
        edit_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">,</span><span class="pln">number</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">elif</span><span class="pln"> num </span><span class="pun">==</span><span class="pln"> </span><span class="str">'4'</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'delete person:'</span><span class="pun">)</span><span class="pln">
        name </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">'input name&gt;&gt;'</span><span class="pun">)</span><span class="pln">
        delete_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">elif</span><span class="pln"> num </span><span class="pun">==</span><span class="pln"> </span><span class="str">'5'</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'search :'</span><span class="pun">)</span><span class="pln">
        name </span><span class="pun">=</span><span class="pln"> input</span><span class="pun">(</span><span class="str">'input name&gt;&gt;'</span><span class="pun">)</span><span class="pln">
        search_person</span><span class="pun">(</span><span class="pln">name</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">elif</span><span class="pln"> num </span><span class="pun">==</span><span class="pln"> </span><span class="str">'6'</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="pln">message</span><span class="pun">)</span><span class="pln">
    </span><span class="kwd">elif</span><span class="pln"> num </span><span class="pun">==</span><span class="pln"> </span><span class="str">'0'</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">break</span><span class="pln">
    </span><span class="kwd">else</span><span class="pun">:</span><span class="pln">
        </span><span class="kwd">print</span><span class="pun">(</span><span class="str">'input error, please retry'</span><span class="pun">)</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">tonysoul</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;tonysoul</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;ton***ul@foxmail.com</p></div></span>12个月前 (03-10)</div></div></li><!-- #comment-## -->
<li class="comment odd alt thread-odd thread-alt depth-1" id="comment-25269"><span class="comt-f">#2</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;灵魂程序员</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;102***2902@qq.com</p></div></div><div class="comt-main" id="div-comment-25269"><h2>格式化输出</h2>
<p><strong>1、整数的输出</strong></p>

<p>语法说明</p>

<p>格式化符号格式说明备注 %o 八进制 oct%d 十进制 dec%x 十六进制 hex。</p>

<p>举个栗子</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">print</span><span class="pun">(</span><span class="str">'%o'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">20</span><span class="pun">)</span><span class="pln"> </span><span class="com"># 八进制24</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%d'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">20</span><span class="pun">)</span><span class="pln"> </span><span class="com"># 十进制20</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%x'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">24</span><span class="pun">)</span><span class="pln"> </span><span class="com"># 十六进制18</span></pre>
<p><strong>2、浮点数输出</strong></p>

<p>语法说明</p>

<p>格式化符号说明备注 %f 保留小数点后面六位有效数字 float%e 保留小数点后面六位有效数字 %g 在保证六位有效数字的前提下，使用小数方式，否则使用科学计数法。</p>

<p>举个栗子：</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">print</span><span class="pun">(</span><span class="str">'%f'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">1.11</span><span class="pun">)</span><span class="pln">         </span><span class="com"># 默认保留6位小数1.110000</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%.1f'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">1.11</span><span class="pun">)</span><span class="pln">       </span><span class="com"># 取1位小数1.1</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%e'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">1.11</span><span class="pun">)</span><span class="pln">         </span><span class="com"># 默认6位小数，用科学计数法1.110000e+00</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%.3e'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">1.11</span><span class="pun">)</span><span class="pln">       </span><span class="com"># 取3位小数，用科学计数法1.110e+00</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%g'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">1111.1111</span><span class="pun">)</span><span class="pln">    </span><span class="com"># 默认6位有效数字1111.11</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%.7g'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">1111.1111</span><span class="pun">)</span><span class="pln">  </span><span class="com"># 取7位有效数字1111.111</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%.2g'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="lit">1111.1111</span><span class="pun">)</span><span class="pln">  </span><span class="com"># 取2位有效数字，自动转换为科学计数法1.1e+03</span></pre>
<p><strong>3、字符串输出</strong></p>

<p>语法说明</p>

<p>格式化符号说明备注 %s 字符串输出 string%10s 右对齐，占位符 10位%-10s 左对齐，占位符 10 位 %.2s 截取 2 位字符串 %10.2s10 位占位符，截取两位字符串。</p>

<p>举个栗子：</p>

<pre class="prettyprint prettyprinted" style=""><span class="kwd">print</span><span class="pun">(</span><span class="str">'%s'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="str">'hello world'</span><span class="pun">)</span><span class="pln">       </span><span class="com"># 字符串输出hello world</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%20s'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="str">'hello world'</span><span class="pun">)</span><span class="pln">     </span><span class="com"># 右对齐，取20位，不够则补位         hello world</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%-20s'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="str">'hello world'</span><span class="pun">)</span><span class="pln">    </span><span class="com"># 左对齐，取20位，不够则补位hello world         </span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%.2s'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="str">'hello world'</span><span class="pun">)</span><span class="pln">     </span><span class="com"># 取2位he</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%10.2s'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="str">'hello world'</span><span class="pun">)</span><span class="pln">   </span><span class="com"># 右对齐，取2位        he</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="str">'%-10.2s'</span><span class="pln"> </span><span class="pun">%</span><span class="pln"> </span><span class="str">'hello world'</span><span class="pun">)</span><span class="pln">  </span><span class="com"># 左对齐，取2位he</span></pre>
<div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">灵魂程序员</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;灵魂程序员</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;102***2902@qq.com</p></div></span>12个月前 (03-20)</div></div></li><!-- #comment-## -->
<li class="comment even thread-even depth-1" id="comment-33762"><span class="comt-f">#1</span><div class="comt-avatar wrapper"><i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i><div class="tooltip"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;ZX_茜</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;360***297@qq.com</p></div></div><div class="comt-main" id="div-comment-33762"><p>将 mode 设置为 w+ 或 a+ 时，发现直接进行读操作，得到的内容都是空，但原因不太相同：</p>

<p>如果 mode 设置为 w+，即使没有执行 write 操作，也会将文件内容清空，因此这个时候直接进行读草稿，读到的是空内容。</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"E:\\administrator\\Desktop\\test.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"w+"</span><span class="pun">)</span></pre>
<p>如果 mode 设置为 a+，文件指针位置默认在最后面，因为读内容时，是按照指针的位置往后读，所以如果指针位置在最后，那读出来的是空，在读之前，一定要注意确认好指针位置是对的。</p>

<pre class="prettyprint prettyprinted" style=""><span class="pln">f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"E:\\administrator\\Desktop\\test.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"a+"</span><span class="pun">)</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">write</span><span class="pun">(</span><span class="str">"append content"</span><span class="pun">)</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">f</span><span class="pun">.</span><span class="pln">tell</span><span class="pun">())</span><span class="pln">  </span><span class="com">#此时指针在文件字符末尾处</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">seek</span><span class="pun">(</span><span class="lit">0</span><span class="pun">)</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">f</span><span class="pun">.</span><span class="pln">tell</span><span class="pun">())</span><span class="pln">  </span><span class="com"># 指针回到0的位置</span><span class="pln">
str </span><span class="pun">=</span><span class="pln"> f</span><span class="pun">.</span><span class="pln">read</span><span class="pun">()</span><span class="pln">
</span><span class="kwd">print</span><span class="pun">(</span><span class="pln">str</span><span class="pun">)</span><span class="pln">
f</span><span class="pun">.</span><span class="pln">close</span><span class="pun">()</span><span class="pln">f </span><span class="pun">=</span><span class="pln"> open</span><span class="pun">(</span><span class="str">"E:\\administrator\\Desktop\\test.txt"</span><span class="pun">,</span><span class="pln"> </span><span class="str">"w+"</span><span class="pun">)</span></pre><div class="comt-meta wrapper"><span class="comt-author"><a target="_blank" href="javascript:;">ZX_茜</a><div class="tooltip tooltip1"><p><i class="fa fa-user" aria-hidden="true"></i>&nbsp;&nbsp;&nbsp;ZX_茜</p><p><i class="fa fa-envelope" aria-hidden="true"></i>&nbsp;&nbsp;360***297@qq.com</p></div></span>7个月前 (08-08)</div></div></li><!-- #comment-## -->
	</ol>
	<div class="pagenav">
			</div>
</div>

<div id="respond" class="no_webshot"> 
		<div class="comment-signarea" style="display:none; padding: 20px 20px;"> 
	<h3 class="text-muted" id="share_code" style="color: #799961;"><i class="fa fa-pencil-square-o" aria-hidden="true"></i> 点我分享笔记</h3>
	<!--
	<p style="font-size:14px;">笔记需要是本篇文章的内容扩展！</p><br>
	<p style="font-size:12px;"><a href="//www.runoob.com/tougao" target="_blank">文章投稿，可点击这里</a></p>
	<p style="font-size:14px;"><a href="/w3cnote/runoob-user-test-intro.html#invite" target="_blank">注册邀请码获取方式</a></p>
		<h3 class="text-muted"><i class="fa fa-info-circle" aria-hidden="true"></i> 分享笔记前必须<a href="javascript:;" class="runoob-pop">登录</a>！</h3>
		<p><a href="/w3cnote/runoob-user-test-intro.html#invite" target="_blank">注册邀请码获取方式</a></p>-->
	</div>
		
	<form action="http://www.runoob.com/wp-content/themes/runoob/option/addnote.php" method="post" id="commentform" style="display:none;"><div id="comment-status" style="display:none;"></div>
		<div class="comt">
			<div class="comt-title">
				<i style="font-size:36px;" class="fa fa-user-circle" aria-hidden="true"></i>				<p><a id="cancel-comment-reply-link" href="javascript:;">取消</a></p>
			</div>
			<div class="comt-box">
			<div class="simditor simditor-mac">
  <div class="simditor-wrapper"><div class="simditor-toolbar" style="top: 0px;"><ul><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-bold" href="javascript:;" title="加粗文字 ( Cmd + b )"><span class="simditor-icon simditor-icon-bold"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-code" href="javascript:;" title="插入代码"><span class="simditor-icon simditor-icon-code"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-ul" href="javascript:;" title="无序列表 ( Cmd + . )"><span class="simditor-icon simditor-icon-list-ul"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-ol" href="javascript:;" title="有序列表 ( Cmd + / )"><span class="simditor-icon simditor-icon-list-ol"></span></a></li><li><a tabindex="-1" unselectable="on" class="toolbar-item toolbar-item-image" href="javascript:;" title="插入图片"><span class="simditor-icon simditor-icon-picture-o"></span></a></li></ul></div>
    <div class="simditor-placeholder" style="display: block;">写笔记...</div>
    <div class="simditor-body" contenteditable="true"><p><br></p></div>
  <div id="mded"></div></div>
<div class="simditor-popover code-popover"><div class="code-settings">
  <div class="settings-field">
    <select class="select-lang">
      <option value="-1">选择程序语言</option>
    <option value="bash">Bash</option><option value="c++">C++</option><option value="cs">C#</option><option value="css">CSS</option><option value="erlang">Erlang</option><option value="less">Less</option><option value="sass">Sass</option><option value="diff">Diff</option><option value="coffeescript">CoffeeScript</option><option value="html">HTML,XML</option><option value="json">JSON</option><option value="java">Java</option><option value="js">JavaScript</option><option value="markdown">Markdown</option><option value="oc">Objective C</option><option value="php">PHP</option><option value="parl">Perl</option><option value="python">Python</option><option value="ruby">Ruby</option><option value="sql">SQL</option></select>
  </div>
</div></div><div class="simditor-popover image-popover"><div class="link-settings">
  <div class="settings-field">
    <label>图片地址</label>
    <input class="image-src" type="text" tabindex="1">
    
  </div>
  <div class="settings-field">
    <label>图片描述</label>
    <input class="image-alt" id="image-alt" type="text" tabindex="1">
  </div>
  <div class="settings-field">
    <label>图片尺寸</label>
    <input class="image-size" id="image-width" type="text" tabindex="2">
    <span class="times">×</span>
    <input class="image-size" id="image-height" type="text" tabindex="3">
    <a class="btn-restore" href="javascript:;" title="还原图片尺寸" tabindex="-1">
      <span class="simditor-icon simditor-icon-undo"></span>
    </a>
  </div>
</div></div></div>
			
				<div class="comt-ctrl">
					<div class="comt-tips"><input type="hidden" name="comment_post_ID" value="7464" id="comment_post_ID">
<input type="hidden" name="comment_parent" id="comment_parent" value="0">
</div>
					<button type="submit" name="submit" id="submit" tabindex="5"><i class="fa fa-pencil" aria-hidden="true"></i> 分享笔记</button>
				</div>
			</div>
		
				
					<div class="comt-comterinfo"> 
						<ul id="comment-author-info">
							<li class="form-inline"><label class="hide" for="author">昵称</label><input class="ipt" type="text" name="author" id="author" value="" tabindex="2" placeholder="昵称"><span class="text-muted">昵称 (必填)</span></li>
							<li class="form-inline"><label class="hide" for="email">邮箱</label><input class="ipt" type="text" name="email" id="email" value="" tabindex="3" placeholder="邮箱"><span class="text-muted">邮箱 (必填)</span></li>
							<li class="form-inline"><label class="hide" for="url">引用地址</label><input class="ipt" type="text" name="url" id="url" value="" tabindex="4" placeholder="引用地址"><span class="text-muted">引用地址</span></li>
						</ul>
					</div>
				
			
		</div>

	</form>
	</div>
<script type="text/javascript">
$(function() {
	//初始化编辑器
	
	var editor = new Simditor({
	  textarea: $('#mded'),
	  placeholder: '写笔记...',
	  upload:false,
	 // upload: {url:'/api/comment_upload_file.php',params: null,fileKey: 'upload_file',connectionCount: 1,leaveConfirm: '文件正在上传，您确定离开?'},
	  defaultImage: 'http://www.runoob.com/images/logo.png',
	  codeLanguages: '',
	  toolbar: [  'bold','code','ul','ol','image' ]
	});
	editor.on('selectionchanged', function() {
		$(".code-popover").hide();
	});

	// 提交数据
	$("#share_code").click(function() {
		$(".comment-signarea").hide();
		$("#commentform").show();
		
	});
	$("#user_add_note").click(function() {
		$(".comment-signarea").hide();
		$("#commentform").show();
		$('html, body').animate({
       	    scrollTop: $("#respond").offset().top
    	}, 200);
	});

	// 提交笔记
	var commentform=$('#commentform');
	commentform.prepend('<div id="comment-status" style="display:none;" ></div>');
	var statusdiv=$('#comment-status');
	
	commentform.submit(function(e){
		e.preventDefault();
		var noteContent = editor.getValue();
		// console.log(noteContent);
		noteContent = noteContent.replace(/<pre><code>/g,"<pre>");
		noteContent = noteContent.replace(/<\/code><\/pre>/g,"</pre>");
		
		// 系列化表单数据
		var comment_parent = 0;
		var is_user_logged_in = $("#is_user_logged_in").val();
		var comment_post_ID =  7464;
		var _wp_unfiltered_html_comment = $("#_wp_unfiltered_html_comment").val();
		var comment = noteContent;
		var author = $("#author").val();
		var url = $("#url").val();
		var email = $("#email").val();
		if(isBlank(author) && is_user_logged_in==0) {
			statusdiv.html('<p  class="ajax-error">请输入昵称！</p>').show();
		} else if(isBlank(email)  && is_user_logged_in==0) {
			statusdiv.html('<p  class="ajax-error">请输入邮箱！</p>').show();
		} else {
			// var formdata=commentform.serialize() + "&comment=" + noteContent ;
			// 添加状态信息
			statusdiv.html('<p>Processing...</p>').show();
			// 获取表单提交地址
			var formurl=commentform.attr('action');
			
			// 异步提交
			$.ajax({
					type: 'post',
					url: formurl,
					dataType:'json',
					data: {"comment_parent":comment_parent,"comment_post_ID":comment_post_ID, "_wp_unfiltered_html_comment":_wp_unfiltered_html_comment,"comment":comment,"url":url, "email":email,"author":author},
					error: function(XMLHttpRequest, textStatus, errorThrown){
					statusdiv.html('<p class="ajax-error" >数据不完整或表单提交太快了！</p>').show();
				},
				success: function(data, textStatus){
					if(data.errorno=="0") {
						$("#submit").prop('disabled', true);
						statusdiv.html('<p class="ajax-success" >笔记已提交审核，感谢分享笔记！</p>').show();
						alert('笔记已提交审核，感谢分享笔记！');
					}else{
						statusdiv.html('<p class="ajax-error" >'+data.msg+'</p>').show();
					}
					commentform.find('textarea[name=comment]').val('');
				}
			});
			setTimeout(function(){
		        $("#submit").prop('disabled', false);
		    }, 10*1000);
		}
		return false;

	});
	
});
function isBlank(str) {
    return (!str || /^\s*$/.test(str));
}
</script>

<link rel="stylesheet" href="./Python3 输入和输出 _ 菜鸟教程_files/qa.css">
<link rel="stylesheet" type="text/css" href="./Python3 输入和输出 _ 菜鸟教程_files/simditor.min.css">
<script type="text/javascript" src="./Python3 输入和输出 _ 菜鸟教程_files/module.js"></script>
<script type="text/javascript" src="./Python3 输入和输出 _ 菜鸟教程_files/hotkeys.js"></script>
<script type="text/javascript" src="./Python3 输入和输出 _ 菜鸟教程_files/uploader.js"></script>
<script type="text/javascript" src="./Python3 输入和输出 _ 菜鸟教程_files/simditor.min.js"></script>		<div class="sidebar-box ad-box ad-box-large">
				<div id="ad-336280">
		<script async="" src="./Python3 输入和输出 _ 菜鸟教程_files/f(7).txt"></script>
		<!-- 移动版 自动调整 -->
		<ins class="adsbygoogle" style="display: block; height: 100px;" data-ad-client="ca-pub-5751451760833794" data-ad-slot="1691338467" data-ad-format="auto" data-adsbygoogle-status="done"><ins id="aswift_0_expand" style="display: inline-table; border: none; height: 100px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 812px; background-color: transparent;"><ins id="aswift_0_anchor" style="display: block; border: none; height: 100px; margin: 0px; padding: 0px; position: relative; visibility: visible; width: 812px; background-color: transparent; overflow: hidden;"><iframe width="812" height="100" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_0" name="aswift_0" style="left: 0px; position: absolute; top: 0px; border: 0px; width: 812px; height: 100px;" src="./Python3 输入和输出 _ 菜鸟教程_files/saved_resource(1).html"></iframe></ins></ins></ins>
		<script>
		(adsbygoogle = window.adsbygoogle || []).push({});
		</script>
		</div>
				</div>
		
	</div>
</div>
	

<!-- 右边栏 -->
<div class="fivecol last right-column">
<!--
	<div class="tab tab-light-blue" style="text-align: center;">关注微信</div>
	<div class="sidebar-box">
		<a href="http://m.runoob.com/" target="_blank"> <img src="http://www.runoob.com/wp-content/themes/w3cschool.cc/assets/img/qrcode.jpg" alt="移动版"> </a>
		<div class="qqinfo">
		 <a target="_blank" href="http://jq.qq.com/?_wv=1027&k=dOwwKN" id="qqhref">
		<img border="0" src="http://pub.idqqimg.com/wpa/images/group.png" alt="菜鸟家族" title="菜鸟家族"></a>
		<span>(群号：<span id="qqid">365967760</span>)</span>
		</div>
		
	</div>
	-->
<style>
.sidebar-tree .double-li {
	width:300px;
}
.sidebar-tree .double-li li {
    width: 44%;
    line-height: 1.5em;
    border-bottom: 1px solid #ccc;
    float: left;
    display: inline;
}
</style>

	
		<div class="sidebar-box ad-box ad-box-large">
		<div class="sidebar-box advertise-here" style="margin: 0 auto;">
			<a href="javascript:void(0);" style="font-size: 16px; color:#64854c;font-weight:bold;"> <i class="fa fa-list" aria-hidden="true"></i> 分类导航</a>
		</div>
	<div class="sidebar-box sidebar-cate">
		
		<div class="sidebar-tree">
			<ul><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> HTML / CSS</a><ul class="double-li"><li><a title="HTML 教程" href="http://www.runoob.com/html/html-tutorial.html">HTML 教程</a></li><li><a title="HTML5 教程" href="http://www.runoob.com/html/html5-intro.html">HTML5 教程</a></li><li><a title="CSS 教程" href="http://www.runoob.com/css/css-tutorial.html">CSS 教程</a></li><li><a title="CSS3 教程" href="http://www.runoob.com/css3/css3-tutorial.html">CSS3 教程</a></li><li><a title="Bootstrap3 教程" href="http://www.runoob.com/bootstrap/bootstrap-tutorial.html">Bootstrap3 教程</a></li><li><a title="Bootstrap4 教程" href="http://www.runoob.com/bootstrap4/bootstrap4-tutorial.html">Bootstrap4 教程</a></li><li><a title="Font Awesome 教程" href="http://www.runoob.com/font-awesome/fontawesome-tutorial.html">Font Awesome 教程</a></li><li><a title="Foundation 教程" href="http://www.runoob.com/foundation/foundation-tutorial.html">Foundation 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> JavaScript</a><ul class="double-li"><li><a title="JavaScript 教程" href="http://www.runoob.com/js/js-tutorial.html">JavaScript 教程</a></li><li><a title="HTML DOM 教程" href="http://www.runoob.com/htmldom/htmldom-tutorial.html">HTML DOM 教程</a></li><li><a title="jQuery 教程" href="http://www.runoob.com/jquery/jquery-tutorial.html">jQuery 教程</a></li><li><a title="AngularJS 教程" href="http://www.runoob.com/angularjs/angularjs-tutorial.html">AngularJS 教程</a></li><li><a title="AngularJS2 教程" href="http://www.runoob.com/angularjs2/angularjs2-tutorial.html">AngularJS2 教程</a></li><li><a title="Vue.js 教程" href="http://www.runoob.com/vue2/vue-tutorial.html">Vue.js 教程</a></li><li><a title="React 教程" href="http://www.runoob.com/react/react-tutorial.html">React 教程</a></li><li><a title="TypeScript 教程" href="http://www.runoob.com/typescript/ts-tutorial.html">TypeScript 教程</a></li><li><a title="jQuery UI 教程" href="http://www.runoob.com/jqueryui/jqueryui-tutorial.html">jQuery UI 教程</a></li><li><a title="jQuery EasyUI 教程" href="http://www.runoob.com/jeasyui/jqueryeasyui-tutorial.html">jQuery EasyUI 教程</a></li><li><a title="Node.js 教程" href="http://www.runoob.com/nodejs/nodejs-tutorial.html">Node.js 教程</a></li><li><a title="AJAX 教程" href="http://www.runoob.com/ajax/ajax-tutorial.html">AJAX 教程</a></li><li><a title="JSON 教程" href="http://www.runoob.com/json/json-tutorial.html">JSON 教程</a></li><li><a title="Highcharts 教程" href="http://www.runoob.com/highcharts/highcharts-tutorial.html">Highcharts 教程</a></li><li><a title="Google 地图 教程" href="http://www.runoob.com/googleapi/google-maps-basic.html">Google 地图 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 服务端</a><ul class="double-li"><li><a title="PHP 教程" href="http://www.runoob.com/php/php-tutorial.html">PHP 教程</a></li><li><a title="Python 教程" href="http://www.runoob.com/python/python-tutorial.html">Python 教程</a></li><li><a title="Python3 教程" href="http://www.runoob.com/python3/python3-tutorial.html">Python3 教程</a></li><li><a title="Django 教程" href="http://www.runoob.com/django/django-tutorial.html">Django 教程</a></li><li><a title="Linux 教程" href="http://www.runoob.com/linux/linux-tutorial.html">Linux 教程</a></li><li><a title="Docker 教程" href="http://www.runoob.com/docker/docker-tutorial.html">Docker 教程</a></li><li><a title="Ruby 教程" href="http://www.runoob.com/ruby/ruby-tutorial.html">Ruby 教程</a></li><li><a title="Java 教程" href="http://www.runoob.com/java/java-tutorial.html">Java 教程</a></li><li><a title="C 教程" href="http://www.runoob.com/c/c-tutorial.html">C 教程</a></li><li><a title="C++ 教程" href="http://www.runoob.com/cplusplus/cpp-tutorial.html">C++ 教程</a></li><li><a title="Perl 教程" href="http://www.runoob.com/perl/perl-tutorial.html">Perl 教程</a></li><li><a title="Servlet 教程" href="http://www.runoob.com/servlet/servlet-tutorial.html">Servlet 教程</a></li><li><a title="JSP 教程" href="http://www.runoob.com/jsp/jsp-tutorial.html">JSP 教程</a></li><li><a title="Lua 教程" href="http://www.runoob.com/lua/lua-tutorial.html">Lua 教程</a></li><li><a title="Scala 教程" href="http://www.runoob.com/scala/scala-tutorial.html">Scala 教程</a></li><li><a title="Go 教程" href="http://www.runoob.com/go/go-tutorial.html">Go 教程</a></li><li><a title="设计模式" href="http://www.runoob.com/design-pattern/design-pattern-tutorial.html">设计模式</a></li><li><a title="正则表达式" href="http://www.runoob.com/regexp/regexp-tutorial.html">正则表达式</a></li><li><a title="Maven 教程" href="http://www.runoob.com/maven/maven-tutorial.html">Maven 教程</a></li><li><a title="NumPy 教程" href="http://www.runoob.com/numpy/numpy-tutorial.html">NumPy 教程</a></li><li><a title="ASP 教程" href="http://www.runoob.com/asp/asp-tutorial.html">ASP 教程</a></li><li><a title="AppML 教程" href="http://www.runoob.com/appml/appml-tutorial.html">AppML 教程</a></li><li><a title="VBScript 教程" href="http://www.runoob.com/vbscript/vbscript-tutorial.html">VBScript 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 数据库</a><ul class="double-li"><li><a title="SQL 教程" href="http://www.runoob.com/sql/sql-tutorial.html">SQL 教程</a></li><li><a title="Mysql 教程" href="http://www.runoob.com/mysql/mysql-tutorial.html">Mysql 教程</a></li><li><a title="SQLite 教程" href="http://www.runoob.com/sqlite/sqlite-tutorial.html">SQLite 教程</a></li><li><a title="MongoDB 教程" href="http://www.runoob.com/mongodb/mongodb-tutorial.html">MongoDB 教程</a></li><li><a title="Redis 教程" href="http://www.runoob.com/redis/redis-tutorial.html">Redis 教程</a></li><li><a title="Memcached 教程" href="http://www.runoob.com/Memcached/Memcached-tutorial.html">Memcached 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 移动端</a><ul class="double-li"><li><a title="Android 教程" href="http://www.runoob.com/w3cnote/android-tutorial-intro.html">Android 教程</a></li><li><a title="Swift 教程" href="http://www.runoob.com/swift/swift-tutorial.html">Swift 教程</a></li><li><a title="jQuery Mobile 教程" href="http://www.runoob.com/jquerymobile/jquerymobile-tutorial.html">jQuery Mobile 教程</a></li><li><a title="ionic 教程" href="http://www.runoob.com/ionic/ionic-tutorial.html">ionic 教程</a></li><li><a title="Kotlin 教程" href="http://www.runoob.com/kotlin/kotlin-tutorial.html">Kotlin 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> XML 教程</a><ul class="double-li"><li><a title="XML 教程" href="http://www.runoob.com/xml/xml-tutorial.html">XML 教程</a></li><li><a title="DTD 教程" href="http://www.runoob.com/dtd/dtd-tutorial.html">DTD 教程</a></li><li><a title="XML DOM 教程" href="http://www.runoob.com/dom/dom-tutorial.html">XML DOM 教程</a></li><li><a title="XSLT 教程" href="http://www.runoob.com/xsl/xsl-tutorial.html">XSLT 教程</a></li><li><a title="XPath 教程" href="http://www.runoob.com/xpath/xpath-tutorial.html">XPath 教程</a></li><li><a title="XQuery 教程" href="http://www.runoob.com/xquery/xquery-tutorial.html">XQuery 教程</a></li><li><a title="XLink 教程" href="http://www.runoob.com/xlink/xlink-tutorial.html">XLink 教程</a></li><li><a title="XPointer 教程" href="http://www.runoob.com/xlink/xlink-tutorial.html">XPointer 教程</a></li><li><a title="XML Schema 教程" href="http://www.runoob.com/schema/schema-tutorial.html">XML Schema 教程</a></li><li><a title="XSL-FO 教程" href="http://www.runoob.com/xslfo/xslfo-tutorial.html">XSL-FO 教程</a></li><li><a title="SVG 教程" href="http://www.runoob.com/svg/svg-tutorial.html">SVG 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> ASP.NET</a><ul class="double-li"><li><a title="ASP.NET 教程" href="http://www.runoob.com/aspnet/aspnet-tutorial.html">ASP.NET 教程</a></li><li><a title="C# 教程" href="http://www.runoob.com/csharp/csharp-tutorial.html">C# 教程</a></li><li><a title="Web Pages 教程" href="http://www.runoob.com/aspnet/webpages-intro.html">Web Pages 教程</a></li><li><a title="Razor 教程" href="http://www.runoob.com/aspnet/razor-intro.html">Razor 教程</a></li><li><a title="MVC 教程" href="http://www.runoob.com/aspnet/mvc-intro.html">MVC 教程</a></li><li><a title="Web Forms 教程" href="http://www.runoob.com/aspnet/aspnet-intro.html">Web Forms 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> Web Service</a><ul class="double-li"><li><a title="Web Service 教程" href="http://www.runoob.com/webservices/webservices-tutorial.html">Web Service 教程</a></li><li><a title="WSDL 教程" href="http://www.runoob.com/wsdl/wsdl-tutorial.html">WSDL 教程</a></li><li><a title="SOAP 教程" href="http://www.runoob.com/soap/soap-tutorial.html">SOAP 教程</a></li><li><a title="RSS 教程" href="http://www.runoob.com/rss/rss-tutorial.html">RSS 教程</a></li><li><a title="RDF 教程" href="http://www.runoob.com/rdf/rdf-tutorial.html">RDF 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 开发工具</a><ul class="double-li"><li><a title="Eclipse 教程" href="http://www.runoob.com/eclipse/eclipse-tutorial.html">Eclipse 教程</a></li><li><a title="Git 教程" href="http://www.runoob.com/git/git-tutorial.html">Git 教程</a></li><li><a title="Svn 教程" href="http://www.runoob.com/svn/svn-tutorial.html">Svn 教程</a></li><li><a title="Firebug 教程" href="http://www.runoob.com/firebug/firebug-tutorial.html">Firebug 教程</a></li></ul></li><li style="margin: 0;"><a href="javascript:void(0);" class="tit"> 网站建设</a><ul class="double-li"><li><a title="HTTP 教程" href="http://www.runoob.com/http/http-tutorial.html">HTTP 教程</a></li><li><a title="网站建设指南" href="http://www.runoob.com/web/web-buildingprimer.html">网站建设指南</a></li><li><a title="浏览器信息" href="http://www.runoob.com/browsers/browser-information.html">浏览器信息</a></li><li><a title="网站主机教程" href="http://www.runoob.com/hosting/hosting-tutorial.html">网站主机教程</a></li><li><a title="TCP/IP 教程" href="http://www.runoob.com/tcpip/tcpip-tutorial.html">TCP/IP 教程</a></li><li><a title="W3C 教程" href="http://www.runoob.com/w3c/w3c-tutorial.html">W3C 教程</a></li><li><a title="网站品质" href="http://www.runoob.com/quality/quality-tutorial.html">网站品质</a></li></ul></li></ul>			</div>
	
	</div>
	</div>
	<br>
	
	<div class="sidebar-box ad-box ad-box-large">
		<div class="sidebar-box advertise-here">
			<a href="javascript:void(0);">Advertisement</a>
		</div>
		<div class="ad-600160" id="sidebar-right-ads">
				<script async="" src="./Python3 输入和输出 _ 菜鸟教程_files/f(7).txt"></script>
		<!-- 侧栏1 -->
		<ins class="adsbygoogle" style="display:inline-block;width:160px;height:600px" data-ad-client="ca-pub-5751451760833794" data-ad-slot="4106274865" data-adsbygoogle-status="done"><ins id="aswift_1_expand" style="display:inline-table;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><ins id="aswift_1_anchor" style="display:block;border:none;height:600px;margin:0;padding:0;position:relative;visibility:visible;width:160px;background-color:transparent;"><iframe width="160" height="600" frameborder="0" marginwidth="0" marginheight="0" vspace="0" hspace="0" allowtransparency="true" scrolling="no" allowfullscreen="true" onload="var i=this.id,s=window.google_iframe_oncopy,H=s&amp;&amp;s.handlers,h=H&amp;&amp;H[i],w=this.contentWindow,d;try{d=w.document}catch(e){}if(h&amp;&amp;d&amp;&amp;(!d.body||!d.body.firstChild)){if(h.call){setTimeout(h,0)}else if(h.match){try{h=s.upd(h,i)}catch(e){}w.location.replace(h)}}" id="aswift_1" name="aswift_1" style="left:0;position:absolute;top:0;border:0px;width:160px;height:600px;" src="./Python3 输入和输出 _ 菜鸟教程_files/saved_resource(2).html"></iframe></ins></ins></ins>
		<script>
		(adsbygoogle = window.adsbygoogle || []).push({});
		</script>
				</div>
	</div>
</div></div>

</div>

<script>
var aid = 7464;
function coll() {
	$.post( '/wp-content/themes/runoob/option/user/userinfo.php', {aid:aid, action:"collarticle", opt:'add'},function( data ) {
		if(data.error==0) {
			$("#content").find("h1:first").find("a").attr("href","javascript:void(0);");
			$("#content").find("h1:first").find("img").attr("src","http://www.runoob.com/wp-content/themes/runoob/assets/img/coll2.png").css({width:32+"px",height:32+"px"});
		}
		alert(data.msg);
	},'json');
}
</script>


<!-- 反馈对话框开始 -->
<script src="./Python3 输入和输出 _ 菜鸟教程_files/feedback.js"></script>
<link rel="stylesheet" href="./Python3 输入和输出 _ 菜鸟教程_files/feedback.css">
<script type="text/javascript">
$.feedback({
    ajaxURL: '/feedback/runoob_feedback.php',
    html2canvasURL: '/wp-content/themes/runoob/assets/feedback/stable/2.0/html2canvas.js'
});
</script><button class="feedback-btn feedback-btn-gray" style="display: inline-block;">反馈/建议</button>
<!-- 反馈对话框结束 -->
<button class="feedback-btn feedback-btn-gray" style="display: inline-block;">反馈/建议</button>
<!-- 底部 -->


<div id="footer" class="mar-t50">
   <div class="runoob-block">
    <div class="runoob cf">
     <dl>
      <dt>
       在线实例
      </dt>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/html/html-examples.html">HTML 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/css/css-examples.html">CSS 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/js/js-examples.html">JavaScript 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/ajx/ajax-examples.html">Ajax 实例</a>
      </dd>
       <dd>
       ·<a target="_blank" href="http://www.runoob.com/jquery/jquery-examples.html">jQuery 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/xml/xml-examples.html">XML 实例</a>
      </dd>
      <dd>
       ·<a target="_blank" href="http://www.runoob.com/java/java-examples.html">Java 实例</a>
      </dd>
     
     </dl>
     <dl>
      <dt>
      字符集&amp;工具
      </dt>
      <dd>
       · <a target="_blank" href="http://www.runoob.com/charsets/html-charsets.html">HTML 字符集设置</a>
      </dd>
      <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/html-ascii.html">HTML ASCII 字符集</a>
      </dd>
     <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/ref-entities.html">HTML ISO-8859-1</a>
      </dd> 
      <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/html-symbols.html">HTML 实体符号</a>
      </dd>
      <dd>
       · <a target="_blank" href="http://www.runoob.com/tags/html-colorpicker.html">HTML 拾色器</a>
      </dd>
      <dd>
       · <a target="_blank" href="http://c.runoob.com/front-end/53">JSON 格式化工具</a>
      </dd>
     </dl>
     <dl>
      <dt>
       最新更新
      </dt>
                   <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/w3c-webauthn.html" title="W3C 宣布：WebAuthn 成为正式 Web 标准">W3C 宣布：WebAu...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/knowledge-start.html" title="建个圈子，分享资源">建个圈子，分享资源</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/linux-command-full-fight.html" title="Linux 常用命令全拼">Linux 常用命令全拼</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/octotree-github-repo.html" title="octotree — 树形展示 Github 项目代码">octotree —...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/php/func-string-mb_substr.html" title="PHP mb_substr() 函数">PHP mb_substr()...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/factory-pattern.html" title="设计模式 – 工厂模式">设计模式 –...</a>
      </dd>
              <dd>
       ·
      <a href="http://www.runoob.com/w3cnote/perl-output-chinese.html" title="解决 Perl 输出中文乱码问题">解决 Perl 输出...</a>
      </dd>
             </dl>
     <dl>
      <dt>
       站点信息
      </dt>
      <dd>
       ·
       <a target="_blank" href="http://mail.qq.com/cgi-bin/qm_share?t=qm_mailme&amp;email=ssbDyoOAgfLU3crf09venNHd3w" rel="external nofollow">意见反馈</a>
      <!--<a class="wxpopup" onclick="popFunction()">合作联系
       <span class="popuptext" id="myPopup">微信(注明来意)：<strong>centos5</strong></span>
      </a>-->
      </dd>
      
     
      <dd>
       ·
      
      <a class="wxpopup" onclick="popFunction()">合作联系
       <span class="popuptext" id="myPopup">微信(注明来意)：<strong>centos5</strong></span>
      </a>
      </dd>
     
      <dd>
       ·
      <a target="_blank" href="http://www.runoob.com/disclaimer">免责声明</a>
       </dd>
          <!--
       <dd style="display: block;">
       &middot;
      <a href="javascript:void(0)" onclick="dashangToggle()" style="font-weight:bold;color:#f00;" title="打赏，支持一下">打赏一下</a>
       </dd>
     -->
      <dd>
       ·
       <a target="_blank" href="http://www.runoob.com/aboutus">关于我们</a>
       </dd>
      <dd>
       ·
      <a target="_blank" href="http://www.runoob.com/archives">文章归档</a>
      </dd>
    
     </dl>
    
     <div class="search-share">
      <div class="app-download">
        <div>
         <strong>关注微信</strong>
        </div>
      </div>
      <div class="share">
            <img width="128" height="128" src="./Python3 输入和输出 _ 菜鸟教程_files/qrcode.png">
       </div>
     </div>
     
    </div>
   </div>
   <div class="w-1000 copyright">
     Copyright © 2013-2019    <strong><a href="http://www.runoob.com/" target="_blank">菜鸟教程</a></strong>&nbsp;
    <strong><a href="http://www.runoob.com/" target="_blank">runoob.com</a></strong> All Rights Reserved. 备案号：闽ICP备15012807号-1
   </div>
  </div>
  <div class="fixed-btn">
    <a class="go-top" href="javascript:void(0)" title="返回顶部"> <i class="fa fa-angle-up"></i></a>
    <a class="qrcode" href="javascript:void(0)" title="关注我们"><i class="fa fa-qrcode"></i></a>
    <a class="writer" style="" href="javascript:void(0)" title="标记/收藏"><i class="fa fa-star" aria-hidden="true"></i></a>
    <!-- qrcode modal -->
    <div id="bottom-qrcode" class="modal panel-modal hide fade in">
      <h4>微信关注</h4>
      <div class="panel-body"><img alt="微信关注" width="128" height="128" src="./Python3 输入和输出 _ 菜鸟教程_files/qrcode.png"></div> 
    </div>
  </div>

  <div class="hide_box"></div>
    <div class="shang_box">
      <a class="shang_close" href="javascript:void(0)" onclick="dashangToggle()" title="关闭"><img src="./Python3 输入和输出 _ 菜鸟教程_files/close.jpg" alt="取消"></a>
       
      <div class="shang_tit">
        <p>感谢您的支持，我会继续努力的!</p>
      </div>
      <div class="shang_payimg">
        <img src="./Python3 输入和输出 _ 菜鸟教程_files/weipayimg.png" alt="扫码支持" title="扫一扫">
      </div>
        <div class="pay_explain">扫码打赏，你说多少就多少</div>
      <div class="shang_payselect">
        <div class="pay_item  checked" data-id="weipay">
          <span class="radiobox"></span>
          <span class="pay_logo"><img src="./Python3 输入和输出 _ 菜鸟教程_files/wechat.jpg" alt="微信"></span>
        </div>
        <div class="pay_item" data-id="alipay">
          <span class="radiobox"></span>
          <span class="pay_logo"><img src="./Python3 输入和输出 _ 菜鸟教程_files/alipay.jpg" alt="支付宝"></span>
        </div>
        
      </div>
      <div class="shang_info">
        <p>打开<span id="shang_pay_txt">支付宝</span>扫一扫，即可进行扫码打赏哦</p>
        <p><a href="http://c.runoob.com/codedemo/5348" target="_blank"><span style=" font-size: 14px;color: #000;font-weight: bold;">点我查看本站打赏源码！</span></a></p>
      </div>
    </div>
  <div id="testClick"></div>
 <div style="display:none;">
 
 <script>
var _hmt = _hmt || [];
(function() {
  var hm = document.createElement("script");
  hm.src = "https://hm.baidu.com/hm.js?3eec0b7da6548cf07db3bc477ea905ee";
  var s = document.getElementsByTagName("script")[0]; 
  s.parentNode.insertBefore(hm, s);
})();
</script>
<script async="" src="./Python3 输入和输出 _ 菜鸟教程_files/js"></script>
<script>
  window.dataLayer = window.dataLayer || [];
  function gtag(){dataLayer.push(arguments);}
  gtag('js', new Date());

  gtag('config', 'UA-84264393-2');
</script>
</div>
<script>
window.jsui={
    www: '//wwww.runoob.com',
    uri: '//www.runoob.com/wp-content/themes/runoob'
};
</script>
<style>
ol,ul{list-style:none}.cd-switcher a{text-decoration:none;outline:0}.cd-switcher a:hover{text-decoration:underline}a:focus{outline:0;-moz-outline:0}.main_nav{width:300px;height:60px;margin:60px auto 10px auto}.main_nav li{float:left;width:60px;margin-right:10px;font-size:16px;padding:.6em 1em;border-radius:3em;background:#2f889a;text-align:center}.main_nav li a{color:#fff}.errtip{background-color:#fceaea;color:#db5353;padding:8px 15px;font-size:14px;border:1px solid #fc9797;border-radius:5px}.cd-user-modal{position:fixed;top:0;left:0;width:100%;height:100%;background:rgba(52,54,66,0.9);z-index:3;overflow-y:auto;cursor:pointer;visibility:hidden;opacity:0;-webkit-transition:opacity .3s 0,visibility 0 .3s;-moz-transition:opacity .3s 0,visibility 0 .3s;transition:opacity .3s 0,visibility 0 .3s}.cd-user-modal.is-visible{visibility:visible;opacity:1;-webkit-transition:opacity .3s 0,visibility 0 0;-moz-transition:opacity .3s 0,visibility 0 0;transition:opacity .3s 0,visibility 0 0}.cd-user-modal.is-visible .cd-user-modal-container{-webkit-transform:translateY(0);-moz-transform:translateY(0);-ms-transform:translateY(0);-o-transform:translateY(0);transform:translateY(0)}.cd-user-modal-container{position:relative;width:90%;max-width:500px;background:#FFF;margin:3em auto 4em;cursor:auto;border-radius:.25em;-webkit-transform:translateY(-30px);-moz-transform:translateY(-30px);-ms-transform:translateY(-30px);-o-transform:translateY(-30px);transform:translateY(-30px);-webkit-transition-property:-webkit-transform;-moz-transition-property:-moz-transform;transition-property:transform;-webkit-transition-duration:.3s;-moz-transition-duration:.3s;transition-duration:.3s}.cd-user-modal-container .cd-switcher:after{content:"";display:table;clear:both}.cd-user-modal-container .cd-switcher li{width:50%;float:left;text-align:center}.cd-user-modal-container .cd-switcher li:first-child a{border-radius:.25em 0 0 0}.cd-user-modal-container .cd-switcher li:last-child a{border-radius:0 .25em 0 0}.cd-user-modal-container .cd-switcher a{font-size:1.2em;font-weight:bold;display:block;width:100%;height:50px;line-height:50px;background:#e8f1e2;color:#96b880}.cd-user-modal-container .cd-switcher a.selected{background:#FFF;color:#505260}@media only screen and (min-width:600px){.cd-user-modal-container{margin:4em auto}.cd-user-modal-container .cd-switcher a{height:70px;line-height:70px}}.cd-form{padding:1.4em}.cd-form .fieldset{position:relative;margin:1.4em 0}.cd-form .fieldset:first-child{margin-top:0}.cd-form .fieldset:last-child{margin-bottom:0}.cd-form label{font-size:16px;font-size:.875rem}.cd-form label.image-replace{display:inline-block;position:absolute;left:15px;top:50%;bottom:auto;-webkit-transform:translateY(-50%);-moz-transform:translateY(-50%);-ms-transform:translateY(-50%);-o-transform:translateY(-50%);transform:translateY(-50%);height:20px;width:20px;overflow:hidden;text-indent:100%;white-space:nowrap;color:transparent;text-shadow:none;background-repeat:no-repeat;background-position:50% 0}.cd-form label.cd-username{background-image:url("/wp-content/themes/runoob/assets/img/cd-icon-username.svg")}.cd-form label.cd-email{background-image:url("/wp-content/themes/runoob/assets/img/cd-icon-email.svg")}.cd-form label.cd-password{background-image:url("/wp-content/themes/runoob/assets/img/cd-icon-password.svg")}.cd-form input{margin:0;padding:0;border-radius:.25em}.cd-form input.full-width{width:80%}.cd-form input.full-width2{width:94%}.cd-form input.has-padding{padding:12px 20px 12px 50px}.cd-form input.has-border{border:1px solid #d2d8d8;-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;-o-appearance:none;appearance:none}.cd-form input.has-border:focus{border-color:#98b880;box-shadow:0 0 5px rgba(52,54,66,0.1);outline:0}.cd-form input.has-error{border:1px solid #d76666}.cd-form input[type=password]{padding-right:65px}.cd-form input[type=submit]{padding:16px 0;cursor:pointer;background:#96b97d;color:#FFF;font-weight:bold;border:0;-webkit-appearance:none;-moz-appearance:none;-ms-appearance:none;-o-appearance:none;appearance:none;font-size:1.2em;font-weight:bold}.no-touch .cd-form input[type=submit]:hover,.no-touch .cd-form input[type=submit]:focus{background:#3599ae;outline:0}@media only screen and (min-width:600px){.cd-form{padding:2em}.cd-form .fieldset{margin:2em 0}.cd-form .fieldset:first-child{margin-top:0}.cd-form .fieldset:last-child{margin-bottom:0}.cd-form input.has-padding{padding:16px 20px 16px 50px}.cd-form input[type=submit]{padding:16px 0}}.cd-close-form{display:block;position:absolute;width:40px;height:40px;right:0;top:-40px;background:url("/wp-content/themes/runoob/assets/img/cd-icon-close.svg") no-repeat center center;text-indent:100%;white-space:nowrap;overflow:hidden}@media only screen and (min-width:1170px){}#cd-login,#cd-signup,#cd-reset-password{display:none}#cd-login.is-selected,#cd-signup.is-selected,#cd-reset-password.is-selected{display:block}
</style>
<div class="cd-user-modal"> 
	<div class="cd-user-modal-container">
		<ul class="cd-switcher">
			<li><a href="javascript:;">用户登录</a></li>
			<li><a href="javascript:;">注册新用户</a></li>
		</ul>

		<div id="cd-login"> <!-- 登录表单 -->
			<div class="cd-form">
				<p class="fieldset">
					<label class="image-replace cd-username" for="signin-username">用户名</label>
					<input class="full-width has-padding has-border" id="signin-username" name="username" type="text" placeholder="输入用户名">
				</p>

				<p class="fieldset">
					<label class="image-replace cd-password" for="signin-password">密码</label>
					<input class="full-width has-padding has-border" id="signin-password" name="password" type="password" placeholder="输入密码">
				</p>
				
				<p class="fieldset">
					<input type="checkbox" id="remember-me" checked="">
					<label for="remember-me">记住登录状态</label>
          <a href="http://www.runoob.com/reset-password" style="float: right;padding-right: 20px;" target="_blank">忘记密码？</a>
				</p>
 				<input type="hidden" name="action" value="signin">
				<p class="fieldset">
					<input class="full-width2" type="submit" value="登 录">
				</p>
        <div class="err-msg"></div>
			</div>
		</div>

		<div id="cd-signup"> <!-- 注册表单 -->
			<div class="cd-form">
				<p class="fieldset">
					<label class="image-replace cd-password" for="verifycode">邀请码</label>
					<input class="full-width has-padding has-border" id="signup-verifycode" name="verifycode" type="text" placeholder="输入邀请码">
				</p>
				<p class="fieldset">
					<label class="image-replace cd-username" for="signup-username">用户名</label>
					<input class="full-width has-padding has-border" id="signup-username" name="name" type="text" placeholder="输入用户名">
				</p>

				<p class="fieldset">
					<label class="image-replace cd-email" for="signup-email">邮箱</label>
					<input class="full-width has-padding has-border" name="email" id="signup-email" type="email" placeholder="输入mail">
				</p>

				<p class="fieldset">
					<label class="image-replace cd-password" for="signup-password">密码</label>
					<input class="full-width has-padding has-border" id="signup-password" name="password" type="password" placeholder="输入密码">
				</p>
				<p class="fieldset">
					<label class="image-replace cd-password" for="signup-password2">重复输入密码</label>
					<input class="full-width has-padding has-border" id="signup-password2" name="password2" type="password" placeholder="重复输入密码">
				</p>
				
				<!-- 
				<p class="fieldset">
					<input type="checkbox" id="accept-terms">
					<label for="accept-terms">我已阅读并同意 <a href="javascript:;">用户协议</a></label>
				</p>
				 -->
				 
				 <input type="hidden" name="action" value="signup">
				<p class="fieldset">
					<input class="full-width2" type="submit" value="注册新用户">
				</p>
				<p class="fieldset">
				  <a href="http://www.runoob.com/w3cnote/runoob-user-test-intro.html#invite" target="_blank">如何获取邀请码？</a>
				  </p>
				<div class="err-msg"></div>
			</div>

		</div>

		<a href="javascript:;" class="cd-close-form">关闭</a>
	</div>
</div> 
<script src="./Python3 输入和输出 _ 菜鸟教程_files/main.min.js"></script>


<iframe id="google_osd_static_frame_9019800801837" name="google_osd_static_frame" style="display: none; width: 0px; height: 0px;" src="./Python3 输入和输出 _ 菜鸟教程_files/saved_resource(3).html"></iframe></body><iframe id="google_shimpl" style="display: none;" src="./Python3 输入和输出 _ 菜鸟教程_files/saved_resource(4).html"></iframe><iframe id="google_esf" name="google_esf" src="./Python3 输入和输出 _ 菜鸟教程_files/zrt_lookup.html" data-ad-client="ca-pub-5751451760833794" style="display: none;"></iframe></html>